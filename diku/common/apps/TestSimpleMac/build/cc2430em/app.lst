C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE PRINT(.\app.lst) OBJECT(.\app.obj) SYMBOLS

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 150 "/usr/lib/gcc/x86_64-linux-gnu/4.7/include/stddef.h" 3
   9          typedef long int ptrdiff_t;
  10          //#line 213
  11          typedef long unsigned int size_t;
  12          //#line 325
  13          typedef int wchar_t;
  14          //# 8 "/usr/lib/ncc/deputy_nodeputy.h"
  15          /*struct __nesc_attr_nonnull {
  16          //#line 8
  17            int dummy;
  18          }  ;*/
  19          //#line 9
  20          /*struct __nesc_attr_bnd {
  21          //#line 9
  22            void *lo, *hi;
  23          }  ;*/
  24          //#line 10
  25          /*struct __nesc_attr_bnd_nok {
  26          //#line 10
  27            void *lo, *hi;
  28          }  ;*/
  29          //#line 11
  30          /*struct __nesc_attr_count {
  31          //#line 11
  32            int n;
  33          }  ;*/
  34          //#line 12
  35          /*struct __nesc_attr_count_nok {
  36          //#line 12
  37            int n;
  38          }  ;*/
  39          //#line 13
  40          /*struct __nesc_attr_one {
  41          //#line 13
  42            int dummy;
  43          }  ;*/
  44          //#line 14
  45          /*struct __nesc_attr_one_nok {
  46          //#line 14
  47            int dummy;
  48          }  ;*/
  49          //#line 15
  50          /*struct __nesc_attr_dmemset {
  51          //#line 15
  52            int a1, a2, a3;
  53          }  ;*/
  54          //#line 16
  55          /*struct __nesc_attr_dmemcpy {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 2   

  56          //#line 16
  57            int a1, a2, a3;
  58          }  ;*/
  59          //#line 17
  60          /*struct __nesc_attr_nts {
  61          //#line 17
  62            int dummy;
  63          }  ;*/
  64          //# 47 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/keil_stdint.h" 3
  65          typedef signed char int8_t;
  66          typedef short int16_t;
  67          
  68          
  69          
  70          typedef long int32_t;
  71          
  72          
  73          /*typedef long long int int64_t;*/
  74          
  75          
  76          
  77          
  78          typedef unsigned char uint8_t;
  79          typedef unsigned short uint16_t;
  80          
  81          
  82          
  83          typedef unsigned long uint32_t;
  84          
  85          
  86          /*typedef unsigned long long int uint64_t;*/
  87          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/stdint.h" 3
  88          typedef signed char int_least8_t;
  89          typedef short int int_least16_t;
  90          typedef long int_least32_t;
  91          
  92          
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          typedef unsigned char uint_least8_t;
 101          typedef unsigned short uint_least16_t;
 102          typedef unsigned long uint_least32_t;
 103          //#line 70
 104          typedef signed char int_fast8_t;
 105          
 106          
 107          
 108          
 109          
 110          typedef int int_fast16_t;
 111          typedef int int_fast32_t;
 112          
 113          
 114          
 115          
 116          
 117          typedef unsigned char uint_fast8_t;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 3   

 118          
 119          
 120          
 121          
 122          
 123          typedef unsigned int uint_fast16_t;
 124          typedef unsigned int uint_fast32_t;
 125          //#line 105
 126          typedef int intptr_t;
 127          
 128          
 129          typedef unsigned int uintptr_t;
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          /*__extension__*/ 
 139          typedef
 140                   float* intmax_t;
 141                
 142          /*__extension__*/ 
 143          typedef 
 144                   float* uintmax_t;
 145                
 146          //# 35 "/usr/include/inttypes.h" 3
 147          typedef int __gwchar_t;
 148          //#line 283
 149          //#line 279
 150          typedef struct __nesc_unnamed4242 {
 151          
 152            long int quot;
 153            long int rem;
 154          } imaxdiv_t;
 155          /*YYYYY } imaxdiv_t*///# 431 "/usr/lib/ncc/nesc_nx.h"
 156          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nx
             -base_nx_int8_t  ;
 157          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_
             -nxbase_nx_int16_t  ;
 158          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_
             -nxbase_nx_int32_t  ;
 159          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nes
             -c_nxbase_nx_int64_t  ;*/
 160          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_
             -nxbase_nx_uint8_t  ;
 161          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nes
             -c_nxbase_nx_uint16_t  ;
 162          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nes
             -c_nxbase_nx_uint32_t  ;
 163          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __n
             -esc_nxbase_nx_uint64_t  ;*/
 164          
 165          
 166          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_
             -nxbase_nxle_int8_t  ;
 167          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nes
             -c_nxbase_nxle_int16_t  ;
 168          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nes
             -c_nxbase_nxle_int32_t  ;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 4   

 169          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __n
             -esc_nxbase_nxle_int64_t  ;*/
 170          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nes
             -c_nxbase_nxle_uint8_t  ;
 171          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __n
             -esc_nxbase_nxle_uint16_t  ;
 172          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __n
             -esc_nxbase_nxle_uint32_t  ;
 173          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t _
             -_nesc_nxbase_nxle_uint64_t  ;*/
 174          //# 13 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/string.h"
 175          extern void *memset(void *s, char val, int n);
 176          //# 67 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
 177          union wait {
 178          
 179            int w_status;
 180            struct __nesc_unnamed4243 {
 181          
 182          
 183              unsigned int __w_termsig : 7;
 184              unsigned int __w_coredump : 1;
 185              unsigned int __w_retcode : 8;
 186              unsigned int  : 16;
 187            } 
 188          
 189          
 190          
 191          
 192          
 193          
 194            __wait_terminated;
 195            struct __nesc_unnamed4244 {
 196          
 197          
 198              unsigned int __w_stopval : 8;
 199              unsigned int __w_stopsig : 8;
 200              unsigned int  : 16;
 201            } 
 202          
 203          
 204          
 205          
 206          
 207            __wait_stopped;
 208          };
 209          //# 72 "/usr/include/stdlib.h" 3
 210          //#line 68
 211          typedef union __nesc_unnamed4245 {
 212          
 213            union wait *__uptr;
 214            int *__iptr;
 215          } __WAIT_STATUS /*__attribute((__transparent_union__))*/ ;
 216          //#line 102
 217          //#line 98
 218          typedef struct __nesc_unnamed4246 {
 219          
 220            int quot;
 221            int rem;
 222          } div_t;
 223          /*YYYYY } div_t*/
 224          
 225          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 5   

 226          
 227          
 228          
 229          
 230          //#line 106
 231          typedef struct __nesc_unnamed4247 {
 232          
 233            long int quot;
 234            long int rem;
 235          } ldiv_t;
 236          /*YYYYY } ldiv_t*/
 237          
 238          
 239          
 240          
 241          
 242          
 243          /*__extension__*/ 
 244          
 245          
 246          
 247          //#line 118
 248          typedef struct __nesc_unnamed4248 {
 249          
 250          
 251                   float* quot;
 252                
 253          
 254                   float* rem;
 255                
 256          } lldiv_t;
 257          /*YYYYY } lldiv_t*///#line 158
 258          /*__extension__*/ 
 259          //#line 195
 260          /*__extension__*/ 
 261          
 262          
 263          
 264          
 265          /*__extension__*/ 
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          
 274          /*__extension__*/ 
 275          
 276          
 277          
 278          
 279          /*__extension__*/ 
 280          //#line 349
 281          struct random__data {
 282          
 283            int32_t *fptr;
 284            int32_t *rptr;
 285            int32_t *state;
 286            int rand_type;
 287            int rand_deg;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 6   

 288            int rand_sep;
 289            int32_t *end_ptr;
 290          };
 291          //#line 418
 292          struct drand48__data {
 293          
 294            unsigned short int __x[3];
 295            unsigned short int __old_x[3];
 296            unsigned short int __c;
 297            unsigned short int __init;
 298            
 299                   float* __a;
 300                
 301          };
 302          //#line 742
 303          typedef int (*__compar_fn_t)(const void *arg_0x2b50ed6021f0, const void *arg_0x2b50ed6024c8);
 304          //#line 776
 305          /*__extension__*/ 
 306          //#line 793
 307          /*__extension__*/ 
 308          //# 24 "/opt/tinyos-2.x-contrib/diku/common/tos/system/tos.h"
 309          typedef uint8_t bool  ;
 310          enum __nesc_unnamed4249 {
 311          //#line 25
 312            FALSE = 0, TRUE = 1
 313          };
 314          
 315          
 316          
 317          
 318          
 319          
 320          
 321          
 322          
 323          typedef nx_int8_t nx_bool;
 324          uint16_t TOS_NODE_ID = 1;
 325          
 326          
 327          
 328          
 329          
 330          /*struct __nesc_attr_atmostonce {
 331          };*/
 332          //#line 44
 333          /*struct __nesc_attr_atleastonce {
 334          };*/
 335          //#line 45
 336          /*struct __nesc_attr_exactlyonce {
 337          };*/
 338          //# 51 "/opt/tinyos-2.1.2/tos/types/TinyError.h"
 339          enum __nesc_unnamed4250 {
 340            SUCCESS = 0, 
 341            FAIL = 1, 
 342            ESIZE = 2, 
 343            ECANCEL = 3, 
 344            EOFF = 4, 
 345            EBUSY = 5, 
 346            EINVAL = 6, 
 347            ERETRY = 7, 
 348            ERESERVE = 8, 
 349            EALREADY = 9, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 7   

 350            ENOMEM = 10, 
 351            ENOACK = 11, 
 352            ELAST = 11
 353          };
 354          
 355          typedef uint8_t error_t  ;
 356          
 357          static  /*inline*/  error_t ecombine(error_t r1, error_t r2)  ;
 358          //# 160 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/io8051.h"
 359          sbit EA = 0xAF;
 360          //#line 194
 361          sbit P1_0 = 0x90;
 362          
 363          
 364          sbit P1_3 = 0x93;
 365          //# 67 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/ioCC2430.h"
 366          enum __nesc_unnamed4251 {
 367            CC2430_IEN0_EA = 0x7, 
 368            CC2430_IEN0_STIE = 0x5, 
 369            CC2430_IEN0_ENCIE = 0x4, 
 370            CC2430_IEN0_URX1IE = 0x3, 
 371            CC2430_IEN0_URX0IE = 0x2, 
 372            CC2430_IEN0_ADCIE = 0x1, 
 373            CC2430_IEN0_RFERRIE = 0x0
 374          };
 375          
 376          
 377          
 378          
 379          
 380          enum __nesc_unnamed4252 {
 381            CC2430_IEN2_WDTIE = 0x5, 
 382            CC2430_IEN2_P1IE = 0x4, 
 383            CC2430_IEN2_UTX1IE = 0x3, 
 384            CC2430_IEN2_UTX0IE = 0x2, 
 385            CC2430_IEN2_P2IE = 0x1, 
 386            CC2430_IEN2_RFIE = 0x0
 387          };
 388          
 389          
 390          
 391          
 392          
 393          enum __nesc_unnamed4253 {
 394            CC2430_IRCON_STIF = 0x7, 
 395            CC2430_IRCON_P0IF = 0x5, 
 396            CC2430_IRCON_T4IF = 0x4, 
 397            CC2430_IRCON_T3IF = 0x3, 
 398            CC2430_IRCON_T2IF = 0x2, 
 399            CC2430_IRCON_T1IF = 0x1, 
 400            CC2430_IRCON_DMAIF = 0x0
 401          };
 402          
 403          
 404          
 405          
 406          
 407          enum __nesc_unnamed4254 {
 408            CC2430_IRCON2_WDTIF = 0x4, 
 409            CC2430_IRCON2_P1IF = 0x3, 
 410            CC2430_IRCON2_UTX1IF = 0x2, 
 411            CC2430_IRCON2_UTX0IF = 0x1, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 8   

 412            CC2430_IRCON2_P2IF = 0x0
 413          };
 414          
 415          
 416          
 417          
 418          
 419          enum __nesc_unnamed4255 {
 420            CC2430_RFIM_RREG_PD = 0x7, 
 421            CC2430_RFIM_TXDONE = 0x6, 
 422            CC2430_RFIM_FIFOP = 0x5, 
 423            CC2430_RFIM_SFD = 0x4, 
 424            CC2430_RFIM_CCA = 0x3, 
 425            CC2430_RFIM_CSP_WT = 0x2, 
 426            CC2430_RFIM_CSP_STOP = 0x1, 
 427            CC2430_RFIM_CSP_INT = 0x0
 428          };
 429          
 430          
 431          
 432          
 433          
 434          enum __nesc_unnamed4256 {
 435            CC2430_RFIF_RREG_ON = 0x7, 
 436            CC2430_RFIF_TXDONE = 0x6, 
 437            CC2430_RFIF_FIFOP = 0x5, 
 438            CC2430_RFIF_SFD = 0x4, 
 439            CC2430_RFIF_CCA = 0x3, 
 440            CC2430_RFIF_CSP_WT = 0x2, 
 441            CC2430_RFIF_CSP_STOP = 0x1, 
 442            CC2430_RFIF_CSP_INT = 0x0
 443          };
 444          //#line 168
 445          sfr U0CSR = 0x86;
 446          //#line 183
 447          sbit URX0IF = 0x8B;
 448          
 449          sbit RFERRIF = 0x89;
 450          
 451          
 452          
 453          
 454          sfr RFIM = 0x91;
 455          
 456          
 457          
 458          
 459          
 460          
 461          
 462          
 463          
 464          sfr IEN2 = 0x9A;
 465          sfr S1CON = 0x9B;
 466          //#line 217
 467          sbit RFERRIE = 0xA8;
 468          
 469          sbit URX0IE = 0xAA;
 470          //#line 240
 471          sbit T1IE = 0xB9;
 472          //#line 256
 473          sfr SLEEP = 0xBE;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 9   

 474          
 475          
 476          sfr U0BUF = 0xC1;
 477          sfr U0BAUD = 0xC2;
 478          
 479          sfr U0UCR = 0xC4;
 480          sfr U0GCR = 0xC5;
 481          sfr CLKCON = 0xC6;
 482          //#line 278
 483          sfr TIMIF = 0xD8;
 484          
 485          
 486          
 487          
 488          
 489          
 490          
 491          
 492          
 493          
 494          sfr RFD = 0xD9;
 495          
 496          sfr T1CC0L = 0xDA;
 497          sfr T1CC0H = 0xDB;
 498          //#line 308
 499          sfr RFST = 0xE1;
 500          
 501          sfr T1CNTL = 0xE2;
 502          sfr T1CNTH = 0xE3;
 503          sfr T1CTL = 0xE4;
 504          sfr T1CCTL0 = 0xE5;
 505          sfr T1CCTL1 = 0xE6;
 506          sfr T1CCTL2 = 0xE7;
 507          //#line 334
 508          sbit UTX0IF = 0xE9;
 509          
 510          
 511          
 512          sfr RFIF = 0xE9;
 513          
 514          
 515          
 516          
 517          
 518          
 519          
 520          
 521          sfr PERCFG = 0xF1;
 522          
 523          
 524          
 525          
 526          sfr P1_DIR = 0xFE;
 527          
 528          
 529          
 530          sfr P0_ALT = 0xF3;
 531          //#line 393
 532          //typedef uint16_t uint16_t xdata;
 533          //typedef uint8_t uint8_t xdata;
 534          
 535          //typedef uint16_t uint16_t code;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 10  

 536          //typedef uint8_t uint8_t code;
 537          //#line 479
 538          enum __nesc_unnamed4257 {
 539            CC2430_RFPWR_ADI_RADIO_PD = 0x4, 
 540            CC2430_RFPWR_RREG_RADIO_PD = 0x3, 
 541            CC2430_RFPWR_RREG_DELAY = 0x0, 
 542            CC2430_RFPWR_RREG_DELAY_MASK = 0x7
 543          };
 544          
 545          enum __nesc_unnamed4258 {
 546            CC2430_RREG_DELAY_0 = 0x0, 
 547            CC2430_RREG_DELAY_31 = 0x1, 
 548            CC2430_RREG_DELAY_63 = 0x2, 
 549            CC2430_RREG_DELAY_125 = 0x3, 
 550            CC2430_RREG_DELAY_250 = 0x4, 
 551            CC2430_RREG_DELAY_500 = 0x5, 
 552            CC2430_RREG_DELAY_1000 = 0x6, 
 553            CC2430_RREG_DELAY_2000 = 0x7
 554          };
 555          
 556          enum __nesc_unnamed4259 {
 557            CC2430_MDMCTRL0L_AUTOCRC = 0x5, 
 558            CC2430_MDMCTRL0L_AUTOACK = 0x4
 559          };
 560          
 561          enum __nesc_unnamed4260 {
 562            CC2430_MDMCTRL0H_FRAME_FILT = 0x6, 
 563            CC2430_MDMCTRL0H_RESERVED_FRAME_MODE = 0x5, 
 564            CC2430_MDMCTRL0H_PAN_COORDINATOR = 0x4, 
 565            CC2430_MDMCTRL0H_ADDR_DECODE = 0x3, 
 566            CC2430_MDMCTRL0H_CCA_HYST = 0x0
 567          };
 568          
 569          enum __nesc_unnamed4261 {
 570            CC2430_RFSTATUS_TX_ACTIVE = 0x4, 
 571            CC2430_RFSTATUS_FIFO = 0x3, 
 572            CC2430_RFSTATUS_FIFOP = 0x2, 
 573            CC2430_RFSTATUS_SFD = 0x1, 
 574            CC2430_RFSTATUS_CCA = 0x0
 575          };
 576          //# 102 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
 577          typedef uint8_t __nesc_atomic_t;
 578          
 579          static   /*inline*/   void __nesc_disable_interrupt();
 580          static   /*inline*/   void __nesc_enable_interrupt();
 581          
 582            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
 583          
 584          
 585          
 586          
 587          
 588            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
 589          //# 71 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer/CC2430Timer.h"
 590          enum __nesc_unnamed4262 {
 591            CC2430_SLEEP_OSC32K_CALDIS = 7, 
 592            CC2430_SLEEP_XOSC_STB = 6, 
 593            CC2430_SLEEP_HFRC_STB = 5, 
 594            CC2430_SLEEP_DIV = 3, 
 595            CC2430_SLEEP_OSC_PD = 2, 
 596            CC2430_SLEEP_MODE = 0, 
 597            CC2430_SLEEP_MODE_MASK = 3
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 11  

 598          };
 599          
 600          enum __nesc_unnamed4263 {
 601            CC2430_SLEEP_POWERMODE_0 = 0, 
 602            CC2430_SLEEP_POWERMODE_1 = 1, 
 603            CC2430_SLEEP_POWERMODE_2 = 2, 
 604            CC2430_SLEEP_POWERMODE_3 = 3
 605          };
 606          
 607          enum __nesc_unnamed4264 {
 608            CC2430_CLKCON_OSC32K = 7, 
 609            CC2430_CLKCON_OSC = 6, 
 610            CC2430_CLKCON_TICKSPD = 3, 
 611            CC2430_CLKCON_CLKSPD = 0, 
 612            CC2430_CLKCON_TICKSPD_MASK = 0x38
 613          };
 614          
 615          
 616          
 617          
 618          enum cc2430_tick_spd_t {
 619            CC2430_TICKF_DIV_1 = 0x0 << CC2430_CLKCON_TICKSPD, 
 620            CC2430_TICKF_DIV_2 = 0x1 << CC2430_CLKCON_TICKSPD, 
 621            CC2430_TICKF_DIV_4 = 0x2 << CC2430_CLKCON_TICKSPD, 
 622            CC2430_TICKF_DIV_8 = 0x3 << CC2430_CLKCON_TICKSPD, 
 623            CC2430_TICKF_DIV_16 = 0x4 << CC2430_CLKCON_TICKSPD, 
 624            CC2430_TICKF_DIV_32 = 0x5 << CC2430_CLKCON_TICKSPD, 
 625            CC2430_TICKF_DIV_64 = 0x6 << CC2430_CLKCON_TICKSPD, 
 626            CC2430_TICKF_DIV_128 = 0x7 << CC2430_CLKCON_TICKSPD
 627          };
 628          
 629          
 630          
 631          
 632          
 633          
 634          
 635          
 636          
 637          
 638          enum __nesc_unnamed4265 {
 639            CC2430_T1CTL_CH2IF = 0x7, 
 640            CC2430_T1CTL_CH1IF = 0x6, 
 641            CC2430_T1CTL_CH0IF = 0x5, 
 642            CC2430_T1CTL_OVFIF = 0x4, 
 643            CC2430_T1CTL_DIV = 0x2, 
 644            CC2430_T1CTL_MODE = 0x0, 
 645            CC2430_T1CTL_MODE_MASK = 0x3, 
 646            CC2430_T1CTL_DIV_MASK = 0xc, 
 647            CC2430_T1CTL_IF_MASK = 0xf0
 648          };
 649          
 650          
 651          
 652          
 653          
 654          
 655          enum cc2430_timer1_mode_t {
 656            CC2430_TIMER1_MODE_OFF = 0x0 << CC2430_T1CTL_MODE, 
 657            CC2430_TIMER1_MODE_FREE = 0x1 << CC2430_T1CTL_MODE, 
 658            CC2430_TIMER1_MODE_MODULO = 0x2 << CC2430_T1CTL_MODE, 
 659            CC2430_TIMER1_MODE_UPDOWN = 0x3 << CC2430_T1CTL_MODE
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 12  

 660          };
 661          
 662          
 663          
 664          
 665          
 666          
 667          enum cc2430_timer1_if_t {
 668            CC2430_T1_CH2IF = 1 << CC2430_T1CTL_CH2IF, 
 669            CC2430_T1_CH1IF = 1 << CC2430_T1CTL_CH1IF, 
 670            CC2430_T1_CH0IF = 1 << CC2430_T1CTL_CH0IF, 
 671            CC2430_T1_OVFIF = 1 << CC2430_T1CTL_OVFIF
 672          };
 673          
 674          
 675          
 676          
 677          
 678          enum cc2430_timer1_prescaler_t {
 679            CC2430_TIMER1_DIV_1 = 0x0 << CC2430_T1CTL_DIV, 
 680            CC2430_TIMER1_DIV_8 = 0x1 << CC2430_T1CTL_DIV, 
 681            CC2430_TIMER1_DIV_32 = 0x2 << CC2430_T1CTL_DIV, 
 682            CC2430_TIMER1_DIV_128 = 0x3 << CC2430_T1CTL_DIV
 683          };
 684          
 685          
 686          
 687          
 688          
 689          enum __nesc_unnamed4266 {
 690            CC2430_T1CCTLx_CPSEL = 0x7, 
 691            CC2430_T1CCTLx_IM = 0x6, 
 692            CC2430_T1CCTLx_CMP = 0x3, 
 693            CC2430_T1CCTLx_MODE = 0x2, 
 694            CC2430_T1CCTLx_CAP = 0x0
 695          };
 696          
 697          
 698          
 699          
 700          
 701          
 702          
 703          
 704          
 705          
 706          enum cc2430_timerMAC_mode_t {
 707            CC2430_TIMERMAC_MODE_IDLE = 0x0, 
 708            CC2430_TIMERMAC_MODE_RUN = 0x1
 709          };
 710          
 711          
 712          
 713          
 714          
 715          enum cc2430_timerMAC_T2CNF_t {
 716            CC2430_T2CNF_CMPIF = 0x7, 
 717            CC2430_T2CNF_PERIF = 0x6, 
 718            CC2430_T2CNF_OFCMPIF = 0x5, 
 719            CC2430_T2CNF_CMSEL = 0x3, 
 720            CC2430_T2CNF_SYNC = 0x1, 
 721            CC2430_T2CNF_RUN = 0x0
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 13  

 722          };
 723          
 724          
 725          
 726          
 727          
 728          
 729          enum cc2430_timerMAC_T2PEROF2_t {
 730            CC2430_T2PEROF2_CMPIM = 0x7, 
 731            CC2430_T2PEROF2_PERIM = 0x6, 
 732            CC2430_T2PEROF2_OFCMPIM = 0x5
 733          };
 734          
 735          enum cc2430_timerMAC_if_t {
 736            CC2430_TMAC_CMPIF = 1 << CC2430_T2CNF_CMPIF, 
 737            CC2430_TMAC_PERIF = 1 << CC2430_T2CNF_PERIF, 
 738            CC2430_TMAC_OFCMPIF = 1 << CC2430_T2CNF_OFCMPIF
 739          };
 740          
 741          enum cc2430_timerMAC_interval_t {
 742            CC2430_TIMERWDT_32768 = 0, 
 743            CC2430_TIMERWDT_8192 = 1, 
 744            CC2430_TIMERWDT_512 = 2, 
 745            CC2430_TIMERWDT_64 = 3
 746          };
 747          //#line 240
 748          enum __nesc_unnamed4267 {
 749            CC2430_TIMIF_OVFIM = 0x6
 750          };
 751          
 752          enum cc2430_timer34_if_t {
 753            CC2430_TIMIF_T4CH1IF = 0x5, 
 754            CC2430_TIMIF_T4CH0IF = 0x4, 
 755            CC2430_TIMIF_T4OVFIF = 0x3, 
 756            CC2430_TIMIF_T3CH1IF = 0x2, 
 757            CC2430_TIMIF_T3CH0IF = 0x1, 
 758            CC2430_TIMIF_T3OVFIF = 0x0
 759          };
 760          
 761          
 762          
 763          
 764          
 765          
 766          enum cc2430_timer3_4_mode_t {
 767            CC2430_TIMER3_4_MODE_FREE = 0x0, 
 768            CC2430_TIMER3_4_MODE_DOWN = 0x1, 
 769            CC2430_TIMER3_4_MODE_MODULO = 0x2, 
 770            CC2430_TIMER3_4_MODE_UPDOWN = 0x3
 771          };
 772          
 773          
 774          
 775          
 776          
 777          enum __nesc_unnamed4268 {
 778            CC2430_T34CTL_DIV = 0x5, 
 779            CC2430_T34CTL_START = 0x4, 
 780            CC2430_T34CTL_OVFIM = 0x3, 
 781            CC2430_T34CTL_WDTIF = 0x3, 
 782            CC2430_T34CTL_CLR = 0x2, 
 783            CC2430_T34CTL_MODE = 0x0, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 14  

 784            CC2430_T34CTL_MODE_MASK = 0x3, 
 785            CC2430_T34CTL_DIV_MASK = 0xe0
 786          };
 787          
 788          
 789          
 790          
 791          
 792          enum cc2430_timer3_4_prescaler_t {
 793            CC2430_TIMER3_4_DIV_1 = 0x0 << CC2430_T34CTL_DIV, 
 794            CC2430_TIMER3_4_DIV_2 = 0x1 << CC2430_T34CTL_DIV, 
 795            CC2430_TIMER3_4_DIV_4 = 0x2 << CC2430_T34CTL_DIV, 
 796            CC2430_TIMER3_4_DIV_8 = 0x3 << CC2430_T34CTL_DIV, 
 797            CC2430_TIMER3_4_DIV_16 = 0x4 << CC2430_T34CTL_DIV, 
 798            CC2430_TIMER3_4_DIV_32 = 0x5 << CC2430_T34CTL_DIV, 
 799            CC2430_TIMER3_4_DIV_64 = 0x6 << CC2430_T34CTL_DIV, 
 800            CC2430_TIMER3_4_DIV_128 = 0x7 << CC2430_T34CTL_DIV
 801          };
 802          
 803          
 804          
 805          
 806          
 807          
 808          
 809          
 810          
 811          
 812          enum __nesc_unnamed4269 {
 813            CC2430_WDCTL_CLR = 0x4, 
 814            CC2430_WDCTL_EN = 0x3, 
 815            CC2430_WDCTL_MODE = 0x2, 
 816            CC2430_WDCTL_INT = 0x0, 
 817            CC2430_WDCTL_INT_MASK = 0x3
 818          };
 819          
 820          enum cc2430_timerWDT_mode_t {
 821            CC2430_TIMERWDT_MODE_WDT = 0x0 << CC2430_WDCTL_MODE, 
 822            CC2430_TIMERWDT_MODE_TIMER = 0x1 << CC2430_WDCTL_MODE
 823          };
 824          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/Timer.h"
 825          typedef uint8_t TMilli;
 826          typedef uint8_t T32khz;
 827          typedef uint8_t TMicro;
 828          //# 43 "/opt/tinyos-2.1.2/tos/types/Leds.h"
 829          enum __nesc_unnamed4270 {
 830            LEDS_LED0 = 1 << 0, 
 831            LEDS_LED1 = 1 << 1, 
 832            LEDS_LED2 = 1 << 2, 
 833            LEDS_LED3 = 1 << 3, 
 834            LEDS_LED4 = 1 << 4, 
 835            LEDS_LED5 = 1 << 5, 
 836            LEDS_LED6 = 1 << 6, 
 837            LEDS_LED7 = 1 << 7
 838          };
 839          //# 26 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/packet.h"
 840          typedef uint16_t mac_addr_t;
 841          typedef uint8_t ieee_mac_addr_t[8];
 842          
 843          
 844          
 845          enum fcf_stuff {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 15  

 846            FCF_FT_BEACON = 0x0000, 
 847            FCF_FT_DATA = 0x0001, 
 848            FCF_FT_ACK = 0x0002, 
 849            FCF_FT_MAC_COMMAND = 0x0003, 
 850            FCF_FT_MASK = 0x0007, 
 851          
 852          
 853          
 854            FCF_SECENC = 0x0008, 
 855            FCF_FRAMEPENDING = 0x0010, 
 856            FCF_ACKREQ = 0x0020, 
 857            FCF_INTRAPAN = 0x0040, 
 858          
 859          
 860            FCF_DST_NO_ADDR = 0x0000, 
 861            FCF_DST_SHORT_ADDR = 0x0800, 
 862            FCF_DST_LONG_ADDR = 0x0C00, 
 863            FCF_DST_ADDR_MASK = 0x0C00, 
 864          
 865            FCF_SRC_NO_ADDR = 0x0000, 
 866            FCF_SRC_SHORT_ADDR = 0x8000, 
 867            FCF_SRC_LONG_ADDR = 0xC000, 
 868            FCF_SRC_ADDR_MASK = 0xC000, 
 869          
 870            FCS_CRC_OK_MASK = 0x80, 
 871            FCS_CORRELATION_MASK = 0x7F
 872          };
 873          
 874          
 875          
 876          
 877          //#line 60
 878          typedef struct __nesc_unnamed4271 {
 879            int8_t rssi;
 880            uint8_t correlation;
 881          } fsc_t;
 882          /*YYYYY } fsc_t*/
 883          struct packet {
 884          
 885            uint8_t length;
 886          
 887            uint16_t fcf;
 888            uint8_t _data_seq_no;
 889            mac_addr_t dest;
 890            mac_addr_t src;
 891          
 892            uint8_t _data[122 - 2 * sizeof(mac_addr_t )];
 893          
 894            fsc_t fcs;
 895          };
 896          
 897          
 898          
 899          
 900          
 901          typedef struct packet packet_t;
 902          //# 6 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/cc2420.h"
 903          enum cc2420_defaults {
 904          
 905            CC2420_DEFAULT_CHANNEL = 17, 
 906            CC2420_DEFAULT_POWER = 100
 907          };
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 16  

 908          
 909          
 910          enum cc2420_error_codes {
 911          
 912          
 913          
 914            CC2420_ERROR_CCA = 0x02, 
 915            CC2420_ERROR_TX = 0x03, 
 916            CC2420_ERROR_RADIO_OFF = 0x04
 917          };
 918          typedef TMicro TestAppP__LocalTime__precision_tag;
 919          typedef TMilli TestAppP__Timer__precision_tag;
 920          typedef T32khz /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__
             -0__frequency;
 921          typedef /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__freq
             -uency /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm2__precision_ta
             -g;
 922          typedef uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP
             -__0__Alarm2__size_type;
 923          typedef /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__freq
             -uency /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm0__precision_ta
             -g;
 924          typedef uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP
             -__0__Alarm0__size_type;
 925          typedef /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__freq
             -uency /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Counter__precision_t
             -ag;
 926          typedef uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP
             -__0__Counter__size_type;
 927          typedef /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__freq
             -uency /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm1__precision_ta
             -g;
 928          typedef uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP
             -__0__Alarm1__size_type;
 929          enum /*HilTimerMilliC.AlarmMilli32C.AlarmFrom*/Alarm32khz16C__0____nesc_unnamed4272 {
 930            Alarm32khz16C__0__ALARM_ID = 0U
 931          };
 932          typedef TMilli /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag;
 933          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type;
 934          typedef T32khz /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag;
 935          typedef uint16_t /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type;
 936          typedef uint32_t /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type;
 937          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_precision_tag /*CounterMilli32C.Transform*
             -/TransformCounterC__0__CounterFrom__precision_tag;
 938          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type /*CounterMilli32C.Transform*/Tra
             -nsformCounterC__0__CounterFrom__size_type;
 939          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_precision_tag /*CounterMilli32C.Transform*/T
             -ransformCounterC__0__Counter__precision_tag;
 940          typedef /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Trans
             -formCounterC__0__Counter__size_type;
 941          typedef TMilli /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag;
 942          typedef uint32_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type;
 943          typedef T32khz /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag;
 944          typedef uint16_t /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type;
 945          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Alarm__precision_tag;
 946          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Alarm__size_type;
 947          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_precision_tag /*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__precision_tag;
 948          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type /*HilTimerMilliC.Alar
             -mMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 17  

 949          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_precision_tag /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__Counter__precision_tag;
 950          typedef /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Counter__size_type;
 951          typedef TMilli /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag;
 952          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Alarm__precision_tag;
 953          typedef uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type;
 954          typedef /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__precision_tag /*HilTimerMilliC.AlarmToTimerC*/Al
             -armToTimerC__0__Timer__precision_tag;
 955          typedef TMilli /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag;
 956          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__TimerFrom__precision_tag;
 957          typedef /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__precision_tag /*HilTimerMilliC.VirtualizeT
             -imerC*/VirtualizeTimerC__0__Timer__precision_tag;
 958          typedef TMicro /*TestAppC.LocalTimeC*/CounterToLocalTimeC__0__precision_tag;
 959          typedef /*TestAppC.LocalTimeC*/CounterToLocalTimeC__0__precision_tag /*TestAppC.LocalTimeC*/CounterToLocal
             -TimeC__0__LocalTime__precision_tag;
 960          typedef /*TestAppC.LocalTimeC*/CounterToLocalTimeC__0__precision_tag /*TestAppC.LocalTimeC*/CounterToLocal
             -TimeC__0__Counter__precision_tag;
 961          typedef uint32_t /*TestAppC.LocalTimeC*/CounterToLocalTimeC__0__Counter__size_type;
 962          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 963          static error_t PlatformP__Init__init(void );
 964          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 965          static error_t SchedulerBasicP__TaskBasic__postTask(
 966          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 967          uint8_t arg_0x2b50ed6cb3c8);
 968          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 969          static void SchedulerBasicP__TaskBasic__default__runTask(
 970          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 971          uint8_t arg_0x2b50ed6cb3c8);
 972          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
 973          static void SchedulerBasicP__Scheduler__init(void );
 974          //#line 72
 975          static void SchedulerBasicP__Scheduler__taskLoop(void );
 976          //#line 65
 977          static bool SchedulerBasicP__Scheduler__runNextTask(void );
 978          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
 979          static void McuSleepC__McuSleep__sleep(void );
 980          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 981          static void TestAppP__sendPacketTask__runTask(void );
 982          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
 983          static void TestAppP__Boot__booted(void );
 984          //# 42 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
 985          static void TestAppP__SimpleMac__sendPacketDone(packet_t *packet, error_t result);
 986          
 987          
 988          
 989          
 990          
 991          
 992          
 993          
 994          
 995          static packet_t *TestAppP__SimpleMac__receivedPacket(packet_t *packet);
 996          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 997          static error_t TestAppP__Init__init(void );
 998          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 999          static void TestAppP__consoleTask__runTask(void );
1000          //# 108 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
1001          static void TestAppP__StdOut__get(uint8_t _data);
1002          //# 83 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 18  

1003          static void TestAppP__Timer__fired(void );
1004          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1005          static error_t LedsP__Init__init(void );
1006          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
1007          static void LedsP__Leds__led0Toggle(void );
1008          
1009          
1010          
1011          
1012          static void LedsP__Leds__led1On(void );
1013          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1014          static void HplMcs51GeneralIOC__P13__makeOutput(void );
1015          //#line 41
1016          static void HplMcs51GeneralIOC__P13__clr(void );
1017          static void HplMcs51GeneralIOC__P10__toggle(void );
1018          
1019          
1020          
1021          static void HplMcs51GeneralIOC__P10__makeOutput(void );
1022          //#line 41
1023          static void HplMcs51GeneralIOC__P10__clr(void );
1024          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void );
1025          
1026          
1027          
1028          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void );
1029          //#line 40
1030          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void );
1031          
1032          
1033          
1034          
1035          
1036          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void );
1037          //#line 40
1038          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void );
1039          
1040          
1041          
1042          
1043          
1044          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
1045          //#line 40
1046          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
1047          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__clr(void );
1048          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1049          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm2__default__fired(void );
1050          //#line 103
1051          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm0__startAt(/*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm0__si
             -ze_type t0, /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm0__size_t
             -ype dt);
1052          //#line 73
1053          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm0__stop(void );
1054          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1055          static error_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__
             -0__Init__init(void );
1056          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1057          static /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Count
             -er__size_type /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Counter__get
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 19  

             -(void );
1058          
1059          
1060          
1061          
1062          
1063          
1064          static bool /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Counter__isOverflowPending(void );
1065          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1066          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm1__default__fired(void );
1067          //# 82 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1068          static void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void );
1069          //#line 64
1070          static /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__size_type /*CounterMilli32C.Transform*/
             -TransformCounterC__0__Counter__get(void );
1071          //# 109 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1072          static /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.Ala
             -rmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void );
1073          //#line 103
1074          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAla
             -rmC__0__Alarm__size_type dt);
1075          //#line 116
1076          static /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__size_type /*HilTimerMilliC.Ala
             -rmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void );
1077          //#line 73
1078          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void );
1079          
1080          
1081          
1082          
1083          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(void );
1084          //# 82 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1085          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(void );
1086          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1087          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__runTask(void );
1088          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1089          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void );
1090          //# 136 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1091          static uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void );
1092          //#line 129
1093          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t t0, uint32_t 
             -dt);
1094          //#line 78
1095          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void );
1096          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1097          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(void );
1098          //# 83 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1099          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void );
1100          //#line 83
1101          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(
1102          //# 48 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
1103          uint8_t arg_0x2b50edb925d8);
1104          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1105          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(
1106          //# 48 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
1107          uint8_t arg_0x2b50edb925d8, 
1108          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1109          uint32_t dt);
1110          //#line 78
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 20  

1111          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(
1112          //# 48 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
1113          uint8_t arg_0x2b50edb925d8);
1114          //# 62 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
1115          static error_t SimpleMacM__SimpleMac__rxDisable(void );
1116          //#line 58
1117          static const mac_addr_t *SimpleMacM__SimpleMac__getAddress(void );
1118          static const ieee_mac_addr_t *SimpleMacM__SimpleMac__getExtAddress(void );
1119          //#line 54
1120          static error_t SimpleMacM__SimpleMac__setChannel(uint8_t channel);
1121          //#line 34
1122          static error_t SimpleMacM__SimpleMac__sendPacket(packet_t *packet);
1123          //#line 65
1124          static error_t SimpleMacM__SimpleMac__addressFilterDisable(void );
1125          //#line 57
1126          static error_t SimpleMacM__SimpleMac__setAddress(mac_addr_t *addr);
1127          
1128          
1129          
1130          
1131          
1132          
1133          static error_t SimpleMacM__SimpleMac__addressFilterEnable(void );
1134          //#line 61
1135          static error_t SimpleMacM__SimpleMac__rxEnable(void );
1136          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1137          static error_t SimpleMacM__Init__init(void );
1138          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1139          static void SimpleMacM__initTask__runTask(void );
1140          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
1141          static error_t SimpleMacM__SimpleMacControl__start(void );
1142          
1143          
1144          
1145          
1146          
1147          
1148          
1149          
1150          
1151          static error_t SimpleMacM__SimpleMacControl__stop(void );
1152          //# 43 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
1153          static void SimpleMacM__HALCC2420__sendPacketDone(uint8_t *packet, error_t result);
1154          
1155          
1156          
1157          
1158          
1159          
1160          
1161          
1162          
1163          static uint8_t *SimpleMacM__HALCC2420__receivedPacket(uint8_t *packet);
1164          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1165          static void SimpleMacM__signalSendPacketDone__runTask(void );
1166          //#line 75
1167          static void HalCC2430RadioP__receivedPacketTask__runTask(void );
1168          //#line 75
1169          static void HalCC2430RadioP__sendPacketDoneTask__runTask(void );
1170          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1171          static void HalCC2430RadioP__InterruptRFErr__fired(void );
1172          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 21  

1173          static error_t HalCC2430RadioP__HALCC2420Control__start(void );
1174          
1175          
1176          
1177          
1178          
1179          
1180          
1181          
1182          
1183          static error_t HalCC2430RadioP__HALCC2420Control__stop(void );
1184          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1185          static void HalCC2430RadioP__InterruptTXDone__fired(void );
1186          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1187          static error_t HalCC2430RadioP__Init__init(void );
1188          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1189          static void HalCC2430RadioP__initTask__runTask(void );
1190          //# 63 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
1191          static error_t HalCC2430RadioP__HALCC2420__rxDisable(void );
1192          //#line 59
1193          static const mac_addr_t *HalCC2430RadioP__HALCC2420__getAddress(void );
1194          static const ieee_mac_addr_t *HalCC2430RadioP__HALCC2420__getExtAddress(void );
1195          //#line 55
1196          static error_t HalCC2430RadioP__HALCC2420__setChannel(uint8_t channel);
1197          //#line 35
1198          static error_t HalCC2430RadioP__HALCC2420__sendPacket(uint8_t *packet);
1199          //#line 66
1200          static error_t HalCC2430RadioP__HALCC2420__addressFilterDisable(void );
1201          //#line 58
1202          static error_t HalCC2430RadioP__HALCC2420__setAddress(mac_addr_t *addr);
1203          
1204          
1205          
1206          
1207          
1208          
1209          static error_t HalCC2430RadioP__HALCC2420__addressFilterEnable(void );
1210          //#line 62
1211          static error_t HalCC2430RadioP__HALCC2420__rxEnable(void );
1212          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1213          static void HalCC2430RadioP__flushBufferTask__runTask(void );
1214          //# 108 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
1215          static void HalCC2430RadioP__StdOut__get(uint8_t _data);
1216          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1217          static void HalCC2430RadioP__InterruptFIFOP__fired(void );
1218          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1219          static void HalCC2430RadioP__setChannelTask__runTask(void );
1220          //#line 75
1221          static void HalCC2430RadioP__transmitTask__runTask(void );
1222          //# 61 "/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc"
1223          static void HplCC2430InterruptsC__CaptureSFD__default__captured(uint16_t time);
1224          //# 53 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1225          static error_t HplCC2430InterruptsC__InterruptRFErr__enableRisingEdge(void );
1226          //#line 53
1227          static error_t HplCC2430InterruptsC__InterruptTXDone__enableRisingEdge(void );
1228          //#line 68
1229          static void HplCC2430InterruptsC__InterruptCCA__default__fired(void );
1230          //#line 61
1231          static error_t HplCC2430InterruptsC__InterruptFIFOP__disable(void );
1232          //#line 53
1233          static error_t HplCC2430InterruptsC__InterruptFIFOP__enableRisingEdge(void );
1234          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 22  

1235          static error_t StdOutM__Init__init(void );
1236          //# 58 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
1237          static void StdOutM__UART__get(uint8_t _data);
1238          
1239          
1240          
1241          
1242          
1243          static void StdOutM__UART__putDone(void );
1244          //# 56 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
1245          static void StdOutM__StdOut__dumpHex(uint8_t ptr[], uint8_t count, char *sep);
1246          //#line 44
1247          static int StdOutM__StdOut__printHexword(uint16_t c);
1248          //#line 61
1249          static int StdOutM__StdOut__printBase10uint8(const uint8_t c);
1250          //#line 34
1251          static int StdOutM__StdOut__print(const char *str);
1252          
1253          
1254          
1255          
1256          static int StdOutM__StdOut__printHex(uint8_t c);
1257          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1258          static error_t HalCC2430SimpleUartP__Init__init(void );
1259          //# 52 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
1260          static error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data);
1261          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1262          static error_t PlatformP__LedsInit__init(void );
1263          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
1264          static  /*inline*/  error_t PlatformP__Init__init(void );
1265          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1266          static error_t RealMainP__SoftwareInit__init(void );
1267          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
1268          static void RealMainP__Boot__booted(void );
1269          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1270          static error_t RealMainP__PlatformInit__init(void );
1271          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
1272          static void RealMainP__Scheduler__init(void );
1273          //#line 72
1274          static void RealMainP__Scheduler__taskLoop(void );
1275          //#line 65
1276          static bool RealMainP__Scheduler__runNextTask(void );
1277          //# 63 "/opt/tinyos-2.1.2/tos/system/RealMainP.nc"
1278          int main(void )   ;
1279          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1280          static void SchedulerBasicP__TaskBasic__runTask(
1281          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1282          uint8_t arg_0x2b50ed6cb3c8);
1283          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
1284          static void SchedulerBasicP__McuSleep__sleep(void );
1285          //# 61 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1286          enum SchedulerBasicP____nesc_unnamed4273 {
1287          
1288            SchedulerBasicP__NUM_TASKS = 12U, 
1289            SchedulerBasicP__NO_TASK = 255
1290          };
1291          
1292          uint8_t SchedulerBasicP__m_head;
1293          uint8_t SchedulerBasicP__m_tail;
1294          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
1295          
1296          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 23  

1297          
1298          
1299          
1300          
1301          
1302          
1303          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void );
1304          //#line 97
1305          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
1306          
1307          
1308          
1309          
1310          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
1311          //#line 124
1312          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void );
1313          
1314          
1315          
1316          
1317          
1318          
1319          
1320          
1321          
1322          static bool SchedulerBasicP__Scheduler__runNextTask(void );
1323          //#line 149
1324          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void );
1325          //#line 170
1326          static error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
1327          
1328          
1329          
1330          
1331          static void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
1332          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
1333          static  /*inline*/  void McuSleepC__McuSleep__sleep(void );
1334          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1335          static error_t TestAppP__sendPacketTask__postTask(void );
1336          //# 62 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
1337          static error_t TestAppP__SimpleMac__rxDisable(void );
1338          //#line 58
1339          static const mac_addr_t *TestAppP__SimpleMac__getAddress(void );
1340          static const ieee_mac_addr_t *TestAppP__SimpleMac__getExtAddress(void );
1341          //#line 54
1342          static error_t TestAppP__SimpleMac__setChannel(uint8_t channel);
1343          //#line 34
1344          static error_t TestAppP__SimpleMac__sendPacket(packet_t *packet);
1345          //#line 65
1346          static error_t TestAppP__SimpleMac__addressFilterDisable(void );
1347          //#line 57
1348          static error_t TestAppP__SimpleMac__setAddress(mac_addr_t *addr);
1349          
1350          
1351          
1352          
1353          
1354          
1355          static error_t TestAppP__SimpleMac__addressFilterEnable(void );
1356          //#line 61
1357          static error_t TestAppP__SimpleMac__rxEnable(void );
1358          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 24  

1359          static error_t TestAppP__consoleTask__postTask(void );
1360          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
1361          static error_t TestAppP__SimpleMacControl__start(void );
1362          
1363          
1364          
1365          
1366          
1367          
1368          
1369          
1370          
1371          static error_t TestAppP__SimpleMacControl__stop(void );
1372          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
1373          static void TestAppP__Leds__led0Toggle(void );
1374          
1375          
1376          
1377          
1378          static void TestAppP__Leds__led1On(void );
1379          //# 56 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
1380          static void TestAppP__StdOut__dumpHex(uint8_t ptr[], uint8_t count, char *sep);
1381          //#line 44
1382          static int TestAppP__StdOut__printHexword(uint16_t c);
1383          //#line 61
1384          static int TestAppP__StdOut__printBase10uint8(const uint8_t c);
1385          //#line 34
1386          static int TestAppP__StdOut__print(const char *str);
1387          
1388          
1389          
1390          
1391          static int TestAppP__StdOut__printHex(uint8_t c);
1392          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1393          static void TestAppP__Timer__startPeriodic(uint32_t dt);
1394          //#line 78
1395          static void TestAppP__Timer__stop(void );
1396          //# 26 "TestAppP.nc"
1397          enum TestAppP____nesc_unnamed4274 {
1398          //#line 26
1399            TestAppP__sendPacketTask = 0U
1400          };
1401          //#line 26
1402          typedef int TestAppP____nesc_sillytask_sendPacketTask[];
1403          //#line 165
1404          enum TestAppP____nesc_unnamed4275 {
1405          //#line 165
1406            TestAppP__consoleTask = 1U
1407          };
1408          //#line 165
1409          typedef int TestAppP____nesc_sillytask_consoleTask[TestAppP__consoleTask];
1410          //#line 15
1411          mac_addr_t TestAppP__shortAddress;
1412          uint8_t TestAppP__transmitPacket[128];
1413          packet_t *TestAppP__transmitPacketPtr;
1414          bool TestAppP__echo = FALSE;
1415          //#line 18
1416          bool TestAppP__filter = TRUE;
1417          bool TestAppP__radioOn = FALSE;
1418          //#line 19
1419          bool TestAppP__receiverOn = FALSE;
1420          //#line 19
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 25  

1421          bool TestAppP__timerOn = FALSE;
1422          
1423          uint8_t TestAppP__channel;
1424          uint8_t TestAppP__sequence = 1;
1425          
1426          const ieee_mac_addr_t *TestAppP__ieeeAddress;
1427          
1428          
1429          
1430          
1431          
1432          
1433          static  /*inline*/  error_t TestAppP__Init__init(void );
1434          //#line 56
1435          static  /*inline*/  void TestAppP__Boot__booted(void );
1436          //#line 80
1437          static  /*inline*/  void TestAppP__Timer__fired(void );
1438          //#line 110
1439          static  /*inline*/  void TestAppP__sendPacketTask__runTask(void );
1440          
1441          
1442          
1443          
1444          
1445          
1446          static  /*inline*/  void TestAppP__SimpleMac__sendPacketDone(packet_t *packet, error_t result);
1447          //#line 130
1448          static  /*inline*/  packet_t *TestAppP__SimpleMac__receivedPacket(packet_t *packet);
1449          //#line 163
1450          uint8_t TestAppP__keyBuffer;
1451          
1452          
1453          
1454          static  /*inline*/  void TestAppP__StdOut__get(uint8_t _data);
1455          
1456          
1457          
1458          
1459          
1460          
1461          
1462          
1463          static  /*inline*/  void TestAppP__consoleTask__runTask(void );
1464          //# 42 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1465          static void LedsP__Led0__toggle(void );
1466          
1467          
1468          
1469          static void LedsP__Led0__makeOutput(void );
1470          //#line 40
1471          static void LedsP__Led0__set(void );
1472          
1473          
1474          
1475          
1476          
1477          static void LedsP__Led1__makeOutput(void );
1478          //#line 40
1479          static void LedsP__Led1__set(void );
1480          static void LedsP__Led1__clr(void );
1481          
1482          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 26  

1483          
1484          
1485          static void LedsP__Led2__makeOutput(void );
1486          //#line 40
1487          static void LedsP__Led2__set(void );
1488          //# 56 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
1489          static  /*inline*/  error_t LedsP__Init__init(void );
1490          //#line 84
1491          static  /*inline*/  void LedsP__Leds__led0Toggle(void );
1492          
1493          
1494          
1495          
1496          static  /*inline*/  void LedsP__Leds__led1On(void );
1497          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1498          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void );
1499          //#line 92
1500          static  /*inline*/  void HplMcs51GeneralIOC__P10__toggle(void );
1501          //#line 92
1502          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void );
1503          
1504          
1505          static   /*inline*/   void HplMcs51GeneralIOC__P13__clr(void );
1506          //#line 95
1507          static   /*inline*/   void HplMcs51GeneralIOC__P13__makeOutput(void );
1508          //# 42 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1509          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle(void );
1510          
1511          
1512          
1513          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput(void );
1514          //#line 41
1515          static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr(void );
1516          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1517          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void );
1518          //#line 59
1519          static  /*inline*/  void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void );
1520          //#line 59
1521          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void );
1522          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1523          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput(void );
1524          //#line 41
1525          static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr(void );
1526          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
1527          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void );
1528          //#line 59
1529          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void );
1530          //# 23 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
1531          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
1532          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__clr(void );
1533          
1534          
1535          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
1536          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1537          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm2__fired(void );
1538          //#line 78
1539          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm0__fired(void );
1540          //# 82 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1541          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Counter__overflow(void );
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 27  

1542          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1543          static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__
             -Alarm1__fired(void );
1544          //# 59 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
1545          static error_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__
             -0__Init__init(void );
1546          //#line 97
1547          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm0__stop(void );
1548          //#line 126
1549          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm0__startAt(uint16_t t0, uint16_t dt);
1550          //#line 336
1551          static uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP_
             -_0__Counter__get(void );
1552          
1553          
1554          
1555          
1556          
1557          
1558          static  /*inline*/  bool /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Counter__isOverflowPending(void );
1559          //#line 361
1560          void __vector_9(void )   /*__attribute((interrupt))*/ ;
1561          //#line 387
1562          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm1__default__fired(void );
1563          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm2__default__fired(void );
1564          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1565          static /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__size_type /*CounterMilli32C.Transfo
             -rm*/TransformCounterC__0__CounterFrom__get(void );
1566          
1567          
1568          
1569          
1570          
1571          
1572          static bool /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending(void );
1573          
1574          
1575          
1576          
1577          
1578          
1579          
1580          
1581          
1582          
1583          static void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void );
1584          //# 67 "/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc"
1585          /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type /*CounterMilli32C.Transform*/Transform
             -CounterC__0__m_upper;
1586          
1587          enum /*CounterMilli32C.Transform*/TransformCounterC__0____nesc_unnamed4276 {
1588          
1589            TransformCounterC__0__LOW_SHIFT_RIGHT = 5, 
1590            TransformCounterC__0__HIGH_SHIFT_LEFT = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__fr
             -om_size_type ) - /*CounterMilli32C.Transform*/TransformCounterC__0__LOW_SHIFT_RIGHT, 
1591            TransformCounterC__0__NUM_UPPER_BITS = 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__to_
             -size_type ) - 8 * sizeof(/*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type ) + 5, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 28  

1592          
1593          
1594          
1595            TransformCounterC__0__OVERFLOW_MASK = /*CounterMilli32C.Transform*/TransformCounterC__0__NUM_UPPER_BITS 
             -? ((/*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type )2 << (/*CounterMilli32C.Transform*/TransformCou
             -nterC__0__NUM_UPPER_BITS - 1)) - 1 : 0
1596          };
*** WARNING C219 IN LINE 1596 OF APP.C: long constant truncated
1597          
1598          static /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Transf
             -ormCounterC__0__Counter__get(void );
1599          //#line 133
1600          static  /*inline*/  void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void );
1601          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1602          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired(void );
1603          //#line 103
1604          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt(/*HilTimerMil
             -liC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/Tran
             -sformAlarmC__0__AlarmFrom__size_type dt);
1605          //#line 73
1606          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop(void );
1607          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
1608          static /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__size_type /*HilTimerMilliC.A
             -larmMilli32C.Transform*/TransformAlarmC__0__Counter__get(void );
1609          //# 77 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
1610          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_t0;
1611          /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_dt;
1612          
1613          enum /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0____nesc_unnamed4277 {
1614          
1615            TransformAlarmC__0__MAX_DELAY_LOG2 = 8 * sizeof(/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarm
             -C__0__from_size_type ) - 1 - 5, 
1616            TransformAlarmC__0__MAX_DELAY = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_t
             -ype )1 << /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY_LOG2
1617          };
1618          
1619          static  /*inline*/  /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void );
1620          
1621          
1622          
1623          
1624          static  /*inline*/  /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void );
1625          
1626          
1627          
1628          
1629          
1630          
1631          
1632          
1633          
1634          
1635          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void );
1636          
1637          
1638          
1639          
1640          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void );
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 29  

1641          //#line 147
1642          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC_
             -_0__to_size_type dt);
1643          //#line 162
1644          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(vo
             -id );
1645          //#line 177
1646          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(v
             -oid );
1647          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1648          static error_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__postTask(void );
1649          //# 109 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
1650          static /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC*/
             -AlarmToTimerC__0__Alarm__getNow(void );
1651          //#line 103
1652          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(/*HilTimerMilliC.AlarmToTimer
             -C*/AlarmToTimerC__0__Alarm__size_type t0, /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type dt);
1653          //#line 116
1654          static /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.AlarmToTimerC*/
             -AlarmToTimerC__0__Alarm__getAlarm(void );
1655          //#line 73
1656          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop(void );
1657          //# 83 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1658          static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired(void );
1659          //# 74 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
1660          enum /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_unnamed4278 {
1661          //#line 74
1662            AlarmToTimerC__0__fired = 2U
1663          };
1664          //#line 74
1665          typedef int /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0____nesc_sillytask_fired[/*HilTimerMilliC.Alar
             -mToTimerC*/AlarmToTimerC__0__fired];
1666          //#line 55
1667          uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt;
1668          bool /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot;
1669          
1670          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot);
1671          //#line 71
1672          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void );
1673          
1674          
1675          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__runTask(void );
1676          
1677          
1678          
1679          
1680          
1681          
1682          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void );
1683          //#line 93
1684          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t 
             -t0, uint32_t dt);
1685          
1686          
1687          static  /*inline*/  uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void );
1688          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1689          static error_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask(void );
1690          //# 136 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
1691          static uint32_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow(void );
1692          //#line 129
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 30  

1693          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(uint32_t t0,
             - uint32_t dt);
1694          //#line 78
1695          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop(void );
1696          
1697          
1698          
1699          
1700          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(
1701          //# 48 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
1702          uint8_t arg_0x2b50edb925d8);
1703          //#line 71
1704          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4279 {
1705          //#line 71
1706            VirtualizeTimerC__0__updateFromTimer = 3U
1707          };
1708          //#line 71
1709          typedef int /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_sillytask_updateFromTimer[/*Hil
             -TimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer];
1710          //#line 53
1711          enum /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4280 {
1712          
1713            VirtualizeTimerC__0__NUM_TIMERS = 1U, 
1714            VirtualizeTimerC__0__END_OF_LIST = 255
1715          };
1716          
1717          
1718          
1719          
1720          
1721          
1722          
1723          
1724          //#line 59
1725          typedef struct /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0____nesc_unnamed4281 {
1726          
1727            uint32_t t0;
1728            uint32_t dt;
1729            bool isoneshot : 1;
1730            bool isrunning : 1;
1731            bool _reserved : 6;
1732          } /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t;
1733          
1734          /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t /*HilTimerMilliC.VirtualizeTimerC*/Virtual
             -izeTimerC__0__m_timers[/*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS];
1735          
1736          
1737          
1738          
1739          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now);
1740          //#line 100
1741          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(
             -void );
1742          //#line 139
1743          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void );
1744          
1745          
1746          
1747          
1748          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, u
             -int32_t t0, uint32_t dt, bool isoneshot);
1749          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 31  

1750          
1751          
1752          
1753          
1754          
1755          
1756          
1757          
1758          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, uint
             -32_t dt);
1759          
1760          
1761          
1762          
1763          
1764          
1765          
1766          
1767          
1768          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num);
1769          //#line 204
1770          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(uin
             -t8_t num);
1771          //# 42 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
1772          static void SimpleMacM__SimpleMac__sendPacketDone(packet_t *packet, error_t result);
1773          
1774          
1775          
1776          
1777          
1778          
1779          
1780          
1781          
1782          static packet_t *SimpleMacM__SimpleMac__receivedPacket(packet_t *packet);
1783          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
1784          static error_t SimpleMacM__HALCC2420Control__start(void );
1785          
1786          
1787          
1788          
1789          
1790          
1791          
1792          
1793          
1794          static error_t SimpleMacM__HALCC2420Control__stop(void );
1795          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1796          static error_t SimpleMacM__initTask__postTask(void );
1797          //# 63 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
1798          static error_t SimpleMacM__HALCC2420__rxDisable(void );
1799          //#line 59
1800          static const mac_addr_t *SimpleMacM__HALCC2420__getAddress(void );
1801          static const ieee_mac_addr_t *SimpleMacM__HALCC2420__getExtAddress(void );
1802          //#line 55
1803          static error_t SimpleMacM__HALCC2420__setChannel(uint8_t channel);
1804          //#line 35
1805          static error_t SimpleMacM__HALCC2420__sendPacket(uint8_t *packet);
1806          //#line 66
1807          static error_t SimpleMacM__HALCC2420__addressFilterDisable(void );
1808          //#line 58
1809          static error_t SimpleMacM__HALCC2420__setAddress(mac_addr_t *addr);
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 32  

1810          
1811          
1812          
1813          
1814          
1815          
1816          static error_t SimpleMacM__HALCC2420__addressFilterEnable(void );
1817          //#line 62
1818          static error_t SimpleMacM__HALCC2420__rxEnable(void );
1819          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1820          static error_t SimpleMacM__signalSendPacketDone__postTask(void );
1821          //# 45 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
1822          enum SimpleMacM____nesc_unnamed4282 {
1823          //#line 45
1824            SimpleMacM__initTask = 4U
1825          };
1826          //#line 45
1827          typedef int SimpleMacM____nesc_sillytask_initTask[SimpleMacM__initTask];
1828          //#line 123
1829          enum SimpleMacM____nesc_unnamed4283 {
1830          //#line 123
1831            SimpleMacM__signalSendPacketDone = 5U
1832          };
1833          //#line 123
1834          typedef int SimpleMacM____nesc_sillytask_signalSendPacketDone[SimpleMacM__signalSendPacketDone];
1835          //#line 36
1836          packet_t SimpleMacM__receivedPacket;
1837          packet_t *SimpleMacM__receivedPacketPtr;
1838          
1839          const mac_addr_t *SimpleMacM__shortAddress;
1840          
1841          
1842          
1843          
1844          
1845          
1846          
1847          
1848          
1849          static  /*inline*/  error_t SimpleMacM__Init__init(void );
1850          
1851          
1852          
1853          
1854          
1855          
1856          
1857          static  /*inline*/  void SimpleMacM__initTask__runTask(void );
1858          
1859          
1860          
1861          
1862          
1863          
1864          
1865          static  /*inline*/  error_t SimpleMacM__SimpleMacControl__start(void );
1866          
1867          
1868          
1869          
1870          static  /*inline*/  error_t SimpleMacM__SimpleMacControl__stop(void );
1871          //#line 82
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 33  

1872          uint8_t SimpleMacM__transmitbuffer[128];
1873          packet_t *SimpleMacM__sendPacketPtr;
1874          
1875          static error_t SimpleMacM__SimpleMac__sendPacket(packet_t *packet);
1876          //#line 121
1877          error_t SimpleMacM__sendPacketResult;
1878          
1879          static  /*inline*/  void SimpleMacM__signalSendPacketDone__runTask(void );
1880          
1881          
1882          
1883          
1884          
1885          
1886          
1887          
1888          static  /*inline*/  void SimpleMacM__HALCC2420__sendPacketDone(uint8_t *packet, error_t result);
1889          
1890          
1891          
1892          
1893          
1894          
1895          
1896          
1897          
1898          static  /*inline*/  error_t SimpleMacM__SimpleMac__setChannel(uint8_t channel);
1899          //#line 160
1900          static  /*inline*/  error_t SimpleMacM__SimpleMac__rxEnable(void );
1901          
1902          
1903          
1904          
1905          
1906          
1907          
1908          
1909          static  /*inline*/  error_t SimpleMacM__SimpleMac__rxDisable(void );
1910          
1911          
1912          
1913          
1914          
1915          
1916          
1917          static  /*inline*/  uint8_t *SimpleMacM__HALCC2420__receivedPacket(uint8_t *packet);
1918          //#line 222
1919          static  /*inline*/  error_t SimpleMacM__SimpleMac__setAddress(mac_addr_t *addr);
1920          
1921          
1922          
1923          
1924          
1925          
1926          
1927          
1928          static  /*inline*/  const mac_addr_t *SimpleMacM__SimpleMac__getAddress(void );
1929          //#line 256
1930          static  /*inline*/  const ieee_mac_addr_t *SimpleMacM__SimpleMac__getExtAddress(void );
1931          
1932          
1933          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 34  

1934          
1935          
1936          
1937          
1938          static  /*inline*/  error_t SimpleMacM__SimpleMac__addressFilterEnable(void );
1939          
1940          
1941          
1942          
1943          static  /*inline*/  error_t SimpleMacM__SimpleMac__addressFilterDisable(void );
1944          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1945          static error_t HalCC2430RadioP__receivedPacketTask__postTask(void );
1946          //#line 67
1947          static error_t HalCC2430RadioP__sendPacketDoneTask__postTask(void );
1948          //# 53 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1949          static error_t HalCC2430RadioP__InterruptRFErr__enableRisingEdge(void );
1950          //#line 53
1951          static error_t HalCC2430RadioP__InterruptTXDone__enableRisingEdge(void );
1952          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1953          static error_t HalCC2430RadioP__initTask__postTask(void );
1954          //# 43 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
1955          static void HalCC2430RadioP__HALCC2420__sendPacketDone(uint8_t *packet, error_t result);
1956          
1957          
1958          
1959          
1960          
1961          
1962          
1963          
1964          
1965          static uint8_t *HalCC2430RadioP__HALCC2420__receivedPacket(uint8_t *packet);
1966          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1967          static error_t HalCC2430RadioP__flushBufferTask__postTask(void );
1968          //# 34 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
1969          static int HalCC2430RadioP__StdOut__print(const char *str);
1970          //# 61 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
1971          static error_t HalCC2430RadioP__InterruptFIFOP__disable(void );
1972          //#line 53
1973          static error_t HalCC2430RadioP__InterruptFIFOP__enableRisingEdge(void );
1974          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1975          static error_t HalCC2430RadioP__setChannelTask__postTask(void );
1976          //#line 67
1977          static error_t HalCC2430RadioP__transmitTask__postTask(void );
1978          //# 81 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
1979          enum HalCC2430RadioP____nesc_unnamed4284 {
1980          //#line 81
1981            HalCC2430RadioP__initTask = 6U
1982          };
1983          //#line 81
1984          typedef int HalCC2430RadioP____nesc_sillytask_initTask[HalCC2430RadioP__initTask];
1985          enum HalCC2430RadioP____nesc_unnamed4285 {
1986          //#line 82
1987            HalCC2430RadioP__transmitTask = 7U
1988          };
1989          //#line 82
1990          typedef int HalCC2430RadioP____nesc_sillytask_transmitTask[HalCC2430RadioP__transmitTask];
1991          enum HalCC2430RadioP____nesc_unnamed4286 {
1992          //#line 83
1993            HalCC2430RadioP__setChannelTask = 8U
1994          };
1995          //#line 83
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 35  

1996          typedef int HalCC2430RadioP____nesc_sillytask_setChannelTask[HalCC2430RadioP__setChannelTask];
1997          //#line 472
1998          enum HalCC2430RadioP____nesc_unnamed4287 {
1999          //#line 472
2000            HalCC2430RadioP__receivedPacketTask = 9U
2001          };
2002          //#line 472
2003          typedef int HalCC2430RadioP____nesc_sillytask_receivedPacketTask[HalCC2430RadioP__receivedPacketTask];
2004          enum HalCC2430RadioP____nesc_unnamed4288 {
2005          //#line 473
2006            HalCC2430RadioP__flushBufferTask = 10U
2007          };
2008          //#line 473
2009          typedef int HalCC2430RadioP____nesc_sillytask_flushBufferTask[HalCC2430RadioP__flushBufferTask];
2010          enum HalCC2430RadioP____nesc_unnamed4289 {
2011          //#line 474
2012            HalCC2430RadioP__sendPacketDoneTask = 11U
2013          };
2014          //#line 474
2015          typedef int HalCC2430RadioP____nesc_sillytask_sendPacketDoneTask[HalCC2430RadioP__sendPacketDoneTask];
2016          //# 58 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/hplcc2420.h"
2017          //#line 4
2018          typedef enum HalCC2430RadioP____nesc_unnamed4290 {
2019          
2020            HalCC2430RadioP__CC_REG_SNOP = 0x00, 
2021            HalCC2430RadioP__CC_REG_SXOSCON = 0x01, 
2022            HalCC2430RadioP__CC_REG_STXCAL = 0x02, 
2023            HalCC2430RadioP__CC_REG_SRXON = 0x03, 
2024            HalCC2430RadioP__CC_REG_STXON = 0x04, 
2025            HalCC2430RadioP__CC_REG_STXONCCA = 0x05, 
2026            HalCC2430RadioP__CC_REG_SRFOFF = 0x06, 
2027            HalCC2430RadioP__CC_REG_SXOSCOFF = 0x07, 
2028            HalCC2430RadioP__CC_REG_SFLUSHRX = 0x08, 
2029            HalCC2430RadioP__CC_REG_SFLUSHTX = 0x09, 
2030            HalCC2430RadioP__CC_REG_SACK = 0x0A, 
2031            HalCC2430RadioP__CC_REG_SACKPEND = 0x0B, 
2032            HalCC2430RadioP__CC_REG_SRXDEC = 0x0C, 
2033            HalCC2430RadioP__CC_REG_STXENC = 0x0D, 
2034            HalCC2430RadioP__CC_REG_SAES = 0x0E, 
2035          
2036            HalCC2430RadioP__CC_REG_MAIN = 0x10, 
2037            HalCC2430RadioP__CC_REG_MDMCTRL0 = 0x11, 
2038            HalCC2430RadioP__CC_REG_MDMCTRL1 = 0x12, 
2039            HalCC2430RadioP__CC_REG_RSSI = 0x13, 
2040            HalCC2430RadioP__CC_REG_SYNCWORD = 0x14, 
2041            HalCC2430RadioP__CC_REG_TXCTRL = 0x15, 
2042            HalCC2430RadioP__CC_REG_RXCTRL0 = 0x16, 
2043            HalCC2430RadioP__CC_REG_RXCTRL1 = 0x17, 
2044            HalCC2430RadioP__CC_REG_FSCTRL = 0x18, 
2045            HalCC2430RadioP__CC_REG_SECCTRL0 = 0x19, 
2046            HalCC2430RadioP__CC_REG_SECCTRL1 = 0x1A, 
2047            HalCC2430RadioP__CC_REG_BATTMON = 0x1B, 
2048            HalCC2430RadioP__CC_REG_IOCFG0 = 0x1C, 
2049            HalCC2430RadioP__CC_REG_IOCFG1 = 0x1D, 
2050            HalCC2430RadioP__CC_REG_MANFIDL = 0x1E, 
2051            HalCC2430RadioP__CC_REG_MANFIDH = 0x1F, 
2052            HalCC2430RadioP__CC_REG_FSMTC = 0x20, 
2053            HalCC2430RadioP__CC_REG_MANAND = 0x21, 
2054            HalCC2430RadioP__CC_REG_MANOR = 0x22, 
2055            HalCC2430RadioP__CC_REG_AGCCTRL = 0x23, 
2056            HalCC2430RadioP__CC_REG_AGCTST0 = 0x24, 
2057            HalCC2430RadioP__CC_REG_AGCTST1 = 0x25, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 36  

2058            HalCC2430RadioP__CC_REG_AGCTST2 = 0x26, 
2059            HalCC2430RadioP__CC_REG_FSTST0 = 0x27, 
2060            HalCC2430RadioP__CC_REG_FSTST1 = 0x28, 
2061            HalCC2430RadioP__CC_REG_FSTST2 = 0x29, 
2062            HalCC2430RadioP__CC_REG_FSTST3 = 0x2A, 
2063            HalCC2430RadioP__CC_REG_RXBPFTST = 0x2B, 
2064            HalCC2430RadioP__CC_REG_FSMSTATE = 0x2C, 
2065            HalCC2430RadioP__CC_REG_ADCTST = 0x2D, 
2066            HalCC2430RadioP__CC_REG_DACTST = 0x2E, 
2067            HalCC2430RadioP__CC_REG_TOPTST = 0x2F, 
2068            HalCC2430RadioP__CC_REG_RESERVED = 0x30, 
2069          
2070            HalCC2430RadioP__CC_REG_TXFIFO = 0x3E, 
2071            HalCC2430RadioP__CC_REG_RXFIFO = 0x3F
2072          } HalCC2430RadioP__cc2420_reg_t;
2073          //#line 73
2074          //#line 60
2075          typedef enum HalCC2430RadioP____nesc_unnamed4291 {
2076          
2077            HalCC2430RadioP__CC_ADDR_TXFIFO = 0x000, 
2078            HalCC2430RadioP__CC_ADDR_RXFIFO = 0x080, 
2079            HalCC2430RadioP__CC_ADDR_KEY0 = 0x100, 
2080            HalCC2430RadioP__CC_ADDR_RXNONCE = 0x110, 
2081            HalCC2430RadioP__CC_ADDR_SABUF = 0x120, 
2082            HalCC2430RadioP__CC_ADDR_KEY1 = 0x130, 
2083            HalCC2430RadioP__CC_ADDR_TXNONCE = 0x140, 
2084            HalCC2430RadioP__CC_ADDR_CBCSTATE = 0x150, 
2085            HalCC2430RadioP__CC_ADDR_IEEEADDR = 0x160, 
2086            HalCC2430RadioP__CC_ADDR_PANID = 0x168, 
2087            HalCC2430RadioP__CC_ADDR_SHORTADDR = 0x16A
2088          } HalCC2430RadioP__cc2420_addr_t;
2089          //#line 125
2090          //#line 115
2091          typedef enum HalCC2430RadioP____nesc_unnamed4292 {
2092          
2093            HalCC2430RadioP__CCA_HYST_0DB = 0x00, 
2094            HalCC2430RadioP__CCA_HYST_1DB = 0x01, 
2095            HalCC2430RadioP__CCA_HYST_2DB = 0x02, 
2096            HalCC2430RadioP__CCA_HYST_3DB = 0x03, 
2097            HalCC2430RadioP__CCA_HYST_4DB = 0x04, 
2098            HalCC2430RadioP__CCA_HYST_5DB = 0x05, 
2099            HalCC2430RadioP__CCA_HYST_6DB = 0x06, 
2100            HalCC2430RadioP__CCA_HYST_7DB = 0x07
2101          } HalCC2430RadioP__cca_hyst_db_t;
2102          //#line 145
2103          //#line 127
2104          typedef enum HalCC2430RadioP____nesc_unnamed4293 {
2105          
2106            HalCC2430RadioP__LEADING_ZERO_BYTES_1 = 0x00, 
2107            HalCC2430RadioP__LEADING_ZERO_BYTES_2 = 0x01, 
2108            HalCC2430RadioP__LEADING_ZERO_BYTES_3 = 0x02, 
2109            HalCC2430RadioP__LEADING_ZERO_BYTES_4 = 0x03, 
2110            HalCC2430RadioP__LEADING_ZERO_BYTES_5 = 0x04, 
2111            HalCC2430RadioP__LEADING_ZERO_BYTES_6 = 0x05, 
2112            HalCC2430RadioP__LEADING_ZERO_BYTES_7 = 0x06, 
2113            HalCC2430RadioP__LEADING_ZERO_BYTES_8 = 0x07, 
2114            HalCC2430RadioP__LEADING_ZERO_BYTES_9 = 0x08, 
2115            HalCC2430RadioP__LEADING_ZERO_BYTES_10 = 0x09, 
2116            HalCC2430RadioP__LEADING_ZERO_BYTES_11 = 0x0A, 
2117            HalCC2430RadioP__LEADING_ZERO_BYTES_12 = 0x0B, 
2118            HalCC2430RadioP__LEADING_ZERO_BYTES_13 = 0x0C, 
2119            HalCC2430RadioP__LEADING_ZERO_BYTES_14 = 0x0D, 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 37  

2120            HalCC2430RadioP__LEADING_ZERO_BYTES_15 = 0x0E, 
2121            HalCC2430RadioP__LEADING_ZERO_BYTES_16 = 0x0F
2122          } HalCC2430RadioP__preamble_length_t;
2123          //#line 158
2124          //#line 147
2125          typedef struct HalCC2430RadioP____nesc_unnamed4294 {
2126          
2127            HalCC2430RadioP__preamble_length_t preamble_length : 4;
2128            bool autoack : 1;
2129            bool autocrc : 1;
2130            uint8_t cca_mode : 2;
2131            HalCC2430RadioP__cca_hyst_db_t cca_hyst : 3;
2132            bool adr_decode : 1;
2133            bool pan_coordinator : 1;
2134            bool reserved_frame_mode : 1;
2135            uint8_t reserved : 2;
2136          } HalCC2430RadioP__MDMCTRL0_t;
2137          /*YYYYY } HalCC2430RadioP__MDMCTRL0_t*///# 63 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/H
             -alCC2430RadioP.nc"
2138          sfr HalCC2430RadioP__RFIF = 0xE9;
2139          
2140          static  /*inline*/  void HalCC2430RadioP__CC2430SetPanid(uint16_t id);
2141          static  /*inline*/  void HalCC2430RadioP__CC2430SetShortaddr(uint16_t shortAddr);
2142          static  /*inline*/  void HalCC2430RadioP__CC2420SetIEEEAddr(ieee_mac_addr_t extAddress);
2143          static  /*inline*/  void HalCC2430RadioP__CC2430Reset(void );
2144          static void HalCC2430RadioP__CC2430RFEnable(void );
2145          static  /*inline*/  void HalCC2430RadioP__CC2430RFDisable(void );
2146          static  /*inline*/  void HalCC2430RadioP__CC2430ExternalOscillator(void );
2147          static void HalCC2430RadioP__CC2430RxEnable(void );
2148          static  /*inline*/  void HalCC2430RadioP__CC2430RxDisable(void );
2149          static void HalCC2430RadioP__CC2430ChannelSet(uint8_t channel);
2150          static  /*inline*/  void HalCC2430RadioP__CC2430PALevelSet(uint8_t new_power);
2151          static  /*inline*/  void HalCC2430RadioP__CC2430ControlSet(void );
2152          static void HalCC2430RadioP__CC2430TxWait(void );
2153          static void HalCC2430RadioP__wait(uint16_t u);
2154          //#line 93
2155          ieee_mac_addr_t HalCC2430RadioP__ieeeAddress;
2156          mac_addr_t HalCC2430RadioP__shortAddress;
2157          //#line 94
2158          mac_addr_t HalCC2430RadioP__panid;
2159          
2160          bool HalCC2430RadioP__rxEnabled = FALSE;
2161          
2162          uint8_t HalCC2430RadioP__receivedPacket[128];
2163          uint8_t *HalCC2430RadioP__receivedPacketPtr;
2164          
2165          
2166          
2167          
2168          
2169          static  /*inline*/  error_t HalCC2430RadioP__Init__init(void );
2170          //#line 127
2171          static  /*inline*/  void HalCC2430RadioP__initTask__runTask(void );
2172          //#line 186
2173          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420Control__start(void );
2174          //#line 200
2175          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420Control__stop(void );
2176          //#line 215
2177          uint8_t *HalCC2430RadioP__transmitPacketPtr;
2178          bool HalCC2430RadioP__transmitInProgress = FALSE;
2179          
2180          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__sendPacket(uint8_t *packet);
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 38  

2181          
2182          
2183          
2184          
2185          
2186          
2187          
2188          static  /*inline*/  void HalCC2430RadioP__transmitTask__runTask(void );
2189          //#line 311
2190          uint8_t HalCC2430RadioP__currentChannel;
2191          
2192          static error_t HalCC2430RadioP__HALCC2420__setChannel(uint8_t channel);
2193          //#line 325
2194          static  /*inline*/  void HalCC2430RadioP__setChannelTask__runTask(void );
2195          //#line 357
2196          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__rxEnable(void );
2197          
2198          
2199          
2200          
2201          
2202          
2203          
2204          
2205          
2206          
2207          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__rxDisable(void );
2208          //#line 386
2209          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__setAddress(mac_addr_t *addr);
2210          
2211          
2212          
2213          
2214          
2215          
2216          
2217          
2218          
2219          
2220          static  /*inline*/  const mac_addr_t *HalCC2430RadioP__HALCC2420__getAddress(void );
2221          //#line 424
2222          static  /*inline*/  const ieee_mac_addr_t *HalCC2430RadioP__HALCC2420__getExtAddress(void );
2223          
2224          
2225          
2226          
2227          
2228          
2229          
2230          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__addressFilterEnable(void );
2231          
2232          
2233          
2234          
2235          
2236          
2237          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__addressFilterDisable(void );
2238          
2239          
2240          
2241          
2242          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 39  

2243          
2244          static  /*inline*/  void HalCC2430RadioP__CC2430SetPanid(uint16_t id);
2245          
2246          
2247          
2248          
2249          static  /*inline*/  void HalCC2430RadioP__CC2430SetShortaddr(uint16_t shortAddr);
2250          
2251          
2252          
2253          
2254          static  /*inline*/  void HalCC2430RadioP__CC2420SetIEEEAddr(ieee_mac_addr_t extAddress);
2255          //#line 475
2256          bool HalCC2430RadioP__receivedPacketTaskPosted = FALSE;
2257          //#line 475
2258          bool HalCC2430RadioP__flushBufferTaskPosted = FALSE;
2259          
2260          
2261          
2262          
2263          static  /*inline*/  void HalCC2430RadioP__InterruptTXDone__fired(void );
2264          //#line 492
2265          static  /*inline*/  void HalCC2430RadioP__sendPacketDoneTask__runTask(void );
2266          
2267          
2268          
2269          
2270          
2271          
2272          
2273          static  /*inline*/  void HalCC2430RadioP__InterruptFIFOP__fired(void );
2274          //#line 515
2275          uint8_t HalCC2430RadioP__frameLength = 0;
2276          //#line 515
2277          uint8_t HalCC2430RadioP__receivedPacketTaskRetries = 0;
2278          
2279          static  /*inline*/  void HalCC2430RadioP__receivedPacketTask__runTask(void );
2280          //#line 627
2281          static  /*inline*/  void HalCC2430RadioP__InterruptRFErr__fired(void );
2282          //#line 644
2283          static  /*inline*/  void HalCC2430RadioP__flushBufferTask__runTask(void );
2284          //#line 682
2285          static  /*inline*/  void HalCC2430RadioP__CC2430Reset(void );
2286          //#line 697
2287          static void HalCC2430RadioP__CC2430RFEnable(void );
2288          //#line 710
2289          static  /*inline*/  void HalCC2430RadioP__CC2430RFDisable(void );
2290          //#line 731
2291          static  /*inline*/  void HalCC2430RadioP__CC2430ExternalOscillator(void );
2292          
2293          
2294          
2295          
2296          
2297          
2298          
2299          
2300          
2301          
2302          static void HalCC2430RadioP__CC2430RxEnable(void );
2303          //#line 760
2304          static  /*inline*/  void HalCC2430RadioP__CC2430RxDisable(void );
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 40  

2305          //#line 773
2306          static void HalCC2430RadioP__CC2430ChannelSet(uint8_t channel);
2307          //#line 789
2308          static  /*inline*/  void HalCC2430RadioP__CC2430PALevelSet(uint8_t new_power);
2309          //#line 804
2310          static  /*inline*/  void HalCC2430RadioP__CC2430ControlSet(void );
2311          //#line 828
2312          static void HalCC2430RadioP__CC2430TxWait(void );
2313          //#line 846
2314          static   /*inline*/   void HalCC2430RadioP__wait(uint16_t u);
2315          //#line 870
2316          static  /*inline*/  void HalCC2430RadioP__StdOut__get(uint8_t _data);
2317          //# 61 "/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc"
2318          static void HplCC2430InterruptsC__CaptureSFD__captured(uint16_t time);
2319          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
2320          static void HplCC2430InterruptsC__InterruptRFErr__fired(void );
2321          //#line 68
2322          static void HplCC2430InterruptsC__InterruptTXDone__fired(void );
2323          //#line 68
2324          static void HplCC2430InterruptsC__InterruptCCA__fired(void );
2325          //#line 68
2326          static void HplCC2430InterruptsC__InterruptFIFOP__fired(void );
2327          //# 117 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
2328          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptFIFOP__enableRisingEdge(void );
2329          //#line 117
2330          static error_t HplCC2430InterruptsC__InterruptFIFOP__disable(void );
2331          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptTXDone__enableRisingEdge(void );
2332          
2333          
2334          
2335          
2336          
2337          
2338          
2339          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptRFErr__enableRisingEdge(void );
2340          //#line 142
2341          void __vector_0(void )   /*__attribute((interrupt))*/ ;
2342          
2343          
2344          
2345          
2346          
2347          
2348          void __vector_16(void )   /*__attribute((interrupt))*/ ;
2349          //#line 200
2350          static  /*inline*/  void HplCC2430InterruptsC__CaptureSFD__default__captured(uint16_t time);
2351          
2352          static  /*inline*/  void HplCC2430InterruptsC__InterruptCCA__default__fired(void );
2353          //# 52 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
2354          static error_t StdOutM__UART__put(uint8_t _data);
2355          //# 108 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
2356          static void StdOutM__StdOut__get(uint8_t _data);
2357          //# 47 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
2358          char StdOutM__buffer[1000];
2359          char *StdOutM__bufferhead;
2360          char *StdOutM__buffertail;
2361          char *StdOutM__bufferend;
2362          int StdOutM__isOutputting;
2363          
2364          int StdOutM__count;
2365          
2366          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 41  

2367          static  /*inline*/  error_t StdOutM__Init__init(void );
2368          //#line 77
2369          static int StdOutM__StdOut__print(const char *str);
2370          //#line 155
2371          static int StdOutM__StdOut__printHex(uint8_t c);
2372          //#line 181
2373          static int StdOutM__StdOut__printHexword(uint16_t c);
2374          //#line 196
2375          static int StdOutM__StdOut__printBase10uint8(const uint8_t c);
2376          //#line 507
2377          static void StdOutM__StdOut__dumpHex(uint8_t ptr[], uint8_t countar, char *sep);
2378          //#line 520
2379          static  /*inline*/  void StdOutM__UART__putDone(void );
2380          //#line 545
2381          static  /*inline*/  void StdOutM__UART__get(uint8_t _data);
2382          //# 58 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
2383          static void HalCC2430SimpleUartP__uart0__get(uint8_t _data);
2384          
2385          
2386          
2387          
2388          
2389          static void HalCC2430SimpleUartP__uart0__putDone(void );
2390          //# 50 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
2391          static  /*inline*/  error_t HalCC2430SimpleUartP__Init__init(void );
2392          //#line 130
2393          static  /*inline*/  error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data);
2394          
2395          
2396          
2397          
2398          void __vector_2(void )   /*__attribute((interrupt))*/ ;
2399          //#line 154
2400          void __vector_7(void )   /*__attribute((interrupt))*/ ;
2401          //# 107 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
2402            /*inline*/    __nesc_atomic_t __nesc_atomic_start(void )
2403          //#line 107
2404          {
2405   1        __nesc_atomic_t tmp = EA;
2406   1      
2407   1      //#line 109
2408   1        EA = 0;
2409   1        return tmp;
2410   1      }
2411          
2412            /*inline*/    void __nesc_atomic_end(__nesc_atomic_t oldSreg)
2413          //#line 113
2414          {
2415   1        EA = oldSreg;
2416   1      }
2417          
2418          //# 124 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
2419          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void )
2420          {
2421   1        /* atomic removed: atomic calls only */
2422   1        {
2423   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
2424   2          SchedulerBasicP__m_head = SchedulerBasicP__NO_TASK;
2425   2          SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
2426   2        }
2427   1      }
2428          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 42  

2429          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
2430           /*inline*/  static void RealMainP__Scheduler__init(void ){
2431   1      //#line 57
2432   1        SchedulerBasicP__Scheduler__init();
2433   1      //#line 57
2434   1      }
2435          //#line 57
2436          //# 95 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
2437          static   /*inline*/   void HplMcs51GeneralIOC__P13__clr(void )
2438          //#line 95
2439          {
2440   1      //#line 95
2441   1        P1_3 = 0;
2442   1      }
2443          
2444          //# 41 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2445           /*inline*/  static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr(void ){
2446   1      //#line 41
2447   1        HplMcs51GeneralIOC__P13__clr();
2448   1      //#line 41
2449   1      }
2450          //#line 41
2451          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
2452          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set(void )
2453          //#line 59
2454          {
2455   1      //#line 59
2456   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__clr();
2457   1      }
2458          
2459          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2460           /*inline*/  static void LedsP__Led2__set(void ){
2461   1      //#line 40
2462   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__set();
2463   1      //#line 40
2464   1      }
2465          //#line 40
2466          //# 23 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
2467          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void )
2468          //#line 23
2469          {
2470   1      }
2471          
2472          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2473           /*inline*/  static void LedsP__Led1__set(void ){
2474   1      //#line 40
2475   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set();
2476   1      //#line 40
2477   1      }
2478          //#line 40
2479          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
2480          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void )
2481          //#line 92
2482          {
2483   1      //#line 92
2484   1        P1_0 = 0;
2485   1      }
2486          
2487          //# 41 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2488           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr(void ){
2489   1      //#line 41
2490   1        HplMcs51GeneralIOC__P10__clr();
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 43  

2491   1      //#line 41
2492   1      }
2493          //#line 41
2494          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
2495          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set(void )
2496          //#line 59
2497          {
2498   1      //#line 59
2499   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__clr();
2500   1      }
2501          
2502          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2503           /*inline*/  static void LedsP__Led0__set(void ){
2504   1      //#line 40
2505   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__set();
2506   1      //#line 40
2507   1      }
2508          //#line 40
2509          //# 95 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
2510          static   /*inline*/   void HplMcs51GeneralIOC__P13__makeOutput(void )
2511          //#line 95
2512          {
2513   1      //#line 95
2514   1        P1_DIR |= 1 << 3;
2515   1      }
2516          
2517          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2518           /*inline*/  static void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput(void ){
2519   1      //#line 46
2520   1        HplMcs51GeneralIOC__P13__makeOutput();
2521   1      //#line 46
2522   1      }
2523          //#line 46
2524          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
2525          static   /*inline*/   void /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput(void )
2526          //#line 59
2527          {
2528   1      //#line 59
2529   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__In__makeOutput();
2530   1      }
2531          
2532          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2533           /*inline*/  static void LedsP__Led2__makeOutput(void ){
2534   1      //#line 46
2535   1        /*PlatformLedsC.Led2_rev*/ReverseGPIOP__1__Out__makeOutput();
2536   1      //#line 46
2537   1      }
2538          //#line 46
2539          //# 27 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
2540          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void )
2541          //#line 27
2542          {
2543   1      }
2544          
2545          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2546           /*inline*/  static void LedsP__Led1__makeOutput(void ){
2547   1      //#line 46
2548   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput();
2549   1      //#line 46
2550   1      }
2551          //#line 46
2552          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 44  

2553          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void )
2554          //#line 92
2555          {
2556   1      //#line 92
2557   1        P1_DIR |= 1 << 0;
2558   1      }
2559          
2560          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2561           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput(void ){
2562   1      //#line 46
2563   1        HplMcs51GeneralIOC__P10__makeOutput();
2564   1      //#line 46
2565   1      }
2566          //#line 46
2567          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
2568          static   /*inline*/   void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput(void )
2569          //#line 59
2570          {
2571   1      //#line 59
2572   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__makeOutput();
2573   1      }
2574          
2575          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
2576           /*inline*/  static void LedsP__Led0__makeOutput(void ){
2577   1      //#line 46
2578   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__makeOutput();
2579   1      //#line 46
2580   1      }
2581          //#line 46
2582          //# 56 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
2583          static  /*inline*/  error_t LedsP__Init__init(void )
2584          //#line 56
2585          {
2586   1        /* atomic removed: atomic calls only */
2587   1      //#line 57
2588   1        {
2589   2          ;
2590   2          LedsP__Led0__makeOutput();
2591   2          LedsP__Led1__makeOutput();
2592   2          LedsP__Led2__makeOutput();
2593   2          LedsP__Led0__set();
2594   2          LedsP__Led1__set();
2595   2          LedsP__Led2__set();
2596   2        }
2597   1        return SUCCESS;
2598   1      }
2599          
2600          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
2601           /*inline*/  static error_t PlatformP__LedsInit__init(void ){
2602   1      //#line 62
2603   1        unsigned char __nesc_result;
2604   1      //#line 62
2605   1      
2606   1      //#line 62
2607   1        __nesc_result = LedsP__Init__init();
2608   1      //#line 62
2609   1      
2610   1      //#line 62
2611   1        return __nesc_result;
2612   1      //#line 62
2613   1      }
2614          //#line 62
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 45  

2615          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
2616          static  /*inline*/  error_t PlatformP__Init__init(void )
2617          //#line 48
2618          {
2619   1        uint8_t new_clkcon;
2620   1      
2621   1      //#line 88
2622   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
2623   1      
2624   1      
2625   1      
2626   1        SLEEP &= ~(1 << CC2430_SLEEP_OSC_PD);
2627   1        while (!(SLEEP & (1 << CC2430_SLEEP_XOSC_STB))) ;
2628   1      
2629   1        new_clkcon = 0x0;
2630   1      
2631   1        new_clkcon = (new_clkcon & ~CC2430_CLKCON_TICKSPD_MASK) | CC2430_TICKF_DIV_1;
2632   1      
2633   1      
2634   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC32K);
2635   1      
2636   1      
2637   1      
2638   1      
2639   1      
2640   1      
2641   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC);
2642   1      
2643   1        new_clkcon |= 1 << CC2430_CLKCON_TICKSPD;
2644   1      
2645   1        CLKCON = new_clkcon;
2646   1      //#line 137
2647   1        PlatformP__LedsInit__init();
2648   1        return SUCCESS;
2649   1      }
2650          
2651          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
2652           /*inline*/  static error_t RealMainP__PlatformInit__init(void ){
2653   1      //#line 62
2654   1        unsigned char __nesc_result;
2655   1      //#line 62
2656   1      
2657   1      //#line 62
2658   1        __nesc_result = PlatformP__Init__init();
2659   1      //#line 62
2660   1      
2661   1      //#line 62
2662   1        return __nesc_result;
2663   1      //#line 62
2664   1      }
2665          //#line 62
2666          //# 65 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
2667           /*inline*/  static bool RealMainP__Scheduler__runNextTask(void ){
2668   1      //#line 65
2669   1        unsigned char __nesc_result;
2670   1      //#line 65
2671   1      
2672   1      //#line 65
2673   1        __nesc_result = SchedulerBasicP__Scheduler__runNextTask();
2674   1      //#line 65
2675   1      
2676   1      //#line 65
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 46  

2677   1        return __nesc_result;
2678   1      //#line 65
2679   1      }
2680          //#line 65
2681          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
2682           /*inline*/  static error_t SimpleMacM__signalSendPacketDone__postTask(void ){
2683   1      //#line 67
2684   1        unsigned char __nesc_result;
2685   1      //#line 67
2686   1      
2687   1      //#line 67
2688   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(SimpleMacM__signalSendPacketDone);
2689   1      //#line 67
2690   1      
2691   1      //#line 67
2692   1        return __nesc_result;
2693   1      //#line 67
2694   1      }
2695          //#line 67
2696          //# 132 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
2697          static  /*inline*/  void SimpleMacM__HALCC2420__sendPacketDone(uint8_t *packet, error_t result)
2698          {
2699   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2700   2      //#line 134
2701   2          SimpleMacM__sendPacketResult = result;
2702   2      //#line 134
2703   2          __nesc_atomic_end(__nesc_atomic); }
2704   1      
2705   1        SimpleMacM__signalSendPacketDone__postTask();
2706   1      }
*** WARNING C280 IN LINE 2697 OF APP.C: 'packet': unreferenced local variable
2707          
2708          //# 43 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
2709           /*inline*/  static void HalCC2430RadioP__HALCC2420__sendPacketDone(uint8_t *packet, error_t result){
2710   1      //#line 43
2711   1        SimpleMacM__HALCC2420__sendPacketDone(packet, result);
2712   1      //#line 43
2713   1      }
2714          //#line 43
2715          //# 492 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
2716          static  /*inline*/  void HalCC2430RadioP__sendPacketDoneTask__runTask(void )
2717          //#line 492
2718          {
2719   1        HalCC2430RadioP__HALCC2420__sendPacketDone(HalCC2430RadioP__transmitPacketPtr, SUCCESS);
2720   1      }
2721          
2722          //# 97 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
2723          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
2724          {
2725   1        return SchedulerBasicP__m_next[id] != SchedulerBasicP__NO_TASK || SchedulerBasicP__m_tail == id;
2726   1      }
2727          
2728          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
2729          {
2730   1        if (!SchedulerBasicP__isWaiting(id)) 
2731   1          {
2732   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
2733   2              {
2734   3                SchedulerBasicP__m_head = id;
2735   3                SchedulerBasicP__m_tail = id;
2736   3              }
2737   2            else 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 47  

2738   2              {
2739   3                SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
2740   3                SchedulerBasicP__m_tail = id;
2741   3              }
2742   2            return TRUE;
2743   2          }
2744   1        else 
2745   1          {
2746   2            return FALSE;
2747   2          }
2748   1      }
2749          
2750          //# 34 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
2751           /*inline*/  static int HalCC2430RadioP__StdOut__print(const char *str){
2752   1      //#line 34
2753   1        int __nesc_result;
2754   1      //#line 34
2755   1      
2756   1      //#line 34
2757   1        __nesc_result = StdOutM__StdOut__print(str);
2758   1      //#line 34
2759   1      
2760   1      //#line 34
2761   1        return __nesc_result;
2762   1      //#line 34
2763   1      }
2764          //#line 34
2765          //# 61 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
2766           /*inline*/  static error_t HalCC2430RadioP__InterruptFIFOP__disable(void ){
2767   1      //#line 61
2768   1        unsigned char __nesc_result;
2769   1      //#line 61
2770   1      
2771   1      //#line 61
2772   1        __nesc_result = HplCC2430InterruptsC__InterruptFIFOP__disable();
2773   1      //#line 61
2774   1      
2775   1      //#line 61
2776   1        return __nesc_result;
2777   1      //#line 61
2778   1      }
2779          //#line 61
2780          //# 760 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
2781          static  /*inline*/  void HalCC2430RadioP__CC2430RxDisable(void )
2782          {
2783   1        RFST = 0xE5;
2784   1      
2785   1      
2786   1        HalCC2430RadioP__InterruptFIFOP__disable();
2787   1      
2788   1        HalCC2430RadioP__rxEnabled = FALSE;
2789   1      }
2790          
2791          //#line 644
2792          static  /*inline*/  void HalCC2430RadioP__flushBufferTask__runTask(void )
2793          {
2794   1        if (HalCC2430RadioP__rxEnabled) 
2795   1          {
2796   2      
2797   2            HalCC2430RadioP__CC2430RxDisable();
2798   2      
2799   2      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 48  

2800   2            RFST = 0xE6;
2801   2            RFST = 0xE6;
2802   2      
2803   2      
2804   2            HalCC2430RadioP__CC2430RxEnable();
2805   2          }
2806   1        else {
2807   2      
2808   2            RFST = 0xE6;
2809   2            RFST = 0xE6;
2810   2          }
2811   1      
2812   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2813   2      //#line 664
2814   2          HalCC2430RadioP__flushBufferTaskPosted = FALSE;
2815   2      //#line 664
2816   2          __nesc_atomic_end(__nesc_atomic); }
2817   1      
2818   1        HalCC2430RadioP__StdOut__print("MAC: Buffer flushed\r\n");
2819   1      }
2820          
2821          //# 117 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
2822          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptFIFOP__enableRisingEdge(void )
2823          //#line 117
2824          {
2825   1      //#line 117
2826   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
2827   2      //#line 117
2828   2          {
2829   3      //#line 117
2830   3            RFIM |= 1 << CC2430_RFIM_FIFOP;
2831   3      //#line 117
2832   3            RFIF &= ~(1 << CC2430_RFIF_FIFOP);
2833   3      //#line 117
2834   3            IEN2 |= 1 << CC2430_IEN2_RFIE;
2835   3          }
2836   2      //#line 118
2837   2          __nesc_atomic_end(__nesc_atomic); }
2838   1      //#line 117
2839   1        return SUCCESS;
2840   1      }
2841          
2842          //# 53 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
2843           /*inline*/  static error_t HalCC2430RadioP__InterruptFIFOP__enableRisingEdge(void ){
2844   1      //#line 53
2845   1        unsigned char __nesc_result;
2846   1      //#line 53
2847   1      
2848   1      //#line 53
2849   1        __nesc_result = HplCC2430InterruptsC__InterruptFIFOP__enableRisingEdge();
2850   1      //#line 53
2851   1      
2852   1      //#line 53
2853   1        return __nesc_result;
2854   1      //#line 53
2855   1      }
2856          //#line 53
2857          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
2858           /*inline*/  static error_t HalCC2430RadioP__flushBufferTask__postTask(void ){
2859   1      //#line 67
2860   1        unsigned char __nesc_result;
2861   1      //#line 67
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 49  

2862   1      
2863   1      //#line 67
2864   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__flushBufferTask);
2865   1      //#line 67
2866   1      
2867   1      //#line 67
2868   1        return __nesc_result;
2869   1      //#line 67
2870   1      }
2871          //#line 67
2872           /*inline*/  static error_t HalCC2430RadioP__receivedPacketTask__postTask(void ){
2873   1      //#line 67
2874   1        unsigned char __nesc_result;
2875   1      //#line 67
2876   1      
2877   1      //#line 67
2878   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__receivedPacketTask);
2879   1      //#line 67
2880   1      
2881   1      //#line 67
2882   1        return __nesc_result;
2883   1      //#line 67
2884   1      }
2885          //#line 67
2886          //# 34 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
2887           /*inline*/  static int TestAppP__StdOut__print(const char *str){
2888   1      //#line 34
2889   1        int __nesc_result;
2890   1      //#line 34
2891   1      
2892   1      //#line 34
2893   1        __nesc_result = StdOutM__StdOut__print(str);
2894   1      //#line 34
2895   1      
2896   1      //#line 34
2897   1        return __nesc_result;
2898   1      //#line 34
2899   1      }
2900          //#line 34
2901          
2902          
2903          
2904          
2905          
2906           /*inline*/  static int TestAppP__StdOut__printHex(uint8_t c){
2907   1      //#line 39
2908   1        int __nesc_result;
2909   1      //#line 39
2910   1      
2911   1      //#line 39
2912   1        __nesc_result = StdOutM__StdOut__printHex(c);
2913   1      //#line 39
2914   1      
2915   1      //#line 39
2916   1        return __nesc_result;
2917   1      //#line 39
2918   1      }
2919          //#line 39
2920          
2921          
2922          
2923          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 50  

2924          
2925           /*inline*/  static int TestAppP__StdOut__printHexword(uint16_t c){
2926   1      //#line 44
2927   1        int __nesc_result;
2928   1      //#line 44
2929   1      
2930   1      //#line 44
2931   1        __nesc_result = StdOutM__StdOut__printHexword(c);
2932   1      //#line 44
2933   1      
2934   1      //#line 44
2935   1        return __nesc_result;
2936   1      //#line 44
2937   1      }
2938          //#line 44
2939          //# 130 "TestAppP.nc"
2940          static  /*inline*/  packet_t *TestAppP__SimpleMac__receivedPacket(packet_t *packet)
2941          {
2942   1        uint8_t i;
2943   1      
2944   1        TestAppP__StdOut__print("Received packet: ");
2945   1        TestAppP__StdOut__printHex(packet->length);
2946   1        TestAppP__StdOut__print(" ");
2947   1        TestAppP__StdOut__printHexword(packet->fcf);
2948   1        TestAppP__StdOut__print(" ");
2949   1        TestAppP__StdOut__printHex(packet->_data_seq_no);
2950   1        TestAppP__StdOut__print(" ");
2951   1        TestAppP__StdOut__printHexword(packet->dest);
2952   1        TestAppP__StdOut__print(" ");
2953   1        TestAppP__StdOut__printHexword(packet->src);
2954   1        TestAppP__StdOut__print(" ");
2955   1      
2956   1        for (i = 0; i < packet->length - 9; i++) 
2957   1          {
2958   2            TestAppP__StdOut__printHex(packet->_data[i]);
2959   2            TestAppP__StdOut__print(" ");
2960   2          }
2961   1      
2962   1        TestAppP__StdOut__printHex(packet->fcs.rssi);
2963   1        TestAppP__StdOut__print(" ");
2964   1        TestAppP__StdOut__printHex(packet->fcs.correlation);
2965   1        TestAppP__StdOut__print("\r\n");
2966   1      
2967   1        return packet;
2968   1      }
2969          
2970          //# 52 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
2971           /*inline*/  static packet_t *SimpleMacM__SimpleMac__receivedPacket(packet_t *packet){
2972   1      //#line 52
2973   1        struct packet *__nesc_result;
2974   1      //#line 52
2975   1      
2976   1      //#line 52
2977   1        __nesc_result = TestAppP__SimpleMac__receivedPacket(packet);
2978   1      //#line 52
2979   1      
2980   1      //#line 52
2981   1        return __nesc_result;
2982   1      //#line 52
2983   1      }
2984          //#line 52
2985          //# 177 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 51  

2986          static  /*inline*/  uint8_t *SimpleMacM__HALCC2420__receivedPacket(uint8_t *packet)
2987          {
2988   1        uint8_t length;
2989   1      //#line 179
2990   1        uint8_t i;
2991   1        uint16_t tmp;
2992   1      
2993   1      
2994   1        length = packet[0];
2995   1      
2996   1        SimpleMacM__receivedPacketPtr->length = length;
2997   1      
2998   1        tmp = packet[2];
2999   1        tmp = (tmp << 8) + packet[1];
3000   1        SimpleMacM__receivedPacketPtr->fcf = tmp;
3001   1      
3002   1        SimpleMacM__receivedPacketPtr->_data_seq_no = packet[3];
3003   1      
3004   1        tmp = packet[5];
3005   1        tmp = (tmp << 8) + packet[4];
3006   1        SimpleMacM__receivedPacketPtr->dest = tmp;
3007   1      
3008   1        tmp = packet[7];
3009   1        tmp = (tmp << 8) + packet[6];
3010   1        SimpleMacM__receivedPacketPtr->src = tmp;
3011   1      
3012   1        for (i = 8; i < length - 1; i++) 
3013   1          {
3014   2            SimpleMacM__receivedPacketPtr->_data[i - 8] = packet[i];
3015   2          }
3016   1      
3017   1        SimpleMacM__receivedPacketPtr->fcs.rssi = packet[length - 1];
3018   1        SimpleMacM__receivedPacketPtr->fcs.correlation = packet[length];
3019   1      
3020   1        SimpleMacM__receivedPacketPtr = SimpleMacM__SimpleMac__receivedPacket(SimpleMacM__receivedPacketPtr);
3021   1      
3022   1        return packet;
3023   1      }
3024          
3025          //# 53 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
3026           /*inline*/  static uint8_t *HalCC2430RadioP__HALCC2420__receivedPacket(uint8_t *packet){
3027   1      //#line 53
3028   1        unsigned char *__nesc_result;
3029   1      //#line 53
3030   1      
3031   1      //#line 53
3032   1        __nesc_result = SimpleMacM__HALCC2420__receivedPacket(packet);
3033   1      //#line 53
3034   1      
3035   1      //#line 53
3036   1        return __nesc_result;
3037   1      //#line 53
3038   1      }
3039          //#line 53
3040          //# 517 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
3041          static  /*inline*/  void HalCC2430RadioP__receivedPacketTask__runTask(void )
3042          {
3043   1        uint8_t correlation;
3044   1      //#line 519
3045   1        uint8_t i;
3046   1      
3047   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 52  

3048   1      
3049   1      
3050   1        if (HalCC2430RadioP__frameLength == 0) 
3051   1          {
3052   2            HalCC2430RadioP__frameLength = RFD;
3053   2      
3054   2            if (HalCC2430RadioP__frameLength < 127) {
3055   3              HalCC2430RadioP__receivedPacketPtr[0] = HalCC2430RadioP__frameLength;
3056   3              }
3057   2            else 
3058   2      //#line 530
3059   2              {
3060   3      
3061   3      
3062   3                HalCC2430RadioP__flushBufferTask__postTask();
3063   3                { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3064   4      //#line 534
3065   4                  HalCC2430RadioP__receivedPacketTaskPosted = FALSE;
3066   4      //#line 534
3067   4                  __nesc_atomic_end(__nesc_atomic); }
3068   3                HalCC2430RadioP__frameLength = 0;
3069   3                HalCC2430RadioP__receivedPacketTaskRetries = 0;
3070   3                return;
3071   3              }
3072   2          }
3073   1      
3074   1      
3075   1        if (HalCC2430RadioP__frameLength > * (uint8_t xdata *)0xDF53) 
3076   1          {
3077   2      
3078   2      
3079   2      
3080   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3081   3      //#line 547
3082   3              {
3083   4                if (HalCC2430RadioP__flushBufferTaskPosted || HalCC2430RadioP__receivedPacketTaskRetries > 10) 
3084   4                  {
3085   5                    HalCC2430RadioP__flushBufferTask__postTask();
3086   5                    HalCC2430RadioP__receivedPacketTaskPosted = FALSE;
3087   5                    HalCC2430RadioP__frameLength = 0;
3088   5                    HalCC2430RadioP__receivedPacketTaskRetries = 0;
3089   5                  }
3090   4                else 
3091   4      //#line 554
3092   4                  {
3093   5                    HalCC2430RadioP__receivedPacketTask__postTask();
3094   5                    HalCC2430RadioP__receivedPacketTaskRetries++;
3095   5                  }
3096   4              }
3097   3      //#line 558
3098   3              __nesc_atomic_end(__nesc_atomic); }
3099   2      
3100   2            return;
3101   2          }
3102   1      
3103   1      
3104   1        HalCC2430RadioP__receivedPacketTaskRetries = 0;
3105   1      
3106   1      
3107   1        for (i = 0; i < HalCC2430RadioP__frameLength; i++) {
3108   2            if (* (uint8_t xdata *)0xDF53 > 0 && * (uint8_t xdata *)0xDF53 < 129) {
3109   3              HalCC2430RadioP__receivedPacketPtr[i + 1] = RFD;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 53  

3110   3              }
3111   2            else 
3112   2      //#line 570
3113   2              {
3114   3                HalCC2430RadioP__receivedPacketPtr[HalCC2430RadioP__frameLength] = 0;
3115   3                break;
3116   3              }
3117   2          }
3118   1      
3119   1      
3120   1        correlation = HalCC2430RadioP__receivedPacketPtr[HalCC2430RadioP__frameLength];
3121   1      
3122   1      
3123   1        HalCC2430RadioP__frameLength = 0;
3124   1      
3125   1      
3126   1      
3127   1      
3128   1      
3129   1      
3130   1        if (correlation & FCS_CRC_OK_MASK) 
3131   1          {
3132   2            HalCC2430RadioP__receivedPacketPtr = HalCC2430RadioP__HALCC2420__receivedPacket(HalCC2430RadioP__rec
             -eivedPacketPtr);
3133   2          }
3134   1        else {
3135   2      
3136   2            HalCC2430RadioP__StdOut__print("MAC: CRC Failed\n\r");
3137   2      
3138   2      
3139   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3140   3      //#line 596
3141   3              HalCC2430RadioP__receivedPacketTaskPosted = FALSE;
3142   3      //#line 596
3143   3              __nesc_atomic_end(__nesc_atomic); }
3144   2            HalCC2430RadioP__flushBufferTask__postTask();
3145   2          }
3146   1      
3147   1      
3148   1      
3149   1      
3150   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3151   2      //#line 603
3152   2          {
3153   3      
3154   3      
3155   3            if (* (uint8_t xdata *)0xDF53 > 0 && * (uint8_t xdata *)0xDF53 < 129) {
3156   4              HalCC2430RadioP__receivedPacketTask__postTask();
3157   4              }
3158   3            else {
3159   4                HalCC2430RadioP__receivedPacketTaskPosted = FALSE;
3160   4      
3161   4      
3162   4      
3163   4                if (HalCC2430RadioP__flushBufferTaskPosted) {
3164   5                  HalCC2430RadioP__flushBufferTask__postTask();
3165   5                  }
3166   4              }
3167   3          }
3168   2      //#line 618
3169   2          __nesc_atomic_end(__nesc_atomic); }
3170   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 54  

3171   1        HalCC2430RadioP__RFIF &= ~(1 << CC2430_RFIF_FIFOP);
3172   1      }
3173          
3174          //#line 325
3175          static  /*inline*/  void HalCC2430RadioP__setChannelTask__runTask(void )
3176          {
3177   1      
3178   1        HalCC2430RadioP__CC2430TxWait();
3179   1        if (HalCC2430RadioP__rxEnabled) 
3180   1          {
3181   2            HalCC2430RadioP__CC2430RxDisable();
3182   2      
3183   2            HalCC2430RadioP__CC2430ChannelSet(HalCC2430RadioP__currentChannel);
3184   2            HalCC2430RadioP__CC2430RxEnable();
3185   2          }
3186   1        else {
3187   2          HalCC2430RadioP__CC2430ChannelSet(HalCC2430RadioP__currentChannel);
3188   2          }
3189   1      }
3190          
3191          //#line 846
3192          static   /*inline*/   void HalCC2430RadioP__wait(uint16_t u)
3193          {
3194   1        uint8_t j;
3195   1        uint16_t i;
3196   1      
3197   1        u = u >> 3;
3198   1      
3199   1      
3200   1      
3201   1        for (i = 0; i < u; i++) {
3202   2            for (j = 0; j < 32; ) {
3203   3                j++;
3204   3              }
3205   2          }
3206   1      }
3207          
3208          //#line 226
3209          static  /*inline*/  void HalCC2430RadioP__transmitTask__runTask(void )
3210          {
3211   1        bool oldRxEnabled;
3212   1        uint8_t i;
3213   1      //#line 229
3214   1        uint8_t status;
3215   1      //#line 229
3216   1        uint8_t counter;
3217   1      
3218   1      
3219   1      
3220   1      
3221   1      
3222   1        oldRxEnabled = HalCC2430RadioP__rxEnabled;
3223   1        if (!HalCC2430RadioP__rxEnabled) 
3224   1          {
3225   2      
3226   2            HalCC2430RadioP__CC2430RxEnable();
3227   2          }
3228   1      
3229   1      
3230   1        HalCC2430RadioP__wait(128);
3231   1      
3232   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 55  

3233   1        if (!(* (uint8_t xdata *)0xDF62 & (1 << CC2430_RFSTATUS_CCA))) {
3234   2      
3235   2      
3236   2            if (!HalCC2430RadioP__rxEnabled) 
3237   2              {
3238   3      
3239   3                HalCC2430RadioP__CC2430RxDisable();
3240   3              }
3241   2      
3242   2            HalCC2430RadioP__HALCC2420__sendPacketDone(HalCC2430RadioP__transmitPacketPtr, CC2420_ERROR_CCA);
3243   2      
3244   2            return;
3245   2          }
3246   1      
3247   1      
3248   1      
3249   1      
3250   1      
3251   1      
3252   1      
3253   1        RFST = 0xE7;
3254   1      
3255   1      
3256   1        RFD = HalCC2430RadioP__transmitPacketPtr[0];
3257   1      
3258   1        for (i = 0; i < HalCC2430RadioP__transmitPacketPtr[0]; i++) {
3259   2            RFD = HalCC2430RadioP__transmitPacketPtr[i + 1];
3260   2          }
3261   1      
3262   1      
3263   1        i = 0;
3264   1        while (i++ < 3) 
3265   1          {
3266   2            RFST = 0xE3;
3267   2            counter = 0;
3268   2      
3269   2            do {
3270   3                status = * (uint8_t xdata *)0xDF62;
3271   3              }
3272   2            while (
3273   2      //#line 284
3274   2            !(status & (1 << CC2430_RFSTATUS_TX_ACTIVE)) && counter++ < 200);
3275   2      
3276   2            if (status & (1 << CC2430_RFSTATUS_TX_ACTIVE)) {
3277   3              break;
3278   3              }
3279   2          }
3280   1      
3281   1      
3282   1      
3283   1        if (!(status & (1 << CC2430_RFSTATUS_TX_ACTIVE))) {
3284   2      
3285   2      
3286   2            RFST = 0xE7;
3287   2      
3288   2            HalCC2430RadioP__HALCC2420__sendPacketDone(HalCC2430RadioP__transmitPacketPtr, CC2420_ERROR_TX);
3289   2      
3290   2            return;
3291   2          }
3292   1      
3293   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3294   2      //#line 303
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 56  

3295   2          HalCC2430RadioP__transmitInProgress = TRUE;
3296   2      //#line 303
3297   2          __nesc_atomic_end(__nesc_atomic); }
3298   1      
3299   1        return;
3300   1      }
3301          
3302          //# 126 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
3303          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptRFErr__enableRisingEdge(void )
3304          //#line 126
3305          {
3306   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3307   2      //#line 127
3308   2          {
3309   3            RFERRIF = 0;
3310   3            RFERRIE = 1;
3311   3          }
3312   2      //#line 130
3313   2          __nesc_atomic_end(__nesc_atomic); }
3314   1        return SUCCESS;
3315   1      }
3316          
3317          //# 53 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
3318           /*inline*/  static error_t HalCC2430RadioP__InterruptRFErr__enableRisingEdge(void ){
3319   1      //#line 53
3320   1        unsigned char __nesc_result;
3321   1      //#line 53
3322   1      
3323   1      //#line 53
3324   1        __nesc_result = HplCC2430InterruptsC__InterruptRFErr__enableRisingEdge();
3325   1      //#line 53
3326   1      
3327   1      //#line 53
3328   1        return __nesc_result;
3329   1      //#line 53
3330   1      }
3331          //#line 53
3332          //# 118 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
3333          static  /*inline*/  error_t HplCC2430InterruptsC__InterruptTXDone__enableRisingEdge(void )
3334          //#line 118
3335          {
3336   1      //#line 118
3337   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3338   2      //#line 118
3339   2          {
3340   3      //#line 118
3341   3            RFIM |= 1 << CC2430_RFIM_TXDONE;
3342   3      //#line 118
3343   3            RFIF &= ~(1 << CC2430_RFIF_TXDONE);
3344   3      //#line 118
3345   3            IEN2 |= 1 << CC2430_IEN2_RFIE;
3346   3          }
3347   2      //#line 119
3348   2          __nesc_atomic_end(__nesc_atomic); }
3349   1      //#line 118
3350   1        return SUCCESS;
3351   1      }
3352          
3353          //# 53 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
3354           /*inline*/  static error_t HalCC2430RadioP__InterruptTXDone__enableRisingEdge(void ){
3355   1      //#line 53
3356   1        unsigned char __nesc_result;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 57  

3357   1      //#line 53
3358   1      
3359   1      //#line 53
3360   1        __nesc_result = HplCC2430InterruptsC__InterruptTXDone__enableRisingEdge();
3361   1      //#line 53
3362   1      
3363   1      //#line 53
3364   1        return __nesc_result;
3365   1      //#line 53
3366   1      }
3367          //#line 53
3368          //# 710 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
3369          static  /*inline*/  void HalCC2430RadioP__CC2430RFDisable(void )
3370          {
3371   1        * (uint8_t xdata *)0xDF17 |= 1 << CC2430_RFPWR_RREG_RADIO_PD;
3372   1      }
3373          
3374          //#line 789
3375          static  /*inline*/  void HalCC2430RadioP__CC2430PALevelSet(uint8_t new_power)
3376          {
3377   1        uint16_t power;
3378   1      
3379   1        power = new_power * 0x1F;
3380   1        power /= 100;
3381   1      
3382   1        * (uint16_t xdata *)0xDF0A = (* (uint16_t xdata *)0xDF0A & ~0x1F) | (power & 0x1F);
3383   1      }
3384          
3385          
3386          
3387          
3388          
3389          
3390          static  /*inline*/  void HalCC2430RadioP__CC2430ControlSet(void )
3391          {
3392   1      
3393   1        * (uint8_t xdata *)0xDF02 &= ~(1 << CC2430_MDMCTRL0H_ADDR_DECODE);
3394   1      
3395   1      
3396   1      
3397   1        * (uint8_t xdata *)0xDF03 |= 1 << CC2430_MDMCTRL0L_AUTOCRC;
3398   1      
3399   1      
3400   1      
3401   1      
3402   1      
3403   1        * (uint8_t xdata *)0xDF4F = 0x7F;
3404   1      
3405   1      
3406   1        * (uint16_t xdata *)0xDF0A = 0x050F;
3407   1      
3408   1        return;
3409   1      }
3410          
3411          //#line 446
3412          static  /*inline*/  void HalCC2430RadioP__CC2430SetPanid(uint16_t id)
3413          {
3414   1        * (uint16_t xdata *)0xDF4B = id;
3415   1      }
3416          
3417          static  /*inline*/  void HalCC2430RadioP__CC2430SetShortaddr(uint16_t shortAddr)
3418          {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 58  

3419   1        * (uint16_t xdata *)0xDF4D = shortAddr;
3420   1      }
3421          
3422          static  /*inline*/  void HalCC2430RadioP__CC2420SetIEEEAddr(ieee_mac_addr_t extAddress)
3423          {
3424   1        * (uint8_t xdata *)0xDF4A = extAddress[7];
3425   1        * (uint8_t xdata *)0xDF49 = extAddress[6];
3426   1        * (uint8_t xdata *)0xDF48 = extAddress[5];
3427   1        * (uint8_t xdata *)0xDF47 = extAddress[4];
3428   1        * (uint8_t xdata *)0xDF46 = extAddress[3];
3429   1        * (uint8_t xdata *)0xDF45 = extAddress[2];
3430   1        * (uint8_t xdata *)0xDF44 = extAddress[1];
3431   1        * (uint8_t xdata *)0xDF43 = extAddress[0];
3432   1      }
3433          
3434          //#line 731
3435          static  /*inline*/  void HalCC2430RadioP__CC2430ExternalOscillator(void )
3436          {
3437   1        SLEEP &= ~(1 << CC2430_SLEEP_OSC_PD);
3438   1        CLKCON &= ~(1 << CC2430_CLKCON_CLKSPD);
3439   1      
3440   1        while (!(SLEEP & (1 << CC2430_SLEEP_XOSC_STB))) ;
3441   1      }
3442          
3443          //#line 682
3444          static  /*inline*/  void HalCC2430RadioP__CC2430Reset(void )
3445          {
3446   1      
3447   1        * (uint8_t xdata *)0xDF17 &= ~(1 << CC2430_RFPWR_RREG_RADIO_PD);
3448   1        * (uint8_t xdata *)0xDF17 |= 1 << CC2430_RFPWR_RREG_RADIO_PD;
3449   1      
3450   1      
3451   1      
3452   1        while (HalCC2430RadioP__RFIF & (1 << CC2430_RFIF_RREG_ON)) {
3453   2          }
3454   1      }
3455          
3456          //#line 127
3457          static  /*inline*/  void HalCC2430RadioP__initTask__runTask(void )
3458          {
3459   1      
3460   1        HalCC2430RadioP__ieeeAddress[0] = 0x10;
3461   1        HalCC2430RadioP__ieeeAddress[1] = 0x3d;
3462   1        HalCC2430RadioP__ieeeAddress[2] = 0x23;
3463   1      
3464   1      
3465   1        HalCC2430RadioP__ieeeAddress[3] = 0;
3466   1        HalCC2430RadioP__ieeeAddress[4] = 0;
3467   1        HalCC2430RadioP__ieeeAddress[5] = 0;
3468   1        HalCC2430RadioP__ieeeAddress[6] = TOS_NODE_ID >> 8;
3469   1        HalCC2430RadioP__ieeeAddress[7] = TOS_NODE_ID;
3470   1      
3471   1      
3472   1        HalCC2430RadioP__CC2430Reset();
3473   1      
3474   1      
3475   1        HalCC2430RadioP__CC2430ExternalOscillator();
3476   1      
3477   1      
3478   1      
3479   1      
3480   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 59  

3481   1      
3482   1        HalCC2430RadioP__CC2420SetIEEEAddr(HalCC2430RadioP__ieeeAddress);
3483   1      
3484   1      
3485   1        HalCC2430RadioP__shortAddress = ((uint16_t )HalCC2430RadioP__ieeeAddress[6] << 8) | HalCC2430RadioP__iee
             -eAddress[7];
3486   1        HalCC2430RadioP__CC2430SetShortaddr(HalCC2430RadioP__shortAddress);
3487   1      
3488   1      
3489   1        HalCC2430RadioP__panid = HalCC2430RadioP__shortAddress;
3490   1        HalCC2430RadioP__CC2430SetPanid(HalCC2430RadioP__panid);
3491   1      
3492   1      
3493   1      
3494   1      
3495   1      
3496   1        HalCC2430RadioP__CC2430ControlSet();
3497   1      
3498   1      
3499   1        HalCC2430RadioP__CC2430ChannelSet(CC2420_DEFAULT_CHANNEL);
3500   1      
3501   1      
3502   1        HalCC2430RadioP__CC2430PALevelSet(CC2420_DEFAULT_POWER);
3503   1      
3504   1      
3505   1      
3506   1      
3507   1        HalCC2430RadioP__CC2430RFDisable();
3508   1      
3509   1        HalCC2430RadioP__InterruptTXDone__enableRisingEdge();
3510   1        HalCC2430RadioP__InterruptRFErr__enableRisingEdge();
3511   1      }
3512          
3513          //# 117 "TestAppP.nc"
3514          static  /*inline*/  void TestAppP__SimpleMac__sendPacketDone(packet_t *packet, error_t result)
3515          {
3516   1        if (result == SUCCESS) {
3517   2            TestAppP__StdOut__print("Transmission done\r\n");
3518   2          }
3519   1        else 
3520   1      //#line 121
3521   1          {
3522   2            TestAppP__StdOut__print("Transmission failed: ");
3523   2            TestAppP__StdOut__printHex(result);
3524   2            TestAppP__StdOut__print("\r\n");
3525   2          }
3526   1      
3527   1        return;
3528   1      }
*** WARNING C280 IN LINE 3514 OF APP.C: 'packet': unreferenced local variable
3529          
3530          //# 42 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
3531           /*inline*/  static void SimpleMacM__SimpleMac__sendPacketDone(packet_t *packet, error_t result){
3532   1      //#line 42
3533   1        TestAppP__SimpleMac__sendPacketDone(packet, result);
3534   1      //#line 42
3535   1      }
3536          //#line 42
3537          //# 123 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
3538          static  /*inline*/  void SimpleMacM__signalSendPacketDone__runTask(void )
3539          {
3540   1        error_t tmp;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 60  

3541   1      
3542   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3543   2      //#line 127
3544   2          tmp = SimpleMacM__sendPacketResult;
3545   2      //#line 127
3546   2          __nesc_atomic_end(__nesc_atomic); }
3547   1      
3548   1        SimpleMacM__SimpleMac__sendPacketDone(SimpleMacM__sendPacketPtr, tmp);
3549   1      }
3550          
3551          //# 397 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
3552          static  /*inline*/  const mac_addr_t *HalCC2430RadioP__HALCC2420__getAddress(void )
3553          {
3554   1        return &HalCC2430RadioP__shortAddress;
3555   1      }
3556          
3557          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
3558           /*inline*/  static const mac_addr_t *SimpleMacM__HALCC2420__getAddress(void ){
3559   1      //#line 59
3560   1        unsigned short const *__nesc_result;
3561   1      //#line 59
3562   1      
3563   1      //#line 59
3564   1        __nesc_result = HalCC2430RadioP__HALCC2420__getAddress();
3565   1      //#line 59
3566   1      
3567   1      //#line 59
3568   1        return __nesc_result;
3569   1      //#line 59
3570   1      }
3571          //#line 59
3572          //# 57 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
3573          static  /*inline*/  void SimpleMacM__initTask__runTask(void )
3574          {
3575   1        SimpleMacM__shortAddress = SimpleMacM__HALCC2420__getAddress();
3576   1      }
3577          
3578          //# 103 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3579           /*inline*/  static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(/*HilTimerMilliC
             -.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type t0, /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_typ
             -e dt){
3580   1      //#line 103
3581   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(t0, dt);
3582   1      //#line 103
3583   1      }
3584          //#line 103
3585          //# 58 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
3586          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(uint32_t t0, uint32_t dt,
             - bool oneshot)
3587          {
3588   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt = dt;
3589   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot = oneshot;
3590   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__startAt(t0, dt);
3591   1      }
3592          
3593          //#line 93
3594          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(uint32_t 
             -t0, uint32_t dt)
3595          {
3596   1      //#line 94
3597   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(t0, dt, TRUE);
3598   1      }
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 61  

3599          
3600          //# 129 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
3601           /*inline*/  static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt
             -(uint32_t t0, uint32_t dt){
3602   1      //#line 129
3603   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__startOneShotAt(t0, dt);
3604   1      //#line 129
3605   1      }
3606          //#line 129
3607          //# 97 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
3608          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm0__stop(void )
3609          //#line 97
3610          {
3611   1      //#line 97
3612   1        T1CCTL0 &= ~(1 << CC2430_T1CCTLx_IM);
3613   1      }
3614          
3615          //# 73 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3616           /*inline*/  static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop(voi
             -d ){
3617   1      //#line 73
3618   1        /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm0__st
             -op();
3619   1      //#line 73
3620   1      }
3621          //#line 73
3622          //# 102 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
3623          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop(void )
3624          {
3625   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__stop();
3626   1      }
3627          
3628          //# 73 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3629           /*inline*/  static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop(void ){
3630   1      //#line 73
3631   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__stop();
3632   1      //#line 73
3633   1      }
3634          //#line 73
3635          //# 71 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
3636          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop(void )
3637          {
3638   1      //#line 72
3639   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__stop();
3640   1      }
3641          
3642          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
3643           /*inline*/  static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop(void ){
3644   1      //#line 78
3645   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__stop();
3646   1      //#line 78
3647   1      }
3648          //#line 78
3649          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
3650           /*inline*/  static /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__size_type /*Hil
             -TimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get(void ){
3651   1      //#line 64
3652   1        unsigned long __nesc_result;
3653   1      //#line 64
3654   1      
3655   1      //#line 64
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 62  

3656   1        __nesc_result = /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__get();
3657   1      //#line 64
3658   1      
3659   1      //#line 64
3660   1        return __nesc_result;
3661   1      //#line 64
3662   1      }
3663          //#line 64
3664          //# 86 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
3665          static  /*inline*/  /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow(void )
3666          {
3667   1        return /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__get();
3668   1      }
3669          
3670          //# 109 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3671           /*inline*/  static /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.Al
             -armToTimerC*/AlarmToTimerC__0__Alarm__getNow(void ){
3672   1      //#line 109
3673   1        unsigned long __nesc_result;
3674   1      //#line 109
3675   1      
3676   1      //#line 109
3677   1        __nesc_result = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getNow();
3678   1      //#line 109
3679   1      
3680   1      //#line 109
3681   1        return __nesc_result;
3682   1      //#line 109
3683   1      }
3684          //#line 109
3685          //# 96 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
3686          static  /*inline*/  uint32_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow(void )
3687          {
3688   1      //#line 97
3689   1        return /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__getNow();
3690   1      }
3691          
3692          //# 136 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
3693           /*inline*/  static uint32_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow(voi
             -d ){
3694   1      //#line 136
3695   1        unsigned long __nesc_result;
3696   1      //#line 136
3697   1      
3698   1      //#line 136
3699   1        __nesc_result = /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__getNow();
3700   1      //#line 136
3701   1      
3702   1      //#line 136
3703   1        return __nesc_result;
3704   1      //#line 136
3705   1      }
3706          //#line 136
3707          //# 100 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
3708          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask(
             -void )
3709          {
3710   1      
3711   1      
3712   1      
3713   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 63  

3714   1        uint32_t now = /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__getNow();
3715   1        int32_t min_remaining = (1UL << 31) - 1;
3716   1        bool min_remaining_isset = FALSE;
3717   1        uint16_t num;
3718   1      
3719   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__stop();
3720   1      
3721   1        for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
3722   1          {
3723   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtualiz
             -eTimerC*/VirtualizeTimerC__0__m_timers[num];
3724   2      
3725   2            if (timer->isrunning) 
3726   2              {
3727   3                uint32_t elapsed = now - timer->t0;
3728   3                int32_t remaining = timer->dt - elapsed;
3729   3      
3730   3                if (remaining < min_remaining) 
3731   3                  {
3732   4                    min_remaining = remaining;
3733   4                    min_remaining_isset = TRUE;
3734   4                  }
3735   3              }
3736   2          }
3737   1      
3738   1        if (min_remaining_isset) 
3739   1          {
3740   2            if (min_remaining <= 0) {
3741   3              /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(now);
3742   3              }
3743   2            else {
3744   3      //#line 135
3745   3              /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__startOneShotAt(now, min_remaini
             -ng);
3746   3              }
3747   2          }
3748   1      }
3749          
3750          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
3751           /*inline*/  static /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__size_type /*CounterMil
             -li32C.Transform*/TransformCounterC__0__CounterFrom__get(void ){
3752   1      //#line 64
3753   1        unsigned short __nesc_result;
3754   1      //#line 64
3755   1      
3756   1      //#line 64
3757   1        __nesc_result = /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounter
             -P__0__Counter__get();
3758   1      //#line 64
3759   1      
3760   1      //#line 64
3761   1        return __nesc_result;
3762   1      //#line 64
3763   1      }
3764          //#line 64
3765          //# 343 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
3766          static  /*inline*/  bool /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Counter__isOverflowPending(void )
3767          //#line 343
3768          {
3769   1        return T1CTL & CC2430_T1_OVFIF;
3770   1      }
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 64  

3771          
3772          //# 71 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
3773           /*inline*/  static bool /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending
             -(void ){
3774   1      //#line 71
3775   1        unsigned char __nesc_result;
3776   1      //#line 71
3777   1      
3778   1      //#line 71
3779   1        __nesc_result = /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounter
             -P__0__Counter__isOverflowPending();
3780   1      //#line 71
3781   1      
3782   1      //#line 71
3783   1        return __nesc_result;
3784   1      //#line 71
3785   1      }
3786          //#line 71
3787          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
3788           /*inline*/  static error_t TestAppP__sendPacketTask__postTask(void ){
3789   1      //#line 67
3790   1        unsigned char __nesc_result;
3791   1      //#line 67
3792   1      
3793   1      //#line 67
3794   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(TestAppP__sendPacketTask);
3795   1      //#line 67
3796   1      
3797   1      //#line 67
3798   1        return __nesc_result;
3799   1      //#line 67
3800   1      }
3801          //#line 67
3802          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
3803          static  /*inline*/  void HplMcs51GeneralIOC__P10__toggle(void )
3804          //#line 92
3805          {
3806   1        /* atomic removed: atomic calls only */
3807   1      //#line 92
3808   1        {
3809   2      //#line 92
3810   2          P1_0 = ~P1_0;
3811   2        }
3812   1      }
3813          
3814          //# 42 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
3815           /*inline*/  static void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle(void ){
3816   1      //#line 42
3817   1        HplMcs51GeneralIOC__P10__toggle();
3818   1      //#line 42
3819   1      }
3820          //#line 42
3821          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/ReverseGPIOP.nc"
3822          static  /*inline*/  void /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle(void )
3823          //#line 59
3824          {
3825   1      //#line 59
3826   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3827   2      //#line 59
3828   2          {
3829   3      //#line 59
3830   3            /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__In__toggle();
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 65  

3831   3          }
3832   2      //#line 60
3833   2          __nesc_atomic_end(__nesc_atomic); }
3834   1      }
3835          
3836          //# 42 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
3837           /*inline*/  static void LedsP__Led0__toggle(void ){
3838   1      //#line 42
3839   1        /*PlatformLedsC.Led0_rev*/ReverseGPIOP__0__Out__toggle();
3840   1      //#line 42
3841   1      }
3842          //#line 42
3843          //# 84 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
3844          static  /*inline*/  void LedsP__Leds__led0Toggle(void )
3845          //#line 84
3846          {
3847   1        LedsP__Led0__toggle();
3848   1        ;
3849   1      //#line 86
3850   1        ;
3851   1      }
3852          
3853          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
3854           /*inline*/  static void TestAppP__Leds__led0Toggle(void ){
3855   1      //#line 67
3856   1        LedsP__Leds__led0Toggle();
3857   1      //#line 67
3858   1      }
3859          //#line 67
3860          //# 80 "TestAppP.nc"
3861          static  /*inline*/  void TestAppP__Timer__fired(void )
3862          {
3863   1      //#line 94
3864   1        uint8_t dsn = TestAppP__transmitPacketPtr->_data_seq_no = (TestAppP__transmitPacketPtr->_data_seq_no + 1
             -) % 128;
3865   1      
3866   1      //#line 95
3867   1        TestAppP__Leds__led0Toggle();
3868   1        TestAppP__StdOut__print(":");
3869   1        TestAppP__StdOut__printHex(TestAppP__transmitPacketPtr->_data_seq_no);
3870   1        if (dsn % 16 == 0) {
3871   2            TestAppP__StdOut__print("\r\n");
3872   2          }
3873   1        TestAppP__sendPacketTask__postTask();
3874   1      }
3875          
3876          //# 204 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
3877          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(uin
             -t8_t num)
3878          {
3879   1      }
*** WARNING C280 IN LINE 3877 OF APP.C: 'num': unreferenced local variable
3880          
3881          //# 83 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
3882           /*inline*/  static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(uint8_t arg_
             -0x2b50edb925d8){
3883   1      //#line 83
3884   1        switch (arg_0x2b50edb925d8) {
3885   2      //#line 83
3886   2          case 0U:
3887   2      //#line 83
3888   2            TestAppP__Timer__fired();
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 66  

3889   2      //#line 83
3890   2            break;
3891   2      //#line 83
3892   2          default:
3893   2      //#line 83
3894   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__default__fired(arg_0x2b50edb925d8);
3895   2      //#line 83
3896   2            break;
3897   2      //#line 83
3898   2          }
3899   1      //#line 83
3900   1      }
3901          //#line 83
3902          //# 126 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
3903          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm0__startAt(uint16_t t0, uint16_t dt)
3904          //#line 126
3905          {
3906   1        uint16_t set;
3907   1      //#line 127
3908   1        uint16_t now;
3909   1      //#line 127
3910   1        uint16_t elapsed;
3911   1      
3912   1        /* atomic removed: atomic calls only */
3913   1      //#line 129
3914   1        {
3915   2          ((uint8_t *)&now)[1] = T1CNTL;
3916   2          (
3917   2      //#line 130
3918   2          (uint8_t *)&now)[0] = T1CNTH;
3919   2      
3920   2      
3921   2      
3922   2          elapsed = now - t0;
3923   2      
3924   2          if (elapsed >= dt) {
3925   3              set = now + 5;
3926   3            }
3927   2          else 
3928   2      //#line 138
3929   2            {
3930   3              uint16_t remaining = dt - elapsed;
3931   3      
3932   3      //#line 140
3933   3              if (remaining <= 5) {
3934   4                  set = now + 5;
3935   4                }
3936   3              else 
3937   3      //#line 142
3938   3                {
3939   4                  set = remaining + now;
3940   4                }
3941   3            }
3942   2      
3943   2      
3944   2          T1CC0L = (uint8_t )((uint8_t *)&set)[1];
3945   2          T1CC0H = (uint8_t )((uint8_t *)&set)[0];
3946   2          T1CCTL0 |= 1 << CC2430_T1CCTLx_IM;
3947   2        }
3948   1      
3949   1        return;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 67  

3950   1      }
3951          
3952          //# 103 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3953           /*inline*/  static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt(
             -/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__size_type t0, /*HilTimerMilliC.AlarmMilli32C.Tr
             -ansform*/TransformAlarmC__0__AlarmFrom__size_type dt){
3954   1      //#line 103
3955   1        /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm0__st
             -artAt(t0, dt);
3956   1      //#line 103
3957   1      }
3958          //#line 103
3959          //# 139 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
3960          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired(void )
3961          {
3962   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(/*HilTimerMilliC.VirtualizeTimerC*/Vi
             -rtualizeTimerC__0__TimerFrom__getNow());
3963   1      }
3964          
3965          //# 83 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
3966           /*inline*/  static void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired(void ){
3967   1      //#line 83
3968   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__TimerFrom__fired();
3969   1      //#line 83
3970   1      }
3971          //#line 83
3972          //# 91 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
3973          static  /*inline*/  /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type /*HilTimerM
             -illiC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm(void )
3974          {
3975   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
3976   2      //#line 93
3977   2          {
3978   3            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type __nesc_temp = 
3979   3      //#line 93
3980   3            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.AlarmMilli32C.
             -Transform*/TransformAlarmC__0__m_dt;
3981   3      
3982   3            {
3983   4      //#line 93
3984   4              __nesc_atomic_end(__nesc_atomic); 
3985   4      //#line 93
3986   4              return __nesc_temp;
3987   4            }
3988   3          }
3989   2      //#line 95
3990   2          __nesc_atomic_end(__nesc_atomic); }
3991   1      }
3992          
3993          //# 116 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
3994           /*inline*/  static /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__size_type /*HilTimerMilliC.Al
             -armToTimerC*/AlarmToTimerC__0__Alarm__getAlarm(void ){
3995   1      //#line 116
3996   1        unsigned long __nesc_result;
3997   1      //#line 116
3998   1      
3999   1      //#line 116
4000   1        __nesc_result = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__getAlarm();
4001   1      //#line 116
4002   1      
4003   1      //#line 116
4004   1        return __nesc_result;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 68  

4005   1      //#line 116
4006   1      }
4007          //#line 116
4008          //# 74 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
4009          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__runTask(void )
4010          {
4011   1        if (/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_oneshot == FALSE) {
4012   2          /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__start(/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC_
             -_0__Alarm__getAlarm(), /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__m_dt, FALSE);
4013   2          }
4014   1      //#line 78
4015   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Timer__fired();
4016   1      }
4017          
4018          //# 55 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4019           /*inline*/  static error_t SimpleMacM__HALCC2420__setChannel(uint8_t channel){
4020   1      //#line 55
4021   1        unsigned char __nesc_result;
4022   1      //#line 55
4023   1      
4024   1      //#line 55
4025   1        __nesc_result = HalCC2430RadioP__HALCC2420__setChannel(channel);
4026   1      //#line 55
4027   1      
4028   1      //#line 55
4029   1        return __nesc_result;
4030   1      //#line 55
4031   1      }
4032          //#line 55
4033          //# 142 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4034          static  /*inline*/  error_t SimpleMacM__SimpleMac__setChannel(uint8_t channel)
4035          {
4036   1        return SimpleMacM__HALCC2420__setChannel(channel);
4037   1      }
4038          
4039          //# 54 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4040           /*inline*/  static error_t TestAppP__SimpleMac__setChannel(uint8_t channel){
4041   1      //#line 54
4042   1        unsigned char __nesc_result;
4043   1      //#line 54
4044   1      
4045   1      //#line 54
4046   1        __nesc_result = SimpleMacM__SimpleMac__setChannel(channel);
4047   1      //#line 54
4048   1      
4049   1      //#line 54
4050   1        return __nesc_result;
4051   1      //#line 54
4052   1      }
4053          //#line 54
4054          //# 61 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
4055           /*inline*/  static int TestAppP__StdOut__printBase10uint8(const uint8_t c){
4056   1      //#line 61
4057   1        int __nesc_result;
4058   1      //#line 61
4059   1      
4060   1      //#line 61
4061   1        __nesc_result = StdOutM__StdOut__printBase10uint8(c);
4062   1      //#line 61
4063   1      
4064   1      //#line 61
4065   1        return __nesc_result;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 69  

4066   1      //#line 61
4067   1      }
4068          //#line 61
4069          //# 64 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
4070           /*inline*/  static void TestAppP__Timer__startPeriodic(uint32_t dt){
4071   1      //#line 64
4072   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(0U, dt);
4073   1      //#line 64
4074   1      }
4075          //#line 64
4076          //# 164 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
4077          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(uint8_t num)
4078          {
4079   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__m_timers[num].isrunning = FALSE;
4080   1      }
4081          
4082          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc"
4083           /*inline*/  static void TestAppP__Timer__stop(void ){
4084   1      //#line 78
4085   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__stop(0U);
4086   1      //#line 78
4087   1      }
4088          //#line 78
4089          //# 56 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
4090           /*inline*/  static void TestAppP__StdOut__dumpHex(uint8_t ptr[], uint8_t count, char *sep){
4091   1      //#line 56
4092   1        StdOutM__StdOut__dumpHex(ptr, count, sep);
4093   1      //#line 56
4094   1      }
4095          //#line 56
4096          //# 424 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4097          static  /*inline*/  const ieee_mac_addr_t *HalCC2430RadioP__HALCC2420__getExtAddress(void )
4098          {
4099   1        return (const ieee_mac_addr_t *)&HalCC2430RadioP__ieeeAddress;
4100   1      }
4101          
4102          //# 60 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4103           /*inline*/  static const ieee_mac_addr_t *SimpleMacM__HALCC2420__getExtAddress(void ){
4104   1      //#line 60
4105   1        unsigned char const (*__nesc_result)[8];
4106   1      //#line 60
4107   1      
4108   1      //#line 60
4109   1        __nesc_result = HalCC2430RadioP__HALCC2420__getExtAddress();
4110   1      //#line 60
4111   1      
4112   1      //#line 60
4113   1        return __nesc_result;
4114   1      //#line 60
4115   1      }
4116          //#line 60
4117          //# 256 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4118          static  /*inline*/  const ieee_mac_addr_t *SimpleMacM__SimpleMac__getExtAddress(void )
4119          {
4120   1        return SimpleMacM__HALCC2420__getExtAddress();
4121   1      }
4122          
4123          //# 59 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4124           /*inline*/  static const ieee_mac_addr_t *TestAppP__SimpleMac__getExtAddress(void ){
4125   1      //#line 59
4126   1        unsigned char const (*__nesc_result)[8];
4127   1      //#line 59
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 70  

4128   1      
4129   1      //#line 59
4130   1        __nesc_result = SimpleMacM__SimpleMac__getExtAddress();
4131   1      //#line 59
4132   1      
4133   1      //#line 59
4134   1        return __nesc_result;
4135   1      //#line 59
4136   1      }
4137          //#line 59
4138          //# 432 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4139          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__addressFilterEnable(void )
4140          {
4141   1        * (uint8_t xdata *)0xDF02 |= 1 << CC2430_MDMCTRL0H_ADDR_DECODE;
4142   1      
4143   1        return SUCCESS;
4144   1      }
4145          
4146          //# 65 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4147           /*inline*/  static error_t SimpleMacM__HALCC2420__addressFilterEnable(void ){
4148   1      //#line 65
4149   1        unsigned char __nesc_result;
4150   1      //#line 65
4151   1      
4152   1      //#line 65
4153   1        __nesc_result = HalCC2430RadioP__HALCC2420__addressFilterEnable();
4154   1      //#line 65
4155   1      
4156   1      //#line 65
4157   1        return __nesc_result;
4158   1      //#line 65
4159   1      }
4160          //#line 65
4161          //# 264 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4162          static  /*inline*/  error_t SimpleMacM__SimpleMac__addressFilterEnable(void )
4163          {
4164   1        return SimpleMacM__HALCC2420__addressFilterEnable();
4165   1      }
4166          
4167          //# 64 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4168           /*inline*/  static error_t TestAppP__SimpleMac__addressFilterEnable(void ){
4169   1      //#line 64
4170   1        unsigned char __nesc_result;
4171   1      //#line 64
4172   1      
4173   1      //#line 64
4174   1        __nesc_result = SimpleMacM__SimpleMac__addressFilterEnable();
4175   1      //#line 64
4176   1      
4177   1      //#line 64
4178   1        return __nesc_result;
4179   1      //#line 64
4180   1      }
4181          //#line 64
4182          //# 439 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4183          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__addressFilterDisable(void )
4184          {
4185   1        * (uint8_t xdata *)0xDF02 &= ~(1 << CC2430_MDMCTRL0H_ADDR_DECODE);
4186   1      
4187   1        return SUCCESS;
4188   1      }
4189          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 71  

4190          //# 66 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4191           /*inline*/  static error_t SimpleMacM__HALCC2420__addressFilterDisable(void ){
4192   1      //#line 66
4193   1        unsigned char __nesc_result;
4194   1      //#line 66
4195   1      
4196   1      //#line 66
4197   1        __nesc_result = HalCC2430RadioP__HALCC2420__addressFilterDisable();
4198   1      //#line 66
4199   1      
4200   1      //#line 66
4201   1        return __nesc_result;
4202   1      //#line 66
4203   1      }
4204          //#line 66
4205          //# 269 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4206          static  /*inline*/  error_t SimpleMacM__SimpleMac__addressFilterDisable(void )
4207          {
4208   1        return SimpleMacM__HALCC2420__addressFilterDisable();
4209   1      }
4210          
4211          //# 65 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4212           /*inline*/  static error_t TestAppP__SimpleMac__addressFilterDisable(void ){
4213   1      //#line 65
4214   1        unsigned char __nesc_result;
4215   1      //#line 65
4216   1      
4217   1      //#line 65
4218   1        __nesc_result = SimpleMacM__SimpleMac__addressFilterDisable();
4219   1      //#line 65
4220   1      
4221   1      //#line 65
4222   1        return __nesc_result;
4223   1      //#line 65
4224   1      }
4225          //#line 65
4226          //# 386 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4227          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__setAddress(mac_addr_t *addr)
4228          {
4229   1        HalCC2430RadioP__shortAddress = *addr;
4230   1        * (uint16_t xdata *)0xDF4D = *addr;
4231   1      
4232   1        return SUCCESS;
4233   1      }
4234          
4235          //# 58 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4236           /*inline*/  static error_t SimpleMacM__HALCC2420__setAddress(mac_addr_t *addr){
4237   1      //#line 58
4238   1        unsigned char __nesc_result;
4239   1      //#line 58
4240   1      
4241   1      //#line 58
4242   1        __nesc_result = HalCC2430RadioP__HALCC2420__setAddress(addr);
4243   1      //#line 58
4244   1      
4245   1      //#line 58
4246   1        return __nesc_result;
4247   1      //#line 58
4248   1      }
4249          //#line 58
4250          //# 222 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4251          static  /*inline*/  error_t SimpleMacM__SimpleMac__setAddress(mac_addr_t *addr)
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 72  

4252          {
4253   1        return SimpleMacM__HALCC2420__setAddress(addr);
4254   1      }
4255          
4256          //# 57 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4257           /*inline*/  static error_t TestAppP__SimpleMac__setAddress(mac_addr_t *addr){
4258   1      //#line 57
4259   1        unsigned char __nesc_result;
4260   1      //#line 57
4261   1      
4262   1      //#line 57
4263   1        __nesc_result = SimpleMacM__SimpleMac__setAddress(addr);
4264   1      //#line 57
4265   1      
4266   1      //#line 57
4267   1        return __nesc_result;
4268   1      //#line 57
4269   1      }
4270          //#line 57
4271          //# 231 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4272          static  /*inline*/  const mac_addr_t *SimpleMacM__SimpleMac__getAddress(void )
4273          {
4274   1        return SimpleMacM__HALCC2420__getAddress();
4275   1      }
4276          
4277          //# 58 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4278           /*inline*/  static const mac_addr_t *TestAppP__SimpleMac__getAddress(void ){
4279   1      //#line 58
4280   1        unsigned short const *__nesc_result;
4281   1      //#line 58
4282   1      
4283   1      //#line 58
4284   1        __nesc_result = SimpleMacM__SimpleMac__getAddress();
4285   1      //#line 58
4286   1      
4287   1      //#line 58
4288   1        return __nesc_result;
4289   1      //#line 58
4290   1      }
4291          //#line 58
4292          //# 186 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4293          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420Control__start(void )
4294          {
4295   1      
4296   1        HalCC2430RadioP__CC2430RFEnable();
4297   1      
4298   1      
4299   1        HalCC2430RadioP__CC2430RxEnable();
4300   1      
4301   1        return SUCCESS;
4302   1      }
4303          
4304          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
4305           /*inline*/  static error_t SimpleMacM__HALCC2420Control__start(void ){
4306   1      //#line 95
4307   1        unsigned char __nesc_result;
4308   1      //#line 95
4309   1      
4310   1      //#line 95
4311   1        __nesc_result = HalCC2430RadioP__HALCC2420Control__start();
4312   1      //#line 95
4313   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 73  

4314   1      //#line 95
4315   1        return __nesc_result;
4316   1      //#line 95
4317   1      }
4318          //#line 95
4319          //# 65 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4320          static  /*inline*/  error_t SimpleMacM__SimpleMacControl__start(void )
4321          {
4322   1        return SimpleMacM__HALCC2420Control__start();
4323   1      }
4324          
4325          //# 95 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
4326           /*inline*/  static error_t TestAppP__SimpleMacControl__start(void ){
4327   1      //#line 95
4328   1        unsigned char __nesc_result;
4329   1      //#line 95
4330   1      
4331   1      //#line 95
4332   1        __nesc_result = SimpleMacM__SimpleMacControl__start();
4333   1      //#line 95
4334   1      
4335   1      //#line 95
4336   1        return __nesc_result;
4337   1      //#line 95
4338   1      }
4339          //#line 95
4340          //# 200 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4341          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420Control__stop(void )
4342          {
4343   1      
4344   1        HalCC2430RadioP__CC2430TxWait();
4345   1        HalCC2430RadioP__CC2430RFDisable();
4346   1        return SUCCESS;
4347   1      }
4348          
4349          //# 105 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
4350           /*inline*/  static error_t SimpleMacM__HALCC2420Control__stop(void ){
4351   1      //#line 105
4352   1        unsigned char __nesc_result;
4353   1      //#line 105
4354   1      
4355   1      //#line 105
4356   1        __nesc_result = HalCC2430RadioP__HALCC2420Control__stop();
4357   1      //#line 105
4358   1      
4359   1      //#line 105
4360   1        return __nesc_result;
4361   1      //#line 105
4362   1      }
4363          //#line 105
4364          //# 70 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4365          static  /*inline*/  error_t SimpleMacM__SimpleMacControl__stop(void )
4366          {
4367   1        return SimpleMacM__HALCC2420Control__stop();
4368   1      }
4369          
4370          //# 105 "/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc"
4371           /*inline*/  static error_t TestAppP__SimpleMacControl__stop(void ){
4372   1      //#line 105
4373   1        unsigned char __nesc_result;
4374   1      //#line 105
4375   1      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 74  

4376   1      //#line 105
4377   1        __nesc_result = SimpleMacM__SimpleMacControl__stop();
4378   1      //#line 105
4379   1      
4380   1      //#line 105
4381   1        return __nesc_result;
4382   1      //#line 105
4383   1      }
4384          //#line 105
4385          //# 357 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4386          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__rxEnable(void )
4387          {
4388   1      
4389   1        HalCC2430RadioP__CC2430RxEnable();
4390   1      
4391   1        return SUCCESS;
4392   1      }
4393          
4394          //# 62 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4395           /*inline*/  static error_t SimpleMacM__HALCC2420__rxEnable(void ){
4396   1      //#line 62
4397   1        unsigned char __nesc_result;
4398   1      //#line 62
4399   1      
4400   1      //#line 62
4401   1        __nesc_result = HalCC2430RadioP__HALCC2420__rxEnable();
4402   1      //#line 62
4403   1      
4404   1      //#line 62
4405   1        return __nesc_result;
4406   1      //#line 62
4407   1      }
4408          //#line 62
4409          //# 160 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4410          static  /*inline*/  error_t SimpleMacM__SimpleMac__rxEnable(void )
4411          {
4412   1        return SimpleMacM__HALCC2420__rxEnable();
4413   1      }
4414          
4415          //# 61 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4416           /*inline*/  static error_t TestAppP__SimpleMac__rxEnable(void ){
4417   1      //#line 61
4418   1        unsigned char __nesc_result;
4419   1      //#line 61
4420   1      
4421   1      //#line 61
4422   1        __nesc_result = SimpleMacM__SimpleMac__rxEnable();
4423   1      //#line 61
4424   1      
4425   1      //#line 61
4426   1        return __nesc_result;
4427   1      //#line 61
4428   1      }
4429          //#line 61
4430          //# 368 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4431          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__rxDisable(void )
4432          {
4433   1      
4434   1        if (HalCC2430RadioP__rxEnabled) 
4435   1          {
4436   2            HalCC2430RadioP__CC2430RxDisable();
4437   2          }
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 75  

4438   1      
4439   1        return SUCCESS;
4440   1      }
4441          
4442          //# 63 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
4443           /*inline*/  static error_t SimpleMacM__HALCC2420__rxDisable(void ){
4444   1      //#line 63
4445   1        unsigned char __nesc_result;
4446   1      //#line 63
4447   1      
4448   1      //#line 63
4449   1        __nesc_result = HalCC2430RadioP__HALCC2420__rxDisable();
4450   1      //#line 63
4451   1      
4452   1      //#line 63
4453   1        return __nesc_result;
4454   1      //#line 63
4455   1      }
4456          //#line 63
4457          //# 169 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4458          static  /*inline*/  error_t SimpleMacM__SimpleMac__rxDisable(void )
4459          {
4460   1        return SimpleMacM__HALCC2420__rxDisable();
4461   1      }
4462          
4463          //# 62 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMac.nc"
4464           /*inline*/  static error_t TestAppP__SimpleMac__rxDisable(void ){
4465   1      //#line 62
4466   1        unsigned char __nesc_result;
4467   1      //#line 62
4468   1      
4469   1      //#line 62
4470   1        __nesc_result = SimpleMacM__SimpleMac__rxDisable();
4471   1      //#line 62
4472   1      
4473   1      //#line 62
4474   1        return __nesc_result;
4475   1      //#line 62
4476   1      }
4477          //#line 62
4478          //#line 34
4479           /*inline*/  static error_t TestAppP__SimpleMac__sendPacket(packet_t *packet){
4480   1      //#line 34
4481   1        unsigned char __nesc_result;
4482   1      //#line 34
4483   1      
4484   1      //#line 34
4485   1        __nesc_result = SimpleMacM__SimpleMac__sendPacket(packet);
4486   1      //#line 34
4487   1      
4488   1      //#line 34
4489   1        return __nesc_result;
4490   1      //#line 34
4491   1      }
4492          //#line 34
4493          //# 176 "TestAppP.nc"
4494          static  /*inline*/  void TestAppP__consoleTask__runTask(void )
4495          {
4496   1        uint8_t _data[2];
4497   1      
4498   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
4499   2      //#line 180
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 76  

4500   2          _data[0] = TestAppP__keyBuffer;
4501   2      //#line 180
4502   2          __nesc_atomic_end(__nesc_atomic); }
4503   1      
4504   1        switch (_data[0]) {
4505   2            case '\r': 
4506   2              TestAppP__StdOut__print("\r\n");
4507   2            break;
4508   2      
4509   2            case 't': 
4510   2              TestAppP__transmitPacketPtr->_data_seq_no = TestAppP__sequence++;
4511   2      
4512   2            TestAppP__StdOut__print("Transmitting packet: ");
4513   2      
4514   2            TestAppP__StdOut__dumpHex(TestAppP__transmitPacket, 18, " ");
4515   2            TestAppP__StdOut__print("\r\n");
4516   2      
4517   2            TestAppP__SimpleMac__sendPacket(TestAppP__transmitPacketPtr);
4518   2      
4519   2            break;
4520   2            case 'r': 
4521   2              if (!TestAppP__radioOn) {
4522   3      
4523   3                  TestAppP__StdOut__print("Radio is off\r\n");
4524   3                }
4525   2              else {
4526   3      //#line 203
4527   3                if (TestAppP__receiverOn) {
4528   4                    TestAppP__receiverOn = FALSE;
4529   4                    TestAppP__StdOut__print("Receiver turned off\r\n");
4530   4                    TestAppP__SimpleMac__rxDisable();
4531   4                  }
4532   3                else 
4533   3      //#line 207
4534   3                  {
4535   4                    TestAppP__receiverOn = TRUE;
4536   4                    TestAppP__StdOut__print("Receiver turned on\r\n");
4537   4                    TestAppP__SimpleMac__rxEnable();
4538   4                  }
4539   3                }
4540   2            break;
4541   2            case 's': 
4542   2              if (TestAppP__radioOn) {
4543   3                  TestAppP__radioOn = FALSE;
4544   3                  TestAppP__receiverOn = FALSE;
4545   3                  TestAppP__SimpleMacControl__stop();
4546   3                  TestAppP__StdOut__print("Radio turned off\r\n");
4547   3                }
4548   2              else 
4549   2      //#line 220
4550   2                {
4551   3                  TestAppP__radioOn = TRUE;
4552   3                  TestAppP__receiverOn = TRUE;
4553   3                  TestAppP__SimpleMacControl__start();
4554   3                  TestAppP__StdOut__print("Radio turned on\r\n");
4555   3                }
4556   2      
4557   2            break;
4558   2            case 'a': 
4559   2      
4560   2              TestAppP__shortAddress = *TestAppP__SimpleMac__getAddress();
4561   2      
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 77  

4562   2            TestAppP__StdOut__print("Short address: ");
4563   2            TestAppP__StdOut__printHexword(TestAppP__shortAddress);
4564   2            TestAppP__StdOut__print("\r\n");
4565   2      
4566   2            break;
4567   2            case 'b': 
4568   2              TestAppP__shortAddress = TOS_NODE_ID;
4569   2      
4570   2            TestAppP__StdOut__print("Set shortAddress: ");
4571   2            TestAppP__StdOut__printHexword(TOS_NODE_ID);
4572   2            TestAppP__StdOut__print("\r\n");
4573   2      
4574   2            TestAppP__SimpleMac__setAddress(&TestAppP__shortAddress);
4575   2      
4576   2            break;
4577   2      
4578   2            case 'c': 
4579   2      
4580   2              if (TestAppP__filter) {
4581   3                  TestAppP__filter = FALSE;
4582   3                  TestAppP__StdOut__print("Address filtering off\r\n");
4583   3                  TestAppP__SimpleMac__addressFilterDisable();
4584   3                }
4585   2              else 
4586   2      //#line 254
4587   2                {
4588   3                  TestAppP__filter = TRUE;
4589   3                  TestAppP__StdOut__print("Address filtering on\r\n");
4590   3                  TestAppP__SimpleMac__addressFilterEnable();
4591   3                }
4592   2      
4593   2            break;
4594   2            case 'd': 
4595   2      
4596   2              TestAppP__ieeeAddress = TestAppP__SimpleMac__getExtAddress();
4597   2      
4598   2            TestAppP__StdOut__print("Extended address: ");
4599   2            TestAppP__StdOut__dumpHex((uint8_t *)TestAppP__ieeeAddress, 8, " ");
4600   2            TestAppP__StdOut__print("\r\n");
4601   2      
4602   2            break;
4603   2      
4604   2            case 'e': 
4605   2              if (TestAppP__echo) {
4606   3                  TestAppP__echo = FALSE;
4607   3                  TestAppP__StdOut__print("Echo off\r\n");
4608   3                }
4609   2              else 
4610   2      //#line 275
4611   2                {
4612   3                  TestAppP__echo = TRUE;
4613   3                  TestAppP__StdOut__print("Echo on\r\n");
4614   3                }
4615   2      
4616   2            break;
4617   2      
4618   2            case 'm': 
4619   2              if (TestAppP__timerOn) {
4620   3                  TestAppP__timerOn = FALSE;
4621   3                  TestAppP__Timer__stop();
4622   3                }
4623   2              else 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 78  

4624   2      //#line 286
4625   2                {
4626   3                  TestAppP__timerOn = TRUE;
4627   3                  TestAppP__Timer__startPeriodic(100000);
4628   3                }
4629   2      
4630   2            break;
4631   2      
4632   2            case '+': 
4633   2              TestAppP__channel = TestAppP__channel == 26 ? 11 : TestAppP__channel + 1;
4634   2      
4635   2            TestAppP__StdOut__print("Channel : ");
4636   2            TestAppP__StdOut__printBase10uint8(TestAppP__channel);
4637   2            TestAppP__StdOut__print("\n\r");
4638   2      
4639   2            TestAppP__SimpleMac__setChannel(TestAppP__channel);
4640   2      
4641   2            break;
4642   2      
4643   2            case '-': 
4644   2              TestAppP__channel = TestAppP__channel == 11 ? 26 : TestAppP__channel - 1;
4645   2      
4646   2            TestAppP__StdOut__print("Channel : ");
4647   2            TestAppP__StdOut__printBase10uint8(TestAppP__channel);
4648   2            TestAppP__StdOut__print("\n\r");
4649   2      
4650   2            TestAppP__SimpleMac__setChannel(TestAppP__channel);
4651   2      
4652   2            break;
4653   2      
4654   2            default: 
4655   2              _data[1] = '\0';
4656   2            TestAppP__StdOut__print(_data);
4657   2            break;
4658   2          }
4659   1      }
4660          
4661          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
4662           /*inline*/  static error_t HalCC2430RadioP__transmitTask__postTask(void ){
4663   1      //#line 67
4664   1        unsigned char __nesc_result;
4665   1      //#line 67
4666   1      
4667   1      //#line 67
4668   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__transmitTask);
4669   1      //#line 67
4670   1      
4671   1      //#line 67
4672   1        return __nesc_result;
4673   1      //#line 67
4674   1      }
4675          //#line 67
4676          //# 218 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4677          static  /*inline*/  error_t HalCC2430RadioP__HALCC2420__sendPacket(uint8_t *packet)
4678          {
4679   1        HalCC2430RadioP__transmitPacketPtr = packet;
4680   1        HalCC2430RadioP__transmitTask__postTask();
4681   1      
4682   1        return SUCCESS;
4683   1      }
4684          
4685          //# 35 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/HALCC2420.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 79  

4686           /*inline*/  static error_t SimpleMacM__HALCC2420__sendPacket(uint8_t *packet){
4687   1      //#line 35
4688   1        unsigned char __nesc_result;
4689   1      //#line 35
4690   1      
4691   1      //#line 35
4692   1        __nesc_result = HalCC2430RadioP__HALCC2420__sendPacket(packet);
4693   1      //#line 35
4694   1      
4695   1      //#line 35
4696   1        return __nesc_result;
4697   1      //#line 35
4698   1      }
4699          //#line 35
4700          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
4701           /*inline*/  static error_t /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postT
             -ask(void ){
4702   1      //#line 67
4703   1        unsigned char __nesc_result;
4704   1      //#line 67
4705   1      
4706   1      //#line 67
4707   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(/*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC
             -__0__updateFromTimer);
4708   1      //#line 67
4709   1      
4710   1      //#line 67
4711   1        return __nesc_result;
4712   1      //#line 67
4713   1      }
4714          //#line 67
4715          //# 144 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
4716          static  /*inline*/  void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(uint8_t num, u
             -int32_t t0, uint32_t dt, bool isoneshot)
4717          {
4718   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.VirtualizeTim
             -erC*/VirtualizeTimerC__0__m_timers[num];
4719   1      
4720   1      //#line 147
4721   1        timer->t0 = t0;
4722   1        timer->dt = dt;
4723   1        timer->isoneshot = isoneshot;
4724   1        timer->isrunning = TRUE;
4725   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
4726   1      }
4727          
4728          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
4729           /*inline*/  static error_t HalCC2430RadioP__setChannelTask__postTask(void ){
4730   1      //#line 67
4731   1        unsigned char __nesc_result;
4732   1      //#line 67
4733   1      
4734   1      //#line 67
4735   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__setChannelTask);
4736   1      //#line 67
4737   1      
4738   1      //#line 67
4739   1        return __nesc_result;
4740   1      //#line 67
4741   1      }
4742          //#line 67
4743          //# 110 "TestAppP.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 80  

4744          static  /*inline*/  void TestAppP__sendPacketTask__runTask(void )
4745          {
4746   1        TestAppP__SimpleMacControl__start();
4747   1        TestAppP__SimpleMac__sendPacket(TestAppP__transmitPacketPtr);
4748   1        TestAppP__SimpleMacControl__stop();
4749   1      }
4750          
4751          //# 69 "/opt/tinyos-2.1.2/tos/types/TinyError.h"
4752          static  /*inline*/   error_t ecombine(error_t r1, error_t r2)
4753          
4754          
4755          
4756          
4757          {
4758   1        return r1 == r2 ? r1 : FAIL;
4759   1      }
4760          
4761          //# 31 "TestAppP.nc"
4762          static  /*inline*/  error_t TestAppP__Init__init(void )
4763          //#line 31
4764          {
4765   1      
4766   1        TestAppP__shortAddress = TOS_NODE_ID;
4767   1        TestAppP__transmitPacketPtr = (packet_t *)TestAppP__transmitPacket;
4768   1      
4769   1      
4770   1        TestAppP__transmitPacketPtr->length = 9;
4771   1        TestAppP__transmitPacketPtr->fcf = 0x0000;
4772   1        TestAppP__transmitPacketPtr->_data_seq_no = TestAppP__sequence++;
4773   1        TestAppP__transmitPacketPtr->dest = 0xFFFF;
4774   1        TestAppP__transmitPacketPtr->src = 0;
4775   1      
4776   1      
4777   1      
4778   1      
4779   1      
4780   1      
4781   1      
4782   1      
4783   1        TestAppP__transmitPacketPtr->fcs.rssi = 0;
4784   1        TestAppP__transmitPacketPtr->fcs.correlation = 0;
4785   1      
4786   1        return SUCCESS;
4787   1      }
4788          
4789          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
4790           /*inline*/  static error_t SimpleMacM__initTask__postTask(void ){
4791   1      //#line 67
4792   1        unsigned char __nesc_result;
4793   1      //#line 67
4794   1      
4795   1      //#line 67
4796   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(SimpleMacM__initTask);
4797   1      //#line 67
4798   1      
4799   1      //#line 67
4800   1        return __nesc_result;
4801   1      //#line 67
4802   1      }
4803          //#line 67
4804          //# 49 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
4805          static  /*inline*/  error_t SimpleMacM__Init__init(void )
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 81  

4806          {
4807   1        SimpleMacM__initTask__postTask();
4808   1        SimpleMacM__receivedPacketPtr = &SimpleMacM__receivedPacket;
4809   1      
4810   1        return SUCCESS;
4811   1      }
4812          
4813          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
4814           /*inline*/  static error_t HalCC2430RadioP__initTask__postTask(void ){
4815   1      //#line 67
4816   1        unsigned char __nesc_result;
4817   1      //#line 67
4818   1      
4819   1      //#line 67
4820   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__initTask);
4821   1      //#line 67
4822   1      
4823   1      //#line 67
4824   1        return __nesc_result;
4825   1      //#line 67
4826   1      }
4827          //#line 67
4828          //# 105 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
4829          static  /*inline*/  error_t HalCC2430RadioP__Init__init(void )
4830          {
4831   1        HalCC2430RadioP__receivedPacketPtr = HalCC2430RadioP__receivedPacket;
4832   1      //#line 122
4833   1        HalCC2430RadioP__initTask__postTask();
4834   1      
4835   1        return SUCCESS;
4836   1      }
4837          
4838          //# 56 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
4839          static  /*inline*/  error_t StdOutM__Init__init(void )
4840          //#line 56
4841          {
4842   1        ;
4843   1        /* atomic removed: atomic calls only */
4844   1        {
4845   2          StdOutM__bufferhead = StdOutM__buffer;
4846   2          StdOutM__buffertail = StdOutM__buffer;
4847   2          StdOutM__bufferend = StdOutM__buffer + 1000;
4848   2          StdOutM__isOutputting = FALSE;
4849   2          StdOutM__count = 0;
4850   2        }
4851   1        return SUCCESS;
4852   1      }
4853          
4854          //# 50 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
4855          static  /*inline*/  error_t HalCC2430SimpleUartP__Init__init(void )
4856          //#line 50
4857          {
4858   1      //#line 92
4859   1        PERCFG &= ~0x1u;
4860   1      //#line 105
4861   1        P0_ALT |= 0x0Cu;
4862   1      
4863   1      
4864   1      
4865   1      
4866   1        U0GCR = 230400 == 2400 ? 6 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 4800
             - ? 7 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 9600 ? 8 + ((CLKCON & (1 << CC2430_CLKCON_
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 82  

             -OSC)) >> CC2430_CLKCON_OSC) : 230400 == 14400 ? 8 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 
             -== 19200 ? 9 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 28800 ? 9 + ((CLKCON & (1 << CC243
             -0_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 38400 ? 10 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC)
             - : 230400 == 57600 ? 10 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 76800 ? 11 + ((CLKCON &
             - (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 115200 ? 11 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC243
             -0_CLKCON_OSC) : 230400 == 153600 ? 12 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 230400 ? 
             -12 + ((CLKCON & (1 << CC2430_CLKCON_OSC)) >> CC2430_CLKCON_OSC) : 230400 == 307200 ? 13 + ((CLKCON & (1 << CC2430_CLKCON
             -_OSC)) >> CC2430_CLKCON_OSC) : 0;
4867   1      
4868   1      
4869   1        U0BAUD = 230400 == 2400 ? 59 : 230400 == 4800 ? 59 : 230400 == 9600 ? 59 : 230400 == 14400 ? 216 : 23040
             -0 == 19200 ? 59 : 230400 == 28800 ? 216 : 230400 == 38400 ? 59 : 230400 == 57600 ? 216 : 230400 == 76800 ? 59 : 230400 =
             -= 115200 ? 216 : 230400 == 153600 ? 59 : 230400 == 230400 ? 216 : 230400 == 307200 ? 59 : 0;
4870   1      
4871   1        U0CSR |= 0x80u | 0x40u;
4872   1        U0UCR |= 0x2u | 0x80u;
4873   1      
4874   1      
4875   1        UTX0IF = 0;
4876   1        URX0IF = 0;
4877   1      
4878   1        URX0IE = 1;
4879   1      
4880   1      
4881   1        IEN2 |= 1 << 2;
4882   1      
4883   1        return SUCCESS;
4884   1      }
4885          
4886          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
4887           /*inline*/  static error_t RealMainP__SoftwareInit__init(void ){
4888   1      //#line 62
4889   1        unsigned char __nesc_result;
4890   1      //#line 62
4891   1      
4892   1      //#line 62
4893   1        __nesc_result = HalCC2430SimpleUartP__Init__init();
4894   1      //#line 62
4895   1        __nesc_result = ecombine(__nesc_result, StdOutM__Init__init());
4896   1      //#line 62
4897   1        __nesc_result = ecombine(__nesc_result, HalCC2430RadioP__Init__init());
4898   1      //#line 62
4899   1        __nesc_result = ecombine(__nesc_result, SimpleMacM__Init__init());
4900   1      //#line 62
4901   1        __nesc_result = ecombine(__nesc_result, /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/Hpl
             -CC2430Timer1AlarmCounterP__0__Init__init());
4902   1      //#line 62
4903   1        __nesc_result = ecombine(__nesc_result, /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/Hpl
             -CC2430Timer1AlarmCounterP__0__Init__init());
4904   1      //#line 62
4905   1        __nesc_result = ecombine(__nesc_result, TestAppP__Init__init());
4906   1      //#line 62
4907   1      
4908   1      //#line 62
4909   1        return __nesc_result;
4910   1      //#line 62
4911   1      }
4912          //#line 62
4913          //# 24 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
4914          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__clr(void )
4915          //#line 24
4916          {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 83  

4917   1      }
4918          
4919          //# 41 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
4920           /*inline*/  static void LedsP__Led1__clr(void ){
4921   1      //#line 41
4922   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__clr();
4923   1      //#line 41
4924   1      }
4925          //#line 41
4926          //# 89 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
4927          static  /*inline*/  void LedsP__Leds__led1On(void )
4928          //#line 89
4929          {
4930   1        LedsP__Led1__clr();
4931   1        ;
4932   1      //#line 91
4933   1        ;
4934   1      }
4935          
4936          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
4937           /*inline*/  static void TestAppP__Leds__led1On(void ){
4938   1      //#line 72
4939   1        LedsP__Leds__led1On();
4940   1      //#line 72
4941   1      }
4942          //#line 72
4943          //# 56 "TestAppP.nc"
4944          static  /*inline*/  void TestAppP__Boot__booted(void )
4945          //#line 56
4946          {
4947   1        TestAppP__Leds__led1On();
4948   1      
4949   1        TestAppP__StdOut__print("Program initialized\n\r");
4950   1      
4951   1        TestAppP__channel = 11;
4952   1        TestAppP__SimpleMac__setChannel(TestAppP__channel);
4953   1      
4954   1        TestAppP__StdOut__print("Channel : ");
4955   1        TestAppP__StdOut__printBase10uint8(TestAppP__channel);
4956   1        TestAppP__StdOut__print("\n\r");
4957   1      
4958   1        TestAppP__radioOn = TRUE;
4959   1        TestAppP__receiverOn = TRUE;
4960   1        TestAppP__SimpleMacControl__start();
4961   1      
4962   1      
4963   1        TestAppP__StdOut__print("Timer started\r\n");
4964   1        TestAppP__Timer__startPeriodic(100000);
4965   1      }
4966          
4967          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
4968           /*inline*/  static void RealMainP__Boot__booted(void ){
4969   1      //#line 60
4970   1        TestAppP__Boot__booted();
4971   1      //#line 60
4972   1      }
4973          //#line 60
4974          //# 104 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
4975          static   /*inline*/   void __nesc_disable_interrupt()
4976          //#line 104
4977          {
4978   1      //#line 104
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 84  

4979   1        EA = 0;
4980   1      }
4981          
4982          //#line 105
4983          static   /*inline*/   void __nesc_enable_interrupt()
4984          //#line 105
4985          {
4986   1      //#line 105
4987   1        EA = 1;
4988   1      }
4989          
4990          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
4991          static  /*inline*/  void McuSleepC__McuSleep__sleep(void )
4992          //#line 51
4993          {
4994   1      
4995   1        __nesc_enable_interrupt();
4996   1      
4997   1      
4998   1      
4999   1      
5000   1      
5001   1      
5002   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
5003   1      
5004   1        __nesc_disable_interrupt();
5005   1      }
5006          
5007          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
5008           /*inline*/  static void SchedulerBasicP__McuSleep__sleep(void ){
5009   1      //#line 76
5010   1        McuSleepC__McuSleep__sleep();
5011   1      //#line 76
5012   1      }
5013          //#line 76
5014          //# 78 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
5015          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void )
5016          {
5017   1        if (SchedulerBasicP__m_head != SchedulerBasicP__NO_TASK) 
5018   1          {
5019   2            uint8_t id = SchedulerBasicP__m_head;
5020   2      
5021   2      //#line 83
5022   2            SchedulerBasicP__m_head = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
5023   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
5024   2              {
5025   3                SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
5026   3              }
5027   2            SchedulerBasicP__m_next[id] = SchedulerBasicP__NO_TASK;
5028   2            return id;
5029   2          }
5030   1        else 
5031   1          {
5032   2            return SchedulerBasicP__NO_TASK;
5033   2          }
5034   1      }
5035          
5036          //#line 149
5037          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void )
5038          {
5039   1        for (; ; ) 
5040   1          {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 85  

5041   2            uint8_t nextTask;
5042   2      
5043   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5044   3              {
5045   4                while ((nextTask = SchedulerBasicP__popTask()) == SchedulerBasicP__NO_TASK) 
5046   4                  {
5047   5                    SchedulerBasicP__McuSleep__sleep();
5048   5                  }
5049   4              }
5050   3      //#line 161
5051   3              __nesc_atomic_end(__nesc_atomic); }
5052   2            SchedulerBasicP__TaskBasic__runTask(nextTask);
5053   2          }
5054   1      }
5055          
5056          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
5057           /*inline*/  static void RealMainP__Scheduler__taskLoop(void ){
5058   1      //#line 72
5059   1        SchedulerBasicP__Scheduler__taskLoop();
5060   1      //#line 72
5061   1      }
5062          //#line 72
5063          //# 627 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5064          static  /*inline*/  void HalCC2430RadioP__InterruptRFErr__fired(void )
5065          //#line 627
5066          {
5067   1      
5068   1        HalCC2430RadioP__StdOut__print("MAC: Buffer overrun\r\n");
5069   1      
5070   1      
5071   1      
5072   1      
5073   1      
5074   1        if (!HalCC2430RadioP__receivedPacketTaskPosted && !HalCC2430RadioP__flushBufferTaskPosted) 
5075   1          {
5076   2            HalCC2430RadioP__flushBufferTask__postTask();
5077   2          }
5078   1      
5079   1        HalCC2430RadioP__flushBufferTaskPosted = TRUE;
5080   1      }
5081          
5082          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
5083           /*inline*/  static void HplCC2430InterruptsC__InterruptRFErr__fired(void ){
5084   1      //#line 68
5085   1        HalCC2430RadioP__InterruptRFErr__fired();
5086   1      //#line 68
5087   1      }
5088          //#line 68
5089          //# 202 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
5090          static  /*inline*/  void HplCC2430InterruptsC__InterruptCCA__default__fired(void )
5091          //#line 202
5092          {
5093   1      }
5094          
5095          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
5096           /*inline*/  static void HplCC2430InterruptsC__InterruptCCA__fired(void ){
5097   1      //#line 68
5098   1        HplCC2430InterruptsC__InterruptCCA__default__fired();
5099   1      //#line 68
5100   1      }
5101          //#line 68
5102          //# 500 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 86  

5103          static  /*inline*/  void HalCC2430RadioP__InterruptFIFOP__fired(void )
5104          //#line 500
5105          {
5106   1      
5107   1      
5108   1      
5109   1      
5110   1      
5111   1        if (!HalCC2430RadioP__receivedPacketTaskPosted && * (uint8_t xdata *)0xDF53 > 0) {
5112   2      
5113   2            HalCC2430RadioP__receivedPacketTaskPosted = TRUE;
5114   2            HalCC2430RadioP__receivedPacketTask__postTask();
5115   2          }
5116   1      }
5117          
5118          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
5119           /*inline*/  static void HplCC2430InterruptsC__InterruptFIFOP__fired(void ){
5120   1      //#line 68
5121   1        HalCC2430RadioP__InterruptFIFOP__fired();
5122   1      //#line 68
5123   1      }
5124          //#line 68
5125          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
5126           /*inline*/  static error_t HalCC2430RadioP__sendPacketDoneTask__postTask(void ){
5127   1      //#line 67
5128   1        unsigned char __nesc_result;
5129   1      //#line 67
5130   1      
5131   1      //#line 67
5132   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(HalCC2430RadioP__sendPacketDoneTask);
5133   1      //#line 67
5134   1      
5135   1      //#line 67
5136   1        return __nesc_result;
5137   1      //#line 67
5138   1      }
5139          //#line 67
5140          //# 480 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5141          static  /*inline*/  void HalCC2430RadioP__InterruptTXDone__fired(void )
5142          {
5143   1      
5144   1        if (HalCC2430RadioP__transmitInProgress) {
5145   2            HalCC2430RadioP__transmitInProgress = FALSE;
5146   2            HalCC2430RadioP__sendPacketDoneTask__postTask();
5147   2          }
5148   1        else 
5149   1      //#line 486
5150   1          {
5151   2            HalCC2430RadioP__StdOut__print("MAC: Unscheduled transmit\n");
5152   2          }
5153   1      }
5154          
5155          //# 68 "/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc"
5156           /*inline*/  static void HplCC2430InterruptsC__InterruptTXDone__fired(void ){
5157   1      //#line 68
5158   1        HalCC2430RadioP__InterruptTXDone__fired();
5159   1      //#line 68
5160   1      }
5161          //#line 68
5162          //# 200 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
5163          static  /*inline*/  void HplCC2430InterruptsC__CaptureSFD__default__captured(uint16_t time)
5164          //#line 200
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 87  

5165          {
5166   1      }
*** WARNING C280 IN LINE 5163 OF APP.C: 'time': unreferenced local variable
5167          
5168          //# 61 "/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc"
5169           /*inline*/  static void HplCC2430InterruptsC__CaptureSFD__captured(uint16_t time){
5170   1      //#line 61
5171   1        HplCC2430InterruptsC__CaptureSFD__default__captured(time);
5172   1      //#line 61
5173   1      }
5174          //#line 61
5175          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
5176           /*inline*/  static error_t TestAppP__consoleTask__postTask(void ){
5177   1      //#line 67
5178   1        unsigned char __nesc_result;
5179   1      //#line 67
5180   1      
5181   1      //#line 67
5182   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(TestAppP__consoleTask);
5183   1      //#line 67
5184   1      
5185   1      //#line 67
5186   1        return __nesc_result;
5187   1      //#line 67
5188   1      }
5189          //#line 67
5190          //# 167 "TestAppP.nc"
5191          static  /*inline*/  void TestAppP__StdOut__get(uint8_t _data)
5192          //#line 167
5193          {
5194   1      
5195   1        TestAppP__keyBuffer = _data;
5196   1      
5197   1        TestAppP__Leds__led0Toggle();
5198   1      
5199   1        TestAppP__consoleTask__postTask();
5200   1      }
5201          
5202          //# 870 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5203          static  /*inline*/  void HalCC2430RadioP__StdOut__get(uint8_t _data)
5204          {
5205   1      }
*** WARNING C280 IN LINE 5203 OF APP.C: '_data': unreferenced local variable
5206          
5207          //# 108 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOut.nc"
5208           /*inline*/  static void StdOutM__StdOut__get(uint8_t _data){
5209   1      //#line 108
5210   1        HalCC2430RadioP__StdOut__get(_data);
5211   1      //#line 108
5212   1        TestAppP__StdOut__get(_data);
5213   1      //#line 108
5214   1      }
5215          //#line 108
5216          //# 545 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
5217          static  /*inline*/  void StdOutM__UART__get(uint8_t _data)
5218          //#line 545
5219          {
5220   1        StdOutM__StdOut__get(_data);
5221   1        return;
5222   1      }
5223          
5224          //# 58 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 88  

5225           /*inline*/  static void HalCC2430SimpleUartP__uart0__get(uint8_t _data){
5226   1      //#line 58
5227   1        StdOutM__UART__get(_data);
5228   1      //#line 58
5229   1      }
5230          //#line 58
5231          //# 130 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
5232          static  /*inline*/  error_t HalCC2430SimpleUartP__uart0__put(uint8_t _data)
5233          //#line 130
5234          {
5235   1        U0BUF = _data;
5236   1        return SUCCESS;
5237   1      }
5238          
5239          //# 52 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
5240           /*inline*/  static error_t StdOutM__UART__put(uint8_t _data){
5241   1      //#line 52
5242   1        unsigned char __nesc_result;
5243   1      //#line 52
5244   1      
5245   1      //#line 52
5246   1        __nesc_result = HalCC2430SimpleUartP__uart0__put(_data);
5247   1      //#line 52
5248   1      
5249   1      //#line 52
5250   1        return __nesc_result;
5251   1      //#line 52
5252   1      }
5253          //#line 52
5254          //# 520 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
5255          static  /*inline*/  void StdOutM__UART__putDone(void )
5256          //#line 520
5257          {
5258   1      
5259   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5260   2      //#line 522
5261   2          {
5262   3      
5263   3            ++StdOutM__bufferhead;
5264   3            ++StdOutM__count;
5265   3            if (StdOutM__bufferhead == StdOutM__bufferend) {
5266   4                StdOutM__bufferhead = StdOutM__buffer;
5267   4              }
5268   3      
5269   3            if (StdOutM__bufferhead != StdOutM__buffertail) {
5270   4      
5271   4                StdOutM__UART__put(*StdOutM__bufferhead);
5272   4                StdOutM__isOutputting = TRUE;
5273   4              }
5274   3            else 
5275   3      //#line 534
5276   3              {
5277   4                StdOutM__isOutputting = FALSE;
5278   4              }
5279   3          }
5280   2      //#line 537
5281   2          __nesc_atomic_end(__nesc_atomic); }
5282   1        return;
5283   1      }
5284          
5285          //# 64 "/opt/tinyos-2.1.2/tos/lib/serial/SerialByteComm.nc"
5286           /*inline*/  static void HalCC2430SimpleUartP__uart0__putDone(void ){
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 89  

5287   1      //#line 64
5288   1        StdOutM__UART__putDone();
5289   1      //#line 64
5290   1      }
5291          //#line 64
5292          //# 388 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
5293          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm2__default__fired(void )
5294          //#line 388
5295          {
5296   1      }
5297          
5298          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
5299           /*inline*/  static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm2__fired(void ){
5300   1      //#line 78
5301   1        /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm2__de
             -fault__fired();
5302   1      //#line 78
5303   1      }
5304          //#line 78
5305          //# 387 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
5306          static  /*inline*/  void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm1__default__fired(void )
5307          //#line 387
5308          {
5309   1      }
5310          
5311          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
5312           /*inline*/  static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm1__fired(void ){
5313   1      //#line 78
5314   1        /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Alarm1__de
             -fault__fired();
5315   1      //#line 78
5316   1      }
5317          //#line 78
5318          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
5319           /*inline*/  static error_t /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__postTask(void ){
5320   1      //#line 67
5321   1        unsigned char __nesc_result;
5322   1      //#line 67
5323   1      
5324   1      //#line 67
5325   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(/*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__f
             -ired);
5326   1      //#line 67
5327   1      
5328   1      //#line 67
5329   1        return __nesc_result;
5330   1      //#line 67
5331   1      }
5332          //#line 67
5333          //# 81 "/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc"
5334          static  /*inline*/  void /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired(void )
5335          {
5336   1      //#line 82
5337   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__postTask();
5338   1      }
5339          
5340          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
5341           /*inline*/  static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired(void )
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 90  

             -{
5342   1      //#line 78
5343   1        /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__Alarm__fired();
5344   1      //#line 78
5345   1      }
5346          //#line 78
5347          //# 162 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
5348          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired(vo
             -id )
5349          {
5350   1        /* atomic removed: atomic calls only */
5351   1        {
5352   2          if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt == 0) 
5353   2            {
5354   3              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__fired();
5355   3            }
5356   2          else 
5357   2            {
5358   3              /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
5359   3            }
5360   2        }
5361   1      }
5362          
5363          //# 78 "/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc"
5364           /*inline*/  static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Alarm0__fired(void ){
5365   1      //#line 78
5366   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__fired();
5367   1      //#line 78
5368   1      }
5369          //#line 78
5370          //# 177 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
5371          static  /*inline*/  void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow(v
             -oid )
5372          {
5373   1      }
5374          
5375          //# 82 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
5376           /*inline*/  static void /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow(void ){
5377   1      //#line 82
5378   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Counter__overflow();
5379   1      //#line 82
5380   1      }
5381          //#line 82
5382          //# 133 "/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc"
5383          static  /*inline*/  void /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow(void )
5384          {
5385   1        /* atomic removed: atomic calls only */
5386   1        {
5387   2          /*CounterMilli32C.Transform*/TransformCounterC__0__m_upper++;
5388   2          if ((/*CounterMilli32C.Transform*/TransformCounterC__0__m_upper & /*CounterMilli32C.Transform*/Transfo
             -rmCounterC__0__OVERFLOW_MASK) == 0) {
5389   3            /*CounterMilli32C.Transform*/TransformCounterC__0__Counter__overflow();
5390   3            }
5391   2        }
5392   1      }
5393          
5394          //# 82 "/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc"
5395           /*inline*/  static void /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1Alarm
             -CounterP__0__Counter__overflow(void ){
5396   1      //#line 82
5397   1        /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__overflow();
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 91  

5398   1      //#line 82
5399   1      }
5400          //#line 82
5401          //# 63 "/opt/tinyos-2.1.2/tos/system/RealMainP.nc"
5402            int main(void )
5403          //#line 63
5404          {
5405   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5406   2          {
5407   3      
5408   3      
5409   3      
5410   3      
5411   3      
5412   3            {
5413   4            }
5414   3      //#line 71
5415   3            ;
5416   3      
5417   3            RealMainP__Scheduler__init();
5418   3      
5419   3      
5420   3      
5421   3      
5422   3      
5423   3            RealMainP__PlatformInit__init();
5424   3            while (RealMainP__Scheduler__runNextTask()) ;
5425   3      
5426   3      
5427   3      
5428   3      
5429   3      
5430   3            RealMainP__SoftwareInit__init();
5431   3            while (RealMainP__Scheduler__runNextTask()) ;
5432   3          }
5433   2      //#line 88
5434   2          __nesc_atomic_end(__nesc_atomic); }
5435   1      
5436   1      
5437   1        __nesc_enable_interrupt();
5438   1      
5439   1        RealMainP__Boot__booted();
5440   1      
5441   1      
5442   1        RealMainP__Scheduler__taskLoop();
5443   1      
5444   1      
5445   1      
5446   1      
5447   1        return -1;
5448   1      }
5449          
5450          //# 134 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
5451          static bool SchedulerBasicP__Scheduler__runNextTask(void )
5452          {
5453   1        uint8_t nextTask;
5454   1      
5455   1        /* atomic removed: atomic calls only */
5456   1      //#line 138
5457   1        {
5458   2          nextTask = SchedulerBasicP__popTask();
5459   2          if (nextTask == SchedulerBasicP__NO_TASK) 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 92  

5460   2            {
5461   3              {
5462   4                unsigned char __nesc_temp = 
5463   4      //#line 142
5464   4                FALSE;
5465   4      
5466   4      //#line 142
5467   4                return __nesc_temp;
5468   4              }
5469   3            }
5470   2        }
5471   1      //#line 145
5472   1        SchedulerBasicP__TaskBasic__runTask(nextTask);
5473   1        return TRUE;
5474   1      }
5475          
5476          //#line 175
5477          static void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
5478          {
5479   1      }
*** WARNING C280 IN LINE 5477 OF APP.C: 'id': unreferenced local variable
5480          
5481          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
5482          static void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x2b50ed6cb3c8){
5483   1      //#line 75
5484   1        switch (arg_0x2b50ed6cb3c8) {
5485   2      //#line 75
5486   2          case TestAppP__sendPacketTask:
5487   2      //#line 75
5488   2            TestAppP__sendPacketTask__runTask();
5489   2      //#line 75
5490   2            break;
5491   2      //#line 75
5492   2          case TestAppP__consoleTask:
5493   2      //#line 75
5494   2            TestAppP__consoleTask__runTask();
5495   2      //#line 75
5496   2            break;
5497   2      //#line 75
5498   2          case /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired:
5499   2      //#line 75
5500   2            /*HilTimerMilliC.AlarmToTimerC*/AlarmToTimerC__0__fired__runTask();
5501   2      //#line 75
5502   2            break;
5503   2      //#line 75
5504   2          case /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer:
5505   2      //#line 75
5506   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__runTask();
5507   2      //#line 75
5508   2            break;
5509   2      //#line 75
5510   2          case SimpleMacM__initTask:
5511   2      //#line 75
5512   2            SimpleMacM__initTask__runTask();
5513   2      //#line 75
5514   2            break;
5515   2      //#line 75
5516   2          case SimpleMacM__signalSendPacketDone:
5517   2      //#line 75
5518   2            SimpleMacM__signalSendPacketDone__runTask();
5519   2      //#line 75
5520   2            break;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 93  

5521   2      //#line 75
5522   2          case HalCC2430RadioP__initTask:
5523   2      //#line 75
5524   2            HalCC2430RadioP__initTask__runTask();
5525   2      //#line 75
5526   2            break;
5527   2      //#line 75
5528   2          case HalCC2430RadioP__transmitTask:
5529   2      //#line 75
5530   2            HalCC2430RadioP__transmitTask__runTask();
5531   2      //#line 75
5532   2            break;
5533   2      //#line 75
5534   2          case HalCC2430RadioP__setChannelTask:
5535   2      //#line 75
5536   2            HalCC2430RadioP__setChannelTask__runTask();
5537   2      //#line 75
5538   2            break;
5539   2      //#line 75
5540   2          case HalCC2430RadioP__receivedPacketTask:
5541   2      //#line 75
5542   2            HalCC2430RadioP__receivedPacketTask__runTask();
5543   2      //#line 75
5544   2            break;
5545   2      //#line 75
5546   2          case HalCC2430RadioP__flushBufferTask:
5547   2      //#line 75
5548   2            HalCC2430RadioP__flushBufferTask__runTask();
5549   2      //#line 75
5550   2            break;
5551   2      //#line 75
5552   2          case HalCC2430RadioP__sendPacketDoneTask:
5553   2      //#line 75
5554   2            HalCC2430RadioP__sendPacketDoneTask__runTask();
5555   2      //#line 75
5556   2            break;
5557   2      //#line 75
5558   2          default:
5559   2      //#line 75
5560   2            SchedulerBasicP__TaskBasic__default__runTask(arg_0x2b50ed6cb3c8);
5561   2      //#line 75
5562   2            break;
5563   2      //#line 75
5564   2          }
5565   1      //#line 75
5566   1      }
5567          //#line 75
5568          //# 170 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
5569          static error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
5570          {
5571   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5572   2      //#line 172
5573   2          {
5574   3      //#line 172
5575   3            {
5576   4              unsigned char __nesc_temp = 
5577   4      //#line 172
5578   4              SchedulerBasicP__pushTask(id) ? SUCCESS : EBUSY;
5579   4      
5580   4              {
5581   5      //#line 172
5582   5                __nesc_atomic_end(__nesc_atomic); 
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 94  

5583   5      //#line 172
5584   5                return __nesc_temp;
5585   5              }
5586   4            }
5587   3          }
5588   2      //#line 175
5589   2          __nesc_atomic_end(__nesc_atomic); }
5590   1      }
5591          
5592          //# 117 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
5593          static error_t HplCC2430InterruptsC__InterruptFIFOP__disable(void )
5594          //#line 117
5595          {
5596   1      //#line 117
5597   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5598   2      //#line 117
5599   2          {
5600   3      //#line 117
5601   3            RFIM &= ~(1 << CC2430_RFIM_FIFOP);
5602   3          }
5603   2      //#line 118
5604   2          __nesc_atomic_end(__nesc_atomic); }
5605   1      //#line 117
5606   1        return SUCCESS;
5607   1      }
5608          
5609          //# 742 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5610          static void HalCC2430RadioP__CC2430RxEnable(void )
5611          {
5612   1      
5613   1        RFST = 0xE6;
5614   1        RFST = 0xE6;
5615   1      
5616   1      
5617   1        HalCC2430RadioP__InterruptFIFOP__enableRisingEdge();
5618   1      
5619   1      
5620   1        RFST = 0xE2;
5621   1      
5622   1        HalCC2430RadioP__rxEnabled = TRUE;
5623   1      }
5624          
5625          //# 77 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
5626          static int StdOutM__StdOut__print(const char *str)
5627          //#line 77
5628          {
5629   1      
5630   1        int na_countret;
5631   1      
5632   1      //#line 80
5633   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5634   2      //#line 80
5635   2          {
5636   3            bool return_flag = FALSE;
5637   3            int countret = 0;
5638   3      
5639   3      //#line 83
5640   3            ;
5641   3      
5642   3      
5643   3            if (StdOutM__buffertail >= StdOutM__bufferhead) {
5644   4                while (StdOutM__buffertail < StdOutM__bufferend && *str != 0) {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 95  

5645   5      
5646   5                    *StdOutM__buffertail = *str;
5647   5                    ++StdOutM__buffertail;
5648   5      
5649   5                    ++str;
5650   5                    ++countret;
5651   5                  }
5652   4      //#line 94
5653   4                ;
5654   4      
5655   4                if (StdOutM__buffertail == StdOutM__bufferend) {
5656   5                    StdOutM__buffertail = StdOutM__buffer;
5657   5                  }
5658   4                else 
5659   4      //#line 98
5660   4                  {
5661   5      
5662   5                    if (!StdOutM__isOutputting) {
5663   6      
5664   6                        StdOutM__UART__put(*StdOutM__bufferhead);
5665   6                        StdOutM__isOutputting = TRUE;
5666   6                      }
5667   5                    return_flag = TRUE;
5668   5                  }
5669   4              }
5670   3      
5671   3      
5672   3      
5673   3            if (!return_flag) {
5674   4      
5675   4      
5676   4                while (StdOutM__buffertail < StdOutM__bufferhead && *str != 0) {
5677   5                    *StdOutM__buffertail = *str;
5678   5                    ++StdOutM__buffertail;
5679   5                    ++str;
5680   5                    ++countret;
5681   5                  }
5682   4      //#line 119
5683   4                ;
5684   4      
5685   4                if (!StdOutM__isOutputting) {
5686   5                    StdOutM__UART__put(*StdOutM__bufferhead);
5687   5                    StdOutM__isOutputting = TRUE;
5688   5                  }
5689   4      
5690   4                if (StdOutM__buffertail == StdOutM__bufferhead) {
5691   5                    if (!StdOutM__isOutputting) {
5692   6      
5693   6                        StdOutM__UART__put(*StdOutM__bufferhead);
5694   6                        StdOutM__isOutputting = TRUE;
5695   6                      }
5696   5                    return_flag = TRUE;
5697   5                  }
5698   4              }
5699   3      
5700   3      
5701   3            if (!return_flag) {
5702   4      
5703   4                if (!StdOutM__isOutputting) {
5704   5      
5705   5                    StdOutM__UART__put(*StdOutM__bufferhead);
5706   5                    StdOutM__isOutputting = TRUE;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 96  

5707   5                  }
5708   4                return_flag = TRUE;
5709   4              }
5710   3      
5711   3            na_countret = countret;
5712   3          }
5713   2      //#line 148
5714   2          __nesc_atomic_end(__nesc_atomic); }
5715   1      
5716   1        return na_countret;
5717   1      }
5718          
5719          
5720          
5721          static int StdOutM__StdOut__printHex(uint8_t c)
5722          //#line 155
5723          {
5724   1        char str[3];
5725   1        uint8_t v;
5726   1      
5727   1      
5728   1        v = (0xF0U & c) >> 4;
5729   1        if (v < 0xAU) {
5730   2            str[0] = v + '0';
5731   2          }
5732   1        else 
5733   1      //#line 163
5734   1          {
5735   2            str[0] = v - 0xAU + 'A';
5736   2          }
5737   1      
5738   1      
5739   1        v = 0xFU & c;
5740   1        if (v < 0xAU) {
5741   2            str[1] = v + '0';
5742   2          }
5743   1        else 
5744   1      //#line 171
5745   1          {
5746   2            str[1] = v - 0xAU + 'A';
5747   2          }
5748   1        str[2] = 0;
5749   1      
5750   1        return StdOutM__StdOut__print(str);
5751   1      }
5752          
5753          
5754          
5755          static int StdOutM__StdOut__printHexword(uint16_t c)
5756          //#line 181
5757          {
5758   1        return StdOutM__StdOut__printHex((0xFF00U & c) >> 8)
5759   1         + StdOutM__StdOut__printHex(0xFFU & c);
5760   1      }
5761          
5762          //# 828 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5763          static void HalCC2430RadioP__CC2430TxWait(void )
5764          {
5765   1        uint8_t i = 0;
5766   1      
5767   1        while (* (uint8_t xdata *)0xDF62 & (1 << CC2430_RFSTATUS_TX_ACTIVE) && i < 50) 
5768   1          {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 97  

5769   2            HalCC2430RadioP__wait(100);
5770   2            i++;
5771   2          }
5772   1      
5773   1        return;
5774   1      }
5775          
5776          //#line 773
5777          static void HalCC2430RadioP__CC2430ChannelSet(uint8_t channel)
5778          {
5779   1        uint16_t freq;
5780   1      
5781   1      
5782   1        freq = (uint16_t )channel - 11;
5783   1        freq *= 5;
5784   1        freq += 357;
5785   1        freq |= 0x4000;
5786   1      
5787   1        * (uint16_t xdata *)0xDF10 = freq;
5788   1      }
5789          
5790          //# 80 "/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc"
5791          static /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type /*CounterMilli32C.Transform*/Transf
             -ormCounterC__0__Counter__get(void )
5792          {
5793   1        /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type rv = 0;
5794   1      
5795   1      //#line 83
5796   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5797   2          {
5798   3            /*CounterMilli32C.Transform*/TransformCounterC__0__upper_count_type high = /*CounterMilli32C.Transfo
             -rm*/TransformCounterC__0__m_upper;
5799   3            /*CounterMilli32C.Transform*/TransformCounterC__0__from_size_type low = /*CounterMilli32C.Transform*
             -/TransformCounterC__0__CounterFrom__get();
5800   3      
5801   3      //#line 87
5802   3            if (/*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__isOverflowPending()) 
5803   3              {
5804   4      
5805   4      
5806   4      
5807   4      
5808   4      
5809   4      
5810   4                high++;
5811   4                low = /*CounterMilli32C.Transform*/TransformCounterC__0__CounterFrom__get();
5812   4              }
5813   3            {
5814   4              /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type high_to = high;
5815   4              /*CounterMilli32C.Transform*/TransformCounterC__0__to_size_type low_to = low >> /*CounterMilli32C.
             -Transform*/TransformCounterC__0__LOW_SHIFT_RIGHT;
5816   4      
5817   4      //#line 101
5818   4              rv = (high_to << /*CounterMilli32C.Transform*/TransformCounterC__0__HIGH_SHIFT_LEFT) | low_to;
5819   4            }
5820   3          }
5821   2      //#line 103
5822   2          __nesc_atomic_end(__nesc_atomic); }
5823   1        return rv;
5824   1      }
5825          
5826          //# 336 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 98  

5827          static uint16_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP_
             -_0__Counter__get(void )
5828          //#line 336
5829          {
5830   1        uint16_t r;
5831   1      
5832   1        (
5833   1      //#line 338
5834   1        (uint8_t *)&r)[1] = T1CNTL;
5835   1        ((uint8_t *)&r)[0] = T1CNTH;
5836   1      
5837   1        return r;
5838   1      }
5839          
5840          //# 73 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
5841          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__fireTimers(uint32_t now)
5842          {
5843   1        uint16_t num;
5844   1      
5845   1        for (num = 0; num < /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__NUM_TIMERS; num++) 
5846   1          {
5847   2            /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer_t *timer = &/*HilTimerMilliC.Virtualiz
             -eTimerC*/VirtualizeTimerC__0__m_timers[num];
5848   2      
5849   2            if (timer->isrunning) 
5850   2              {
5851   3                uint32_t elapsed = now - timer->t0;
5852   3      
5853   3                if (elapsed >= timer->dt) 
5854   3                  {
5855   4                    if (timer->isoneshot) {
5856   5                      timer->isrunning = FALSE;
5857   5                      }
5858   4                    else {
5859   5      //#line 90
5860   5                      timer->t0 += timer->dt;
5861   5                      }
5862   4                    /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__fired(num);
5863   4                    break;
5864   4                  }
5865   3              }
5866   2          }
5867   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__updateFromTimer__postTask();
5868   1      }
5869          
5870          //# 147 "/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc"
5871          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__Alarm__startAt(/*HilTimerMilliC.
             -AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type t0, /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC_
             -_0__to_size_type dt)
5872          {
5873   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5874   2          {
5875   3            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = t0;
5876   3            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = dt;
5877   3            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm();
5878   3          }
5879   2      //#line 154
5880   2          __nesc_atomic_end(__nesc_atomic); }
5881   1      }
5882          
5883          //#line 107
5884          static void /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__set_alarm(void )
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 99  

5885          {
5886   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type now = /*HilTimerMilliC.AlarmM
             -illi32C.Transform*/TransformAlarmC__0__Counter__get();
5887   1      //#line 109
5888   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type expires;
5889   1      //#line 109
5890   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type remaining;
5891   1      
5892   1      
5893   1      
5894   1      
5895   1        expires = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 + /*HilTimerMilliC.AlarmMil
             -li32C.Transform*/TransformAlarmC__0__m_dt;
5896   1      
5897   1      
5898   1        remaining = (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__to_size_type )(expires - now)
             -;
5899   1      
5900   1      
5901   1        if (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 <= now) 
5902   1          {
5903   2            if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 && 
5904   2            expires <= now) {
5905   3              remaining = 0;
5906   3              }
5907   2          }
5908   1        else {
5909   2            if (expires >= /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 || 
5910   2            expires <= now) {
5911   3              remaining = 0;
5912   3              }
5913   2          }
5914   1      //#line 132
5915   1        if (remaining > /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY) 
5916   1          {
5917   2            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 = now + /*HilTimerMilliC.AlarmMil
             -li32C.Transform*/TransformAlarmC__0__MAX_DELAY;
5918   2            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = remaining - /*HilTimerMilliC.Al
             -armMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
5919   2            remaining = /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__MAX_DELAY;
5920   2          }
5921   1        else 
5922   1          {
5923   2            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_t0 += /*HilTimerMilliC.AlarmMilli32C
             -.Transform*/TransformAlarmC__0__m_dt;
5924   2            /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__m_dt = 0;
5925   2          }
5926   1        /*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__AlarmFrom__startAt((/*HilTimerMilliC.Alarm
             -Milli32C.Transform*/TransformAlarmC__0__from_size_type )now << 5, 
5927   1        (/*HilTimerMilliC.AlarmMilli32C.Transform*/TransformAlarmC__0__from_size_type )remaining << 5);
5928   1      }
5929          
5930          //# 507 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
5931          static void StdOutM__StdOut__dumpHex(uint8_t ptr[], uint8_t countar, char *sep)
5932          //#line 507
5933          {
5934   1        int i;
5935   1      
5936   1      //#line 509
5937   1        for (i = 0; i < countar; i++) {
5938   2            if (i != 0) {
5939   3                StdOutM__StdOut__print(sep);
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 100 

5940   3              }
5941   2            StdOutM__StdOut__printHex(ptr[i]);
5942   2          }
5943   1      }
5944          
5945          //# 85 "/opt/tinyos-2.x-contrib/diku/common/lib/simplemac/SimpleMacM.nc"
5946          static error_t SimpleMacM__SimpleMac__sendPacket(packet_t *packet)
5947          {
5948   1        uint8_t i;
5949   1      //#line 87
5950   1        uint8_t length;
5951   1      
5952   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
5953   2      //#line 89
5954   2          SimpleMacM__sendPacketPtr = packet;
5955   2      //#line 89
5956   2          __nesc_atomic_end(__nesc_atomic); }
5957   1      
5958   1      
5959   1        length = packet->length;
5960   1      
5961   1        SimpleMacM__transmitbuffer[0] = length;
5962   1      
5963   1      
5964   1      
5965   1      
5966   1        SimpleMacM__transmitbuffer[1] = packet->fcf & 0x00F8;
5967   1        SimpleMacM__transmitbuffer[2] = packet->fcf >> 8;
5968   1      
5969   1        SimpleMacM__transmitbuffer[3] = packet->_data_seq_no;
5970   1      
5971   1        SimpleMacM__transmitbuffer[4] = packet->dest & 0x00FF;
5972   1        SimpleMacM__transmitbuffer[5] = packet->dest >> 8;
5973   1      
5974   1        SimpleMacM__transmitbuffer[6] = *SimpleMacM__shortAddress & 0x00FF;
5975   1        SimpleMacM__transmitbuffer[7] = *SimpleMacM__shortAddress >> 8;
5976   1      
5977   1        for (i = 8; i < length - 1; i++) 
5978   1          {
5979   2            SimpleMacM__transmitbuffer[i] = packet->_data[i - 8];
5980   2          }
5981   1      
5982   1        SimpleMacM__transmitbuffer[length - 1] = 0;
5983   1        SimpleMacM__transmitbuffer[length] = 0;
5984   1      
5985   1        return SimpleMacM__HALCC2420__sendPacket(SimpleMacM__transmitbuffer);
5986   1      }
5987          
5988          //# 697 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
5989          static void HalCC2430RadioP__CC2430RFEnable(void )
5990          {
5991   1      
5992   1        * (uint8_t xdata *)0xDF17 = 0x04;
5993   1      
5994   1      
5995   1      
5996   1      
5997   1        while (* (uint8_t xdata *)0xDF17 & 0x10) {
5998   2          }
5999   1      }
6000          
6001          //# 154 "/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc"
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 101 

6002          static void /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__Timer__startPeriodic(uint8_t num, uint
             -32_t dt)
6003          {
6004   1        /*HilTimerMilliC.VirtualizeTimerC*/VirtualizeTimerC__0__startTimer(num, /*HilTimerMilliC.VirtualizeTimer
             -C*/VirtualizeTimerC__0__TimerFrom__getNow(), dt, FALSE);
6005   1      }
6006          
6007          //# 196 "/opt/tinyos-2.x-contrib/diku/common/lib/stdout/StdOutM.nc"
6008          static int StdOutM__StdOut__printBase10uint8(const uint8_t c)
6009          {
6010   1        bool print = 0;
6011   1        char str[4];
6012   1        uint8_t idx = 0;
6013   1      //#line 200
6014   1        uint8_t tmp;
6015   1        uint32_t v;
6016   1      
6017   1        v = c;
6018   1      
6019   1      
6020   1        tmp = v / 100;
6021   1        if (tmp != 0 || print) {
6022   2            str[idx] = tmp + 48;
6023   2            idx++;
6024   2            v = v % 100;
6025   2            print = 1;
6026   2          }
6027   1      
6028   1      
6029   1        tmp = v / 10;
6030   1        if (tmp != 0 || print) {
6031   2            str[idx] = tmp + 48;
6032   2            idx++;
6033   2            v = v % 10;
6034   2            print = 1;
6035   2          }
6036   1      
6037   1      
6038   1        str[idx] = v + 48;
6039   1        idx++;
6040   1      
6041   1        str[idx] = 0;
6042   1      
6043   1        return StdOutM__StdOut__print(str);
6044   1      }
6045          
6046          //# 313 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HalCC2430RadioP.nc"
6047          static error_t HalCC2430RadioP__HALCC2420__setChannel(uint8_t channel)
6048          {
6049   1        if (channel < 11 || channel > 26) {
6050   2          return FAIL;
6051   2          }
6052   1        else 
6053   1      //#line 317
6054   1          {
6055   2            HalCC2430RadioP__currentChannel = channel;
6056   2            HalCC2430RadioP__setChannelTask__postTask();
6057   2          }
6058   1      
6059   1        return SUCCESS;
6060   1      }
6061          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 102 

6062          //# 59 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
6063          static error_t /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__
             -0__Init__init(void )
6064          //#line 59
6065          {
6066   1      
6067   1        T1CCTL1 = 0;
6068   1        T1CCTL2 = 0;
6069   1      
6070   1        T1CNTL = 0;
6071   1      //#line 64
6072   1        T1CNTH = 0;
6073   1      
6074   1      
6075   1      
6076   1        T1CTL = (T1CTL & ~CC2430_T1CTL_DIV_MASK) | CC2430_TIMER1_DIV_1;
6077   1      
6078   1      
6079   1        T1CTL &= ((~CC2430_T1_CH0IF & ~CC2430_T1_CH1IF) & ~CC2430_T1_CH2IF) & ~CC2430_T1_OVFIF;
6080   1      
6081   1      
6082   1        T1CCTL0 |= 1 << CC2430_T1CCTLx_MODE;
6083   1      
6084   1      
6085   1      
6086   1        T1IE = 1;
6087   1        TIMIF |= 1 << CC2430_TIMIF_OVFIM;
6088   1        T1CCTL0 |= 0x40;
6089   1        T1CTL = (T1CTL & ~CC2430_T1CTL_MODE_MASK) | CC2430_TIMER1_MODE_FREE;
6090   1      
6091   1      
6092   1      
6093   1      
6094   1        return SUCCESS;
6095   1      }
6096          
6097          //# 142 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/radio/HplCC2430InterruptsC.nc"
6098          void __vector_0(void) interrupt 0
6099          //#line 142
6100          {
6101   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6102   2      //#line 143
6103   2          {
6104   3            RFERRIF = 0;
6105   3            HplCC2430InterruptsC__InterruptRFErr__fired();
6106   3          }
6107   2      //#line 146
6108   2          __nesc_atomic_end(__nesc_atomic); }
6109   1      }
6110          
6111          void __vector_16(void) interrupt 16
6112          //#line 149
6113          {
6114   1      
6115   1      
6116   1      
6117   1      
6118   1      
6119   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6120   2      //#line 155
6121   2          {
6122   3            uint8_t RFIF_RFIM = RFIF & RFIM;
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 103 

6123   3      
6124   3      
6125   3      
6126   3      
6127   3      
6128   3      
6129   3      
6130   3      
6131   3      
6132   3      
6133   3            RFIF &= ~ (uint8_t )0x01;
6134   3            RFIF &= ~ (uint8_t )0x02;
6135   3            RFIF &= ~ (uint8_t )0x04;
6136   3            RFIF &= ~ (uint8_t )0x08;
6137   3            RFIF &= ~ (uint8_t )0x10;
6138   3            RFIF &= ~ (uint8_t )0x20;
6139   3            RFIF &= ~ (uint8_t )0x40;
6140   3            RFIF &= ~ (uint8_t )0x80;
6141   3      
6142   3            if (RFIF_RFIM & (1 << CC2430_RFIF_CCA)) {
6143   4                HplCC2430InterruptsC__InterruptCCA__fired();
6144   4              }
6145   3      
6146   3            if (RFIF_RFIM & (1 << CC2430_RFIF_FIFOP)) {
6147   4                HplCC2430InterruptsC__InterruptFIFOP__fired();
6148   4              }
6149   3      
6150   3            if (RFIF_RFIM & (1 << CC2430_RFIF_TXDONE)) {
6151   4                HplCC2430InterruptsC__InterruptTXDone__fired();
6152   4              }
6153   3      
6154   3            if (RFIF_RFIM & (1 << CC2430_RFIF_SFD)) {
6155   4                uint16_t now;
6156   4      
6157   4                (
6158   4      //#line 190
6159   4                (uint8_t *)&now)[1] = T1CNTL;
6160   4                (
6161   4      //#line 190
6162   4                (uint8_t *)&now)[0] = T1CNTH;
6163   4                HplCC2430InterruptsC__CaptureSFD__captured(now);
6164   4              }
6165   3      
6166   3      
6167   3            S1CON &= ~0x03;
6168   3          }
6169   2      //#line 196
6170   2          __nesc_atomic_end(__nesc_atomic); }
6171   1      }
6172          
6173          //# 135 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/usart/HalCC2430SimpleUartP.nc"
6174          void __vector_2(void) interrupt 2
6175          //#line 135
6176          {
6177   1        URX0IF = 0;
6178   1        HalCC2430SimpleUartP__uart0__get(U0BUF);
6179   1      }
6180          
6181          //#line 154
6182          void __vector_7(void) interrupt 7
6183          //#line 154
6184          {
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 104 

6185   1        int done = 0;
6186   1      
6187   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6188   2      //#line 157
6189   2          {
6190   3      
6191   3      
6192   3      
6193   3            if (!(U0CSR & 0x1)) {
6194   4      
6195   4                UTX0IF = 0;
6196   4                done = 1;
6197   4              }
6198   3          }
6199   2      //#line 166
6200   2          __nesc_atomic_end(__nesc_atomic); }
6201   1        if (done) {
6202   2            HalCC2430SimpleUartP__uart0__putDone();
6203   2          }
6204   1      }
6205          
6206          //# 361 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer_hpl/HplCC2430Timer1AlarmCounterP.nc"
6207          void __vector_9(void) interrupt 9
6208          //#line 361
6209          {
6210   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
6211   2      //#line 362
6212   2          {
6213   3            if (T1CCTL2 & (1 << CC2430_T1CCTLx_IM) && T1CTL & CC2430_T1_CH2IF) {
6214   4                T1CTL &= ~(1 << CC2430_T1CTL_CH2IF);
6215   4                T1CCTL2 &= ~(1 << CC2430_T1CCTLx_IM);
6216   4                /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Al
             -arm2__fired();
6217   4              }
6218   3            if (T1CCTL1 & (1 << CC2430_T1CCTLx_IM) && T1CTL & CC2430_T1_CH1IF) {
6219   4                T1CTL &= ~(1 << CC2430_T1CTL_CH1IF);
6220   4                T1CCTL1 &= ~(1 << CC2430_T1CCTLx_IM);
6221   4                /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Al
             -arm1__fired();
6222   4              }
6223   3            if (T1CCTL0 & (1 << CC2430_T1CCTLx_IM) && T1CTL & CC2430_T1_CH0IF) {
6224   4                T1CTL &= ~(1 << CC2430_T1CTL_CH0IF);
6225   4                T1CCTL0 &= ~(1 << CC2430_T1CCTLx_IM);
6226   4                /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Al
             -arm0__fired();
6227   4              }
6228   3            if (T1CTL & CC2430_T1_OVFIF) {
6229   4                T1CTL &= ~(1 << CC2430_T1CTL_OVFIF);
6230   4                /*HplCC2430Timer1AlarmCounterC.HplCC2430Timer1AlarmCounterP*/HplCC2430Timer1AlarmCounterP__0__Co
             -unter__overflow();
6231   4              }
6232   3          }
6233   2      //#line 382
6234   2          __nesc_atomic_end(__nesc_atomic); }
6235   1      }
6236          
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 105 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


HalCC2430RadioP__CC_ADDR_SHORTADDR . .  E_CONST  -----  INT      -----  2
_SimpleMacM__HALCC2420__sendPacket . .  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
AlarmToTimerC__0__Timer__fired . . . .  STATIC   CODE   PROC     0000H  -----
uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__LEADING_ZERO_BYTES_1.  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__m_oneshot. . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
TestAppP__keyBuffer. . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0001H  1
SimpleMacM__SimpleMacControl__stop . .  STATIC   CODE   PROC     0000H  -----
VirtualizeTimerC__0__updateFromTimer__  STATIC   CODE   PROC     0000H  -----
  elapsed. . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   000EH  4
  remaining. . . . . . . . . . . . . .  AUTO     XDATA  LONG     0012H  4
  timer. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000BH  3
  now. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  min_remaining. . . . . . . . . . . .  AUTO     XDATA  LONG     0004H  4
  min_remaining_isset. . . . . . . . .  AUTO     XDATA  U_CHAR   0008H  1
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0009H  2
ieee_mac_addr_t. . . . . . . . . . . .  TYPEDEF  -----  ARRAY    -----  8
__nesc_nxbase_nx_int32_t . . . . . . .  TYPEDEF  -----  LONG     -----  4
HalCC2430RadioP__LEADING_ZERO_BYTES_2.  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SXOSCOFF . . .  E_CONST  -----  U_CHAR   -----  1
_VirtualizeTimerC__0__Timer__fired . .  STATIC   CODE   PROC     0000H  -----
  arg_0x2b50edb925d8 . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TICKF_DIV_8 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430RadioP__CC2420SetIEEEAddr. .  STATIC   CODE   PROC     0000H  -----
  extAddress . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
HalCC2430RadioP__LEADING_ZERO_BYTES_3.  E_CONST  -----  U_CHAR   -----  1
_SimpleMacM__HALCC2420__setChannel . .  STATIC   CODE   PROC     0000H  -----
  channel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_TestAppP__Timer__startPeriodic. . . .  STATIC   CODE   PROC     0000H  -----
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
StdOutM__Init__init. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__HALCC2420Control__stop STATIC   CODE   PROC     0000H  -----
CC2430_RFIF_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
error_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ESIZE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_int16_t . . . . . . .  TYPEDEF  -----  INT      -----  2
HalCC2430RadioP__LEADING_ZERO_BYTES_4.  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_TOPTST . . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__HALCC2420__getAddress. . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
VirtualizeTimerC__0__TimerFrom__getNow  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_LONG   0004H  4
SchedulerBasicP__popTask . . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
TransformCounterC__0__Counter__get . .  STATIC   CODE   PROC     0000H  -----
  high_to. . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   000BH  4
  low_to . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   000FH  4
  high . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0005H  4
  low. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0009H  2
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0004H  1
  rv . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
cc2430_timer34_if_t. . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__LEADING_ZERO_BYTES_5.  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__signalSendPacketDone . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 106 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TestAppP__consoleTask__postTask. . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430RadioP__InterruptFIFOP__fired  STATIC   CODE   PROC     0000H  -----
CC2430_IRCON2_UTX0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_least32_t. . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
HalCC2430RadioP__LEADING_ZERO_BYTES_6.  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__HALCC2420__addressFilterDi  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
mac_addr_t . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
T1CC0H . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DBH  1
CC2430_IRCON2_UTX1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_ENCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4250 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__LEADING_ZERO_BYTES_7.  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_ADDR_IEEEADDR. . .  E_CONST  -----  INT      -----  2
HalCC2430RadioP__flushBufferTask . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__transmitbuffer . . . . . .  PUBLIC   XDATA  ARRAY    0002H  128
CC2430_TIMER3_4_DIV_32 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4260 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4251 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
ldiv_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
__nesc_unnamed4242 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
int_least16_t. . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HalCC2430RadioP__rxEnabled . . . . . .  PUBLIC   XDATA  U_CHAR   0082H  1
HalCC2430RadioP__MDMCTRL0_t. . . . . .  TYPEDEF  -----  STRUCT   -----  2
  preamble_length. . . . . . . . . . .  MEMBER   -----  FIELD    0000H  4.0
  autoack. . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.4
  autocrc. . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.5
  cca_mode . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  2.6
  cca_hyst . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  3.0
  adr_decode . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  1.3
  pan_coordinator. . . . . . . . . . .  MEMBER   -----  FIELD    0001H  1.4
  reserved_frame_mode. . . . . . . . .  MEMBER   -----  FIELD    0001H  1.5
  reserved . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  2.6
HalCC2430RadioP__LEADING_ZERO_BYTES_8.  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__SimpleMac__rxEnable. . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4270 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_MODE_FREE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4261 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4252 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4243 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  __w_termsig. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  7.0
  __w_coredump . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.7
  __w_retcode. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.8
  *gap*. . . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0002H  16.0
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
StdOutM__bufferhead. . . . . . . . . .  PUBLIC   XDATA  PTR      0083H  3
HalCC2430RadioP__LEADING_ZERO_BYTES_9.  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0__Timer_t . . . . .  TYPEDEF  -----  STRUCT   -----  9
  t0 . . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0000H  4
  dt . . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0004H  4
  isoneshot. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  1.0
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 107 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  isrunning. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  1.1
  _reserved. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  6.2
_SimpleMacM__HALCC2420__sendPacketDone  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
TestAppP__LocalTime__precision_tag . .  TYPEDEF  -----  U_CHAR   -----  1
__nesc_unnamed4271 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  2
  rssi . . . . . . . . . . . . . . . .  MEMBER   -----  CHAR     0000H  1
  correlation. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
CC2430_TIMER3_4_DIV_16 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4262 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFSTATUS_FIFOP. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4253 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4244 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  __w_stopval. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.0
  __w_stopsig. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.8
  *gap*. . . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0002H  16.0
TestAppP____nesc_sillytask_sendPacketT  TYPEDEF  -----  ARRAY    -----  -----
HalCC2430RadioP__HALCC2420__rxEnable .  STATIC   CODE   PROC     0000H  -----
SimpleMacM__initTask__runTask. . . . .  STATIC   CODE   PROC     0000H  -----
FCF_SRC_SHORT_ADDR . . . . . . . . . .  E_CONST  -----  INT      -----  2
T32khz . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
cc2430_timerMAC_interval_t . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4263 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
T1CC0L . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DAH  1
CC2430_RFIM_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4254 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4245 . . . . . . . . . .  * TAG *  -----  UNION    -----  3
  __uptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  __iptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HalCC2430RadioP__InterruptTXDone__enab  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_TestAppP__StdOut__printBase10uint8. .  STATIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
TransformAlarmC__0__Alarm__getAlarm. .  STATIC   CODE   PROC     0000H  -----
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0001H  4
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HplMcs51GeneralIOC__P10__toggle. . . .  STATIC   CODE   PROC     0000H  -----
Alarm32khz16C__0____nesc_unnamed4272 .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4264 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4255 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
EBUSY. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4246 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
HalCC2430RadioP__CC_REG_AGCTST0. . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_64 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4265 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_enable_interrupt. . . . . . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4256 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4247 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
HalCC2430RadioP__CC_REG_AGCTST1. . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 108 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


HalCC2430RadioP__CC_REG_MANFIDH. . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Leds__led1On. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__Timer__precision_tag . . . .  TYPEDEF  -----  U_CHAR   -----  1
FCF_DST_SHORT_ADDR . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_WDCTL_INT_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4266 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4257 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4248 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
HalCC2430RadioP__CC_REG_AGCTST2. . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_sillytask_tran  TYPEDEF  -----  ARRAY    -----  14
HplCC2430Timer1AlarmCounterP__0__Count  TYPEDEF  -----  U_INT    -----  2
__nesc_unnamed4267 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1CCTLx_CAP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4258 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4249 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__setChannelTask. . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__shortAddress . . . . . . .  PUBLIC   XDATA  PTR      0086H  3
SimpleMacM__HALCC2420Control__start. .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformAlarmC__0__Counter__get . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_LONG   0004H  4
__nesc_unnamed4268 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERMAC_MODE_IDLE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4259 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_fast32_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__receivedPacketTaskRet  PUBLIC   XDATA  U_CHAR   0089H  1
HalCC2430RadioP__CC2430RFDisable . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_SYNCWORD . . .  E_CONST  -----  U_CHAR   -----  1
_SimpleMacM__HALCC2420__setAddress . .  STATIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CounterToLocalTimeC__0__precision_tag.  TYPEDEF  -----  U_CHAR   -----  1
__nesc_unnamed4269 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
IEN2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
CC2430_RFIF_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_MANFIDL. . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__Alarm__getAlarm. . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_LONG   0004H  4
TransformCounterC__0__NUM_UPPER_BITS .  E_CONST  -----  CHAR     -----  1
cc2420_error_codes . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
LEDS_LED0. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_MODE_TIMER . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_OVFIM . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_fast16_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__CC_REG_MANOR. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_FSMTC. . . . .  E_CONST  -----  U_CHAR   -----  1
ReverseGPIOP__0__In__toggle. . . . . .  STATIC   CODE   PROC     0000H  -----
_HalCC2430SimpleUartP__uart0__put. . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SimpleMacM__SimpleMac__getExtAddress .  STATIC   CODE   PROC     0000H  -----
SchedulerBasicP__Scheduler__runNextTask STATIC   CODE   PROC     0000H  -----
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  nextTask . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
FCF_INTRAPAN . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
LEDS_LED1. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 109 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_TIMIF_T3OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_32768. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
HplCC2430Timer1AlarmCounterP__0__Init_  STATIC   CODE   PROC     0000H  -----
TestAppP__consoleTask__runTask . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
  _data. . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    0000H  2
fsc_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  rssi . . . . . . . . . . . . . . . .  MEMBER   -----  CHAR     0000H  1
  correlation. . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0001H  1
LEDS_LED2. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_CLKSPD . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RFERRIE. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
HalCC2430RadioP__CC_REG_RXBPFTST . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__HALCC2420__getExtAddr  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__0__Out__toggle . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
FCS_CORRELATION_MASK . . . . . . . . .  E_CONST  -----  INT      -----  2
LEDS_LED3. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_OVFIF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_CCA_HYST. . . . . . .  E_CONST  -----  U_CHAR   -----  1
RFERRIF. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
HalCC2430RadioP__RFIF. . . . . . . . .  SFR      DATA   U_CHAR   00E9H  1
HalCC2430RadioP__sendPacketDoneTask. .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__runNextTask. . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430SimpleUartP__Init__init . . .  STATIC   CODE   PROC     0000H  -----
FCF_SRC_NO_ADDR. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
LEDS_LED4. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_CLR. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T1IE . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
P1_3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
__gwchar_t . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HalCC2430RadioP__receivedPacket. . . .  PUBLIC   XDATA  ARRAY    008AH  128
HalCC2430RadioP__CC_REG_AGCCTRL. . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SFLUSHRX . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0__m_timers. . . . .  PUBLIC   XDATA  ARRAY    010AH  9
_TestAppP__StdOut__printHexword. . . .  STATIC   CODE   PROC     0007H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
TestAppP__sendPacketTask__postTask . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2420_DEFAULT_CHANNEL . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LEDS_LED5. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__m_tail. . . . . . . .  PUBLIC   XDATA  U_CHAR   0113H  1
TransformCounterC__0__from_size_type .  TYPEDEF  -----  U_INT    -----  2
LEDS_LED6. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_DIV. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_XOSC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SFLUSHTX . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM____nesc_sillytask_signalSen  TYPEDEF  -----  ARRAY    -----  10
SimpleMacM__HALCC2420__addressFilterEn  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
FCF_DST_NO_ADDR. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 110 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


LEDS_LED7. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint32_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
nx_uint8_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
HalCC2430RadioP__InterruptRFErr__enabl  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
VirtualizeTimerC__0__TimerFrom__fired.  STATIC   CODE   PROC     0000H  -----
CC2430_RFIF_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_fast32_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
_HplCC2430InterruptsC__CaptureSFD__cap  STATIC   CODE   PROC     0000H  -----
  time . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
HalCC2430RadioP____nesc_sillytask_flus  TYPEDEF  -----  ARRAY    -----  20
HalCC2430RadioP__transmitTask__postTask STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SimpleMacM____nesc_unnamed4282 . . . .  * TAG *  -----  ENUM     -----  -----
TransformAlarmC__0__m_t0 . . . . . . .  PUBLIC   XDATA  U_LONG   0114H  4
TransformCounterC__0__m_upper. . . . .  PUBLIC   XDATA  U_LONG   0118H  4
CC2430_T1CCTLx_CMP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_IF_MASK . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
div_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
nxle_uint16_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
HalCC2430SimpleUartP__uart0__putDone .  STATIC   CODE   PROC     0000H  -----
SimpleMacM____nesc_unnamed4283 . . . .  * TAG *  -----  ENUM     -----  -----
SimpleMacM__HALCC2420__rxDisable . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformCounterC__0__CounterFrom__get  STATIC   CODE   PROC     0006H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
int_fast16_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
HplCC2430InterruptsC__InterruptTXDone_  STATIC   CODE   PROC     0000H  -----
VirtualizeTimerC__0__END_OF_LIST . . .  E_CONST  -----  U_CHAR   -----  1
HplCC2430Timer1AlarmCounterP__0__Count  TYPEDEF  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint8_t . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_ADDR_CBCSTATE. . .  E_CONST  -----  INT      -----  2
SimpleMacM__sendPacketResult . . . . .  PUBLIC   XDATA  U_CHAR   011CH  1
SchedulerBasicP__McuSleep__sleep . . .  STATIC   CODE   PROC     0000H  -----
SimpleMacM__Init__init . . . . . . . .  STATIC   CODE   PROC     0000H  -----
SUCCESS. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint64_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
StdOutM__isOutputting. . . . . . . . .  PUBLIC   XDATA  INT      011DH  2
_HalCC2430RadioP__CC2430SetShortaddr .  STATIC   CODE   PROC     0000H  -----
  shortAddr. . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
CC2430_TIMER3_4_MODE_DOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_tick_spd_t. . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_RREG_RADIO_PD . . . . . .  E_CONST  -----  U_CHAR   -----  1
FAIL . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__vector_16. . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  now. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0002H  2
  RFIF_RFIM. . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
AlarmToTimerC__0__precision_tag. . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMERWDT_512. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 111 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


HalCC2430RadioP__receivedPacketTaskPos  PUBLIC   XDATA  U_CHAR   011FH  1
_SimpleMacM__HALCC2420__receivedPacket  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  length . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0004H  2
_AlarmToTimerC__0__Timer__startOneShotAtSTATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0004H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
FCS_CRC_OK_MASK. . . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_MDMCTRL0H_FRAME_FILT. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_P0IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
StdOutM__buffertail. . . . . . . . . .  PUBLIC   XDATA  PTR      0120H  3
HalCC2430RadioP__CC_ADDR_RXFIFO. . . .  E_CONST  -----  INT      -----  2
TransformAlarmC__0__Alarm__stop. . . .  STATIC   CODE   PROC     0000H  -----
VirtualizeTimerC__0__precision_tag . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_MODULO. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_WDTIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
StdOutM__count . . . . . . . . . . . .  PUBLIC   XDATA  INT      0123H  2
HalCC2430RadioP__CC2430RFEnable. . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP____nesc_sillytask_setC  TYPEDEF  -----  ARRAY    -----  16
_TestAppP__SimpleMac__sendPacket . . .  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformAlarmC__0__from_size_type . .  TYPEDEF  -----  U_INT    -----  2
__nesc_atomic_t. . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EOFF . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int32_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
nx_int8_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
HalCC2430RadioP__CC2430TxWait. . . . .  STATIC   CODE   PROC     0000H  -----
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0002H  1
HalCC2430RadioP__CC_ADDR_TXFIFO. . . .  E_CONST  -----  INT      -----  2
TransformCounterC__0__OVERFLOW_MASK. .  E_CONST  -----  CHAR     -----  1
HplCC2430InterruptsC__InterruptFIFOP__  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_T1CTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430RadioP__wait . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  u. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  j. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0003H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
SimpleMacM__signalSendPacketDone__post  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TestAppP__sendPacketTask__runTask. . .  STATIC   CODE   PROC     0000H  -----
U0BAUD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
nxle_int16_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
HalCC2430RadioP__CC_REG_RXCTRL0. . . .  E_CONST  -----  U_CHAR   -----  1
HplCC2430Timer1AlarmCounterP__0__Count  STATIC   CODE   PROC     0000H  -----
_TestAppP__SimpleMac__setChannel . . .  STATIC   CODE   PROC     0000H  -----
  channel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformCounterC__0__Counter__size_typeTYPEDEF  -----  U_LONG   -----  4
TransformCounterC__0__from_precision_tagTYPEDEF  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 112 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


FCF_SRC_ADDR_MASK. . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_T34CTL_DIV_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timer1_mode_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_IRCON_T1IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_RXCTRL1. . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__flushBufferTask__post  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SimpleMacM__HALCC2420Control__stop . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TestAppP__SimpleMac__getAddress. . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
CC2430_WDCTL_EN. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T2IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_EA . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int8_t. . . . . . .  TYPEDEF  -----  CHAR     -----  1
AlarmToTimerC__0__Alarm__stop. . . . .  STATIC   CODE   PROC     0000H  -----
SchedulerBasicP____nesc_unnamed4273. .  * TAG *  -----  ENUM     -----  -----
CounterToLocalTimeC__0__Counter__size_  TYPEDEF  -----  U_LONG   -----  4
FCF_FRAMEPENDING . . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_TIMER1_DIV_128. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T3IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int64_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
HalCC2430RadioP____nesc_sillytask_send  TYPEDEF  -----  ARRAY    -----  22
TestAppP__radioOn. . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0125H  1
TestAppP__SimpleMac__addressFilterDisa  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HplCC2430InterruptsC__InterruptFIFOP__  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HalCC2430RadioP__transmitTask__runTask  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0002H  1
  oldRxEnabled . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  status . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  counter. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
McuSleepC__McuSleep__sleep . . . . . .  STATIC   CODE   PROC     0000H  -----
FCF_DST_ADDR_MASK. . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_IRCON_T4IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led0__toggle. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
_StdOutM__StdOut__printBase10uint8 . .  STATIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  print. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  str. . . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    0001H  4
  idx. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0005H  1
  tmp. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0006H  1
  v. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0007H  4
LedsP__Init__init. . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__Timer__fired . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  dsn. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2420_DEFAULT_POWER . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
FCF_SRC_LONG_ADDR. . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_RFPWR_RREG_DELAY. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RFIF . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E9H  1
HplCC2430InterruptsC__InterruptRFErr__  STATIC   CODE   PROC     0000H  -----
_HalCC2430RadioP__CC2430ChannelSet . .  STATIC   CODE   PROC     0000H  -----
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 113 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  channel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  freq . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
TransformCounterC__0____nesc_unnamed4276* TAG *  -----  ENUM     -----  -----
CC2430_TMAC_CMPIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_OFF . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC2430ExternalOscilla  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_BATTMON. . . .  E_CONST  -----  U_CHAR   -----  1
_TestAppP__SimpleMac__sendPacketDone .  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  result . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
CC2430_RREG_DELAY_500. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__receivedPacketTask. .  E_CONST  -----  U_CHAR   -----  1
TransformCounterC__0__HIGH_SHIFT_LEFT.  E_CONST  -----  CHAR     -----  1
TestAppP__transmitPacket . . . . . . .  PUBLIC   XDATA  ARRAY    0126H  128
SchedulerBasicP__m_next. . . . . . . .  PUBLIC   XDATA  ARRAY    01A6H  12
_VirtualizeTimerC__0__Timer__default__  STATIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
FCF_DST_LONG_ADDR. . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_MDMCTRL0H_PAN_COORDINATOR . . .  E_CONST  -----  U_CHAR   -----  1
StdOutM__bufferend . . . . . . . . . .  PUBLIC   XDATA  PTR      01B2H  3
HalCC2430RadioP__CC_REG_IOCFG0 . . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__HALCC2420__rxEnable. . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HplCC2430Timer1AlarmCounterP__0__Count  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_250. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HplCC2430InterruptsC__InterruptCCA__fi  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_IOCFG1 . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__setChannelTask__postT  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
NoPinC__0__GeneralIO__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_MODE_UPDOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_125. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SRXON. . . . .  E_CONST  -----  U_CHAR   -----  1
_TestAppP__StdOut__print . . . . . . .  STATIC   CODE   PROC     0006H  -----
  str. . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
TestAppP__Boot__booted . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TICKF_DIV_32. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
bool . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
TransformAlarmC__0__Counter__size_type  TYPEDEF  -----  U_LONG   -----  4
TransformAlarmC__0__from_precision_tag  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T2CNF_SYNC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RFIM . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
HalCC2430RadioP__LEADING_ZERO_BYTES_10  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_STXON. . . . .  E_CONST  -----  U_CHAR   -----  1
TestAppP__SimpleMacControl__start. . .  STATIC   CODE   PROC     000AH  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_TMAC_PERIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_16. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0L_AUTOACK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__LEADING_ZERO_BYTES_11  E_CONST  -----  U_CHAR   -----  1
_TestAppP__SimpleMac__setAddress . . .  STATIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 114 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SimpleMacM__signalSendPacketDone__runT  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
CC2430_T1CCTLx_CPSEL . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P1IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_RFERRIE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__currentChannel. . . .  PUBLIC   XDATA  U_CHAR   01B5H  1
HalCC2430RadioP__LEADING_ZERO_BYTES_12  E_CONST  -----  U_CHAR   -----  1
TransformCounterC__0__Counter__precisi  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T34CTL_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P2IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__LEADING_ZERO_BYTES_13  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__sendPacketDoneTask__p  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_StdOutM__StdOut__printHexword . . . .  STATIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
HalCC2430RadioP__flushBufferTask__runT  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
LedsP__Leds__led0Toggle. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TICKF_DIV_64. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOACK . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__LEADING_ZERO_BYTES_14  E_CONST  -----  U_CHAR   -----  1
TestAppP__channel. . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   01B6H  1
_StdOutM__UART__get. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CounterToLocalTimeC__0__Counter__preci  TYPEDEF  -----  U_CHAR   -----  1
CC2430_CLKCON_OSC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T1CNTH . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
CC2430_RFIM_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__LEADING_ZERO_BYTES_15  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SACK . . . . .  E_CONST  -----  U_CHAR   -----  1
TransformAlarmC__0____nesc_unnamed4277  * TAG *  -----  ENUM     -----  -----
TestAppP__sequence . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   01B7H  1
CC2430_T34CTL_OVFIM. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__LEADING_ZERO_BYTES_16  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__HALCC2420__getExtAddress .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
_SchedulerBasicP__TaskBasic__postTask.  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_MODE_MODULO. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFPWR_RREG_DELAY_MASK . . . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0____nesc_unnamed4280 * TAG *  -----  ENUM     -----  -----
TransformAlarmC__0__AlarmFrom__stop. .  STATIC   CODE   PROC     0000H  -----
CC2430_SLEEP_OSC32K_CALDIS . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_FIFO . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wait . . . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  4
  w_status . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  __wait_terminated. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  __wait_stopped . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
HalCC2430RadioP__CC_REG_MAIN . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__initTask. . . . . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__receivedPacket . . . . . .  PUBLIC   XDATA  STRUCT   01B8H  128
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 115 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


VirtualizeTimerC__0____nesc_unnamed4281 * TAG *  -----  STRUCT   -----  9
  t0 . . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0000H  4
  dt . . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0004H  4
  isoneshot. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  1.0
  isrunning. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  1.1
  _reserved. . . . . . . . . . . . . .  MEMBER   -----  FIELD    0008H  6.2
_VirtualizeTimerC__0__TimerFrom__start  STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0004H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
SchedulerBasicP__Scheduler__init . . .  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T1CNTL . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
TestAppP__timerOn. . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0238H  1
TestAppP__SimpleMac__addressFilterEnableSTATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
NoPinC__0__GeneralIO__clr. . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_MDMCTRL0L_AUTOCRC . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PERCFG . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
AlarmToTimerC__0__fired. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__Timer__stop. . . . .  STATIC   CODE   PROC     0000H  -----
HplMcs51GeneralIOC__P10__makeOutput. .  STATIC   CODE   PROC     0000H  -----
TransformAlarmC__0__Alarm__size_type .  TYPEDEF  -----  U_LONG   -----  4
cc2430_timer3_4_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_ADI_RADIO_PD. . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__cca_hyst_db_t . . . .  TYPEDEF  -----  U_CHAR   -----  1
TransformCounterC__0__Counter__overflow STATIC   CODE   PROC     0000H  -----
RealMainP__Scheduler__init . . . . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__setChannelTask__runTaskSTATIC   CODE   PROC     0000H  -----
TransformCounterC__0__CounterFrom__siz  TYPEDEF  -----  U_INT    -----  2
CC2430_TIMER1_DIV_1. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0____nesc_unnamed4278 .  * TAG *  -----  ENUM     -----  -----
TestAppP__ieeeAddress. . . . . . . . .  PUBLIC   XDATA  PTR      0239H  3
TestAppP__SimpleMac__rxDisable . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_VirtualizeTimerC__0__Timer__stop. . .  STATIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
fcf_stuff. . . . . . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_DIV_128. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CLKCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
HalCC2430RadioP__CC_ADDR_PANID . . . .  E_CONST  -----  INT      -----  2
HplMcs51GeneralIOC__P13__makeOutput. .  STATIC   CODE   PROC     0000H  -----
TransformAlarmC__0__Counter__precision  TYPEDEF  -----  U_CHAR   -----  1
__WAIT_STATUS. . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  3
  __uptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  __iptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
HalCC2430RadioP____nesc_sillytask_rece  TYPEDEF  -----  ARRAY    -----  18
HalCC2430RadioP__CC_REG_SAES . . . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0____nesc_unnamed4279 * TAG *  -----  ENUM     -----  -----
_TransformAlarmC__0__Alarm__startAt. .  STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0008H  1
_TestAppP__StdOut__get . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_TMAC_OFCMPIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
URX0IE . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
AlarmToTimerC__0__Alarm__size_type . .  TYPEDEF  -----  U_LONG   -----  4
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 116 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


RFST . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
URX0IF . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
HalCC2430RadioP__CC2430RxDisable . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__0__In__makeOutput. . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__sendPacketDoneTask__r  STATIC   CODE   PROC     0000H  -----
_TestAppP__SimpleMac__receivedPacket .  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
CC2430_T2PEROF2_CMPIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_DIR . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FEH  1
CC2430_IRCON2_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EINVAL . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TRUE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_ADDR_SABUF . . . .  E_CONST  -----  INT      -----  2
HalCC2430RadioP__CC_REG_SXOSCON. . . .  E_CONST  -----  U_CHAR   -----  1
ReverseGPIOP__1__In__makeOutput. . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T34CTL_START. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_8. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P0_ALT . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
UTX0IF . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
HalCC2430RadioP__CC2430Reset . . . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_MANAND . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430RadioP__StdOut__print. . . .  STATIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
_HplCC2430InterruptsC__CaptureSFD__def  STATIC   CODE   PROC     0000H  -----
  time . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
HalCC2430RadioP__InterruptTXDone__fired STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__0__Out__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
TransformCounterC__0__to_size_type . .  TYPEDEF  -----  U_LONG   -----  4
CC2430_TIMER3_4_MODE_UPDOWN. . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOMEM . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__runTask .  STATIC   CODE   PROC     0000H  -----
  arg_0x2b50ed6cb3c8 . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
NoPinC__0__GeneralIO__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
ReverseGPIOP__1__Out__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer1_prescaler_t. . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_MDMCTRL0H_ADDR_DECODE . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_0. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint32_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
_AlarmToTimerC__0__Alarm__startAt. . .  STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  AUTO     DATA   U_LONG   0004H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
cc2430_timerMAC_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
TransformAlarmC__0__Counter__overflow.  STATIC   CODE   PROC     0000H  -----
HplMcs51GeneralIOC__P10__clr . . . . .  STATIC   CODE   PROC     0000H  -----
FCF_FT_DATA. . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_IRCON_STIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint16_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
TestAppP__Leds__led1On . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__SimpleMacControl__stop . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T1CTL_CH0IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_ecombine. . . . . . . . . . . . . . .  STATIC   CODE   PROC     0007H  -----
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 117 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


  r1 . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  r2 . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
TransformAlarmC__0__Alarm__precision_tagTYPEDEF  -----  U_CHAR   -----  1
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_INT    -----  2
CC2430_T2PEROF2_PERIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_CH1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_RFIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint32_t. . . . . .  TYPEDEF  -----  U_LONG   -----  4
__nesc_nxbase_nx_uint8_t . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ptrdiff_t. . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
HplMcs51GeneralIOC__P13__clr . . . . .  STATIC   CODE   PROC     0000H  -----
TransformCounterC__0__CounterFrom__pre  TYPEDEF  -----  U_CHAR   -----  1
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_INT    -----  2
CC2420_ERROR_TX. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_CH2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint64_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
HalCC2430RadioP__InterruptFIFOP__enabl  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430RadioP__receivedPacketTask__p  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_INT    -----  2
CC2420_ERROR_RADIO_OFF . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EALREADY . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint16_t. . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP____nesc_sillytask_init  TYPEDEF  -----  ARRAY    -----  12
imaxdiv_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
_StdOutM__StdOut__print. . . . . . . .  STATIC   CODE   PROC     0000H  -----
  str. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  return_flag. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0004H  1
  countret . . . . . . . . . . . . . .  AUTO     XDATA  INT      0005H  2
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
  na_countret. . . . . . . . . . . . .  * REG *  DATA   INT      0004H  2
cc2430_timer1_if_t . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_least8_t. . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
_StdOutM__UART__put. . . . . . . . . .  STATIC   CODE   PROC     000FH  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430RadioP__receivedPacketPtr . .  PUBLIC   XDATA  PTR      023CH  3
AlarmToTimerC__0____nesc_sillytask_firedTYPEDEF  -----  ARRAY    -----  4
TransformAlarmC__0__m_dt . . . . . . .  PUBLIC   XDATA  U_LONG   023FH  4
ReverseGPIOP__0__In__clr . . . . . . .  STATIC   CODE   PROC     0000H  -----
_HplCC2430Timer1AlarmCounterP__0__Alar  STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  dt . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
  remaining. . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0004H  2
  set. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
  now. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0002H  2
  elapsed. . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
HalCC2430RadioP__cc2420_addr_t . . . .  TYPEDEF  -----  INT      -----  2
ReverseGPIOP__1__In__clr . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__SimpleMac__rxEnable. . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
SchedulerBasicP__NO_TASK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 118 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


AlarmToTimerC__0__Alarm__precision_tag  TYPEDEF  -----  U_CHAR   -----  1
TransformAlarmC__0__to_size_type . . .  TYPEDEF  -----  U_LONG   -----  4
cc2420_defaults. . . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
TMilli . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T1CCTLx_IM. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int32_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
HalCC2430RadioP__InterruptFIFOP__disableSTATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformAlarmC__0__Alarm__getNow. . .  STATIC   CODE   PROC     0000H  -----
CounterToLocalTimeC__0__LocalTime__pre  TYPEDEF  -----  U_CHAR   -----  1
__compar_fn_t. . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
SimpleMacM__sendPacketPtr. . . . . . .  PUBLIC   XDATA  PTR      0243H  3
_VirtualizeTimerC__0__fireTimers . . .  STATIC   CODE   PROC     0000H  -----
  now. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  elapsed. . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0009H  4
  timer. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0006H  3
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0004H  2
TransformCounterC__0__LOW_SHIFT_RIGHT.  E_CONST  -----  CHAR     -----  1
packet_t . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  128
  length . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  fcf. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
  _data_seq_no . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dest . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
  src. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0006H  2
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0008H  118
  fcs. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   007EH  2
CC2430_RFIM_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int16_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
HalCC2430RadioP__ieeeAddress . . . . .  PUBLIC   XDATA  ARRAY    0246H  8
HalCC2430RadioP__CC2430ControlSet. . .  STATIC   CODE   PROC     0000H  -----
_SchedulerBasicP__isWaiting. . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430RadioP__InterruptRFErr__fired  STATIC   CODE   PROC     0000H  -----
TransformAlarmC__0__AlarmFrom__size_typeTYPEDEF  -----  U_INT    -----  2
TransformCounterC__0__to_precision_tag  TYPEDEF  -----  U_CHAR   -----  1
TMicro . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_1. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0__updateFromTimer .  E_CONST  -----  U_CHAR   -----  1
TransformCounterC__0__CounterFrom__ove  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_2. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int32_t . . . . . .  TYPEDEF  -----  LONG     -----  4
__nesc_nxbase_nx_int8_t. . . . . . . .  TYPEDEF  -----  CHAR     -----  1
HalCC2430RadioP__CC2430RxEnable. . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_SNOP . . . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0__TimerFrom__stop .  STATIC   CODE   PROC     0000H  -----
AlarmToTimerC__0__m_dt . . . . . . . .  PUBLIC   XDATA  U_LONG   024EH  4
CC2430_SLEEP_POWERMODE_0 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int64_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
HalCC2430RadioP__CC_REG_RSSI . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430RadioP__StdOut__get. . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 119 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SchedulerBasicP__Scheduler__taskLoop .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  nextTask . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_DIV_4. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_POWERMODE_1 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int16_t . . . . . .  TYPEDEF  -----  INT      -----  2
HalCC2430RadioP__CC_REG_SECCTRL0 . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__Alarm__getNow. . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_LONG   0004H  4
TransformAlarmC__0__MAX_DELAY_LOG2 . .  E_CONST  -----  INT      -----  2
TestAppP__shortAddress . . . . . . . .  PUBLIC   XDATA  U_INT    0252H  2
_TestAppP__StdOut__printHex. . . . . .  STATIC   CODE   PROC     000FH  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   INT      0006H  2
FCF_FT_BEACON. . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
cc2430_timerMAC_T2PEROF2_t . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_SLEEP_POWERMODE_2 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_STIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
drand48__data. . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  19
  __x. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  6
  __old_x. . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0006H  6
  __c. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000CH  2
  __init . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000EH  2
  __a. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0010H  3
HalCC2430RadioP__CC_REG_SECCTRL1 . . .  E_CONST  -----  U_CHAR   -----  1
_TransformAlarmC__0__AlarmFrom__startAt STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
  dt . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0004H  2
StdOutM__UART__putDone . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_CHAR   -----  1
CC2430_SLEEP_POWERMODE_3 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_1000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_least8_t . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
HalCC2430RadioP__CC_REG_DACTST . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_ADCTST . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__initTask__postTask. .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
VirtualizeTimerC__0__NUM_TIMERS. . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__taskLoop . . . .  STATIC   CODE   PROC     0000H  -----
HplCC2430InterruptsC__InterruptCCA__de  STATIC   CODE   PROC     0000H  -----
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T2PEROF2_OFCMPIM. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_2000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_FSTST0 . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_MDMCTRL0 . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led0__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__SimpleMac__getExtAddress . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
HalCC2430RadioP__receivedPacketTask__r  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  correlation. . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HplCC2430Timer1AlarmCounterP__0__Alarm  TYPEDEF  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 120 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


FCF_FT_MASK. . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_TIMER3_4_DIV_8. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_MODE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_FSTST1 . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_MDMCTRL1 . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__fired__postTask. . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LedsP__Led1__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
_SimpleMacM__SimpleMac__sendPacket . .  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
  i. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  length . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
CC2430_RFSTATUS_CCA. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_RESERVED_FRAME_MODE .  E_CONST  -----  U_CHAR   -----  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
_HalCC2430RadioP__CC2430SetPanid . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
HalCC2430RadioP__CC_REG_FSTST2 . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SRFOFF . . . .  E_CONST  -----  U_CHAR   -----  1
TransformCounterC__0__CounterFrom__isO  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LedsP__Led2__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
_VirtualizeTimerC__0__Timer__startPeri  STATIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0001H  4
ReverseGPIOP__0__Out__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer3_4_prescaler_t. . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERWDT_8192 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HplCC2430InterruptsC__InterruptFIFOP__  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__CC_REG_FSTST3 . . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM__initTask . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430RadioP__HALCC2420__sendPacket STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
ReverseGPIOP__1__Out__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
_SimpleMacM__SimpleMac__setChannel . .  STATIC   CODE   PROC     0000H  -----
  channel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
TransformAlarmC__0__to_precision_tag .  TYPEDEF  -----  U_CHAR   -----  1
RFD. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
_StdOutM__StdOut__get. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
HalCC2430RadioP__CC_REG_SRXDEC . . . .  E_CONST  -----  U_CHAR   -----  1
_TestAppP__StdOut__dumpHex . . . . . .  STATIC   CODE   PROC     0000H  -----
  ptr. . . . . . . . . . . . . . . . .  AUTO     DATA   PTR      0001H  3
  count. . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0005H  1
  sep. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0004H  3
SimpleMacM__SimpleMac__getAddress. . .  STATIC   CODE   PROC     0000H  -----
Alarm32khz16C__0__ALARM_ID . . . . . .  E_CONST  -----  U_CHAR   -----  1
HplCC2430Timer1AlarmCounterP__0__frequ  TYPEDEF  -----  U_CHAR   -----  1
CC2430_RFSTATUS_TX_ACTIVE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
T1CCTL0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E5H  1
ERETRY . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_SACKPEND . . .  E_CONST  -----  U_CHAR   -----  1
_AlarmToTimerC__0__start . . . . . . .  STATIC   CODE   PROC     0000H  -----
  t0 . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
  oneshot. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0008H  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 121 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_HalCC2430RadioP__HALCC2420__setChannel STATIC   CODE   PROC     0000H  -----
  channel. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T1CCTLx_MODE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_atomic_start. . . . . . . . . .  PUBLIC   CODE   PROC     0008H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
T1CCTL1. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
CC2430_IEN0_URX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TransformAlarmC__0__MAX_DELAY. . . . .  E_CONST  -----  INT      -----  2
HalCC2430RadioP__HALCC2420__getAddress  STATIC   CODE   PROC     0000H  -----
SimpleMacM__SimpleMac__addressFilterDi  STATIC   CODE   PROC     0000H  -----
TransformAlarmC__0__AlarmFrom__precisi  TYPEDEF  -----  U_CHAR   -----  1
FCF_FT_MAC_COMMAND . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_T1CTL_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
T1CCTL2. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
CC2430_IEN0_URX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintmax_t. . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
HalCC2430RadioP__frameLength . . . . .  PUBLIC   XDATA  U_CHAR   0254H  1
TestAppP__filter . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   0255H  1
CC2430_TIMIF_T3CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_fast8_t . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
TestAppP____nesc_unnamed4274 . . . . .  * TAG *  -----  ENUM     -----  -----
HplCC2430InterruptsC__InterruptTXDone_  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
HalCC2430RadioP__HALCC2420__addressFil  STATIC   CODE   PROC     0000H  -----
CC2430_TIMIF_T3CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMPIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
random__data . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  18
  fptr . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rptr . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
  state. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0006H  3
  rand_type. . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  rand_deg . . . . . . . . . . . . . .  MEMBER   -----  INT      000BH  2
  rand_sep . . . . . . . . . . . . . .  MEMBER   -----  INT      000DH  2
  end_ptr. . . . . . . . . . . . . . .  MEMBER   -----  PTR      000FH  3
HalCC2430RadioP__CC_REG_RXFIFO . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_FSCTRL . . . .  E_CONST  -----  U_CHAR   -----  1
_SimpleMacM__SimpleMac__sendPacketDone  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
TestAppP____nesc_unnamed4275 . . . . .  * TAG *  -----  ENUM     -----  -----
AlarmToTimerC__0__Timer__precision_tag  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMIF_T4CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH0IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0GCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
CC2430_IEN2_UTX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_STXCAL . . . .  E_CONST  -----  U_CHAR   -----  1
TestAppP__transmitPacketPtr. . . . . .  PUBLIC   XDATA  PTR      0256H  3
TestAppP__Timer__stop. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__Init__init . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
FCF_SECENC . . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
cc2430_timerWDT_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1_CH1IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_TICKSPD. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0BUF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
CC2430_IEN2_UTX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_TXFIFO . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 122 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_HalCC2430RadioP__HALCC2420__sendPacke  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
TransformAlarmC__0__Alarm__fired . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__consoleTask. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
VirtualizeTimerC__0__Timer__precision_  TYPEDEF  -----  U_CHAR   -----  1
CC2420_ERROR_CCA . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERMAC_MODE_RUN . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH2IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_128 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ERESERVE . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_VirtualizeTimerC__0__startTimer . . .  STATIC   CODE   PROC     0000H  -----
  num. . . . . . . . . . . . . . . . .  AUTO     DATA   U_CHAR   0007H  1
  t0 . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0001H  4
  dt . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0005H  4
  isoneshot. . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0009H  1
  timer. . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      000AH  3
VirtualizeTimerC__0____nesc_sillytask_  TYPEDEF  -----  ARRAY    -----  6
TransformAlarmC__0__set_alarm. . . . .  STATIC   CODE   PROC     0000H  -----
  now. . . . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0000H  4
  expires. . . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0004H  4
  remaining. . . . . . . . . . . . . .  AUTO     XDATA  U_LONG   0008H  4
LedsP__Led1__clr . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__initTask__runTask . .  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_OSC32K . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
___nesc_atomic_end . . . . . . . . . .  PUBLIC   CODE   PROC     000DH  -----
  oldSreg. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
S1CON. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
__vector_0 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_T34CTL_MODE_MASK. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_RUN . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMSEL . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
AlarmToTimerC__0__fired__runTask . . .  STATIC   CODE   PROC     0000H  -----
CC2430_SLEEP_OSC_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_RREG_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__vector_2 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
SimpleMacM__SimpleMacControl__start. .  STATIC   CODE   PROC     0000H  -----
PlatformP__Init__init. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  new_clkcon . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_PERIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_ADDR_KEY0. . . . .  E_CONST  -----  INT      -----  2
HalCC2430RadioP__CC_REG_STXENC . . . .  E_CONST  -----  U_CHAR   -----  1
_SimpleMacM__SimpleMac__setAddress . .  STATIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
AlarmToTimerC__0__Timer__getNow. . . .  STATIC   CODE   PROC     0000H  -----
FCF_ACKREQ . . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
T1CTL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
CC2430_RFIF_RREG_ON. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint8_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
intmax_t . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
HalCC2430RadioP__shortAddress. . . . .  PUBLIC   XDATA  U_INT    0259H  2
HalCC2430RadioP__CC_ADDR_KEY1. . . . .  E_CONST  -----  INT      -----  2
HalCC2430RadioP__HALCC2420Control__startSTATIC   CODE   PROC     0000H  -----
AlarmToTimerC__0__Alarm__fired . . . .  STATIC   CODE   PROC     0000H  -----
int_fast8_t. . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 123 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_HalCC2430RadioP__HALCC2420__setAddress STATIC   CODE   PROC     0000H  -----
  addr . . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
HplCC2430Timer1AlarmCounterP__0__Count  STATIC   CODE   PROC     0000H  -----
  r. . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_INT    0000H  2
TOS_NODE_ID. . . . . . . . . . . . . .  PUBLIC   XDATA  U_INT    025BH  2
FALSE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__vector_7 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  done . . . . . . . . . . . . . . . .  * REG *  DATA   INT      0004H  2
cc2430_timerMAC_if_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1CTL_DIV_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ECANCEL. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SimpleMacM____nesc_sillytask_initTask.  TYPEDEF  -----  ARRAY    -----  8
TestAppP__Leds__led0Toggle . . . . . .  STATIC   CODE   PROC     0000H  -----
_SchedulerBasicP__TaskBasic__default__  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
U0CSR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0086H  1
HalCC2430RadioP__CC_ADDR_RXNONCE . . .  E_CONST  -----  INT      -----  2
__vector_9 . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
LedsP__Led0__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestAppP__receiverOn . . . . . . . . .  PUBLIC   XDATA  U_CHAR   025DH  1
HplCC2430InterruptsC__InterruptRFErr__  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMERWDT_64 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_32 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_SFD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintptr_t. . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__cc2420_reg_t. . . . .  TYPEDEF  -----  U_CHAR   -----  1
SimpleMacM__receivedPacketPtr. . . . .  PUBLIC   XDATA  PTR      025EH  3
LedsP__Led1__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_MODE_FREE. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
U0UCR. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
HalCC2430RadioP__CC_ADDR_TXNONCE . . .  E_CONST  -----  INT      -----  2
VirtualizeTimerC__0__updateFromTimer__  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LedsP__Led2__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
SimpleMacM__SimpleMac__addressFilterEn  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_TICKSPD_MASK . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_DMAIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
StdOutM__buffer. . . . . . . . . . . .  PUBLIC   XDATA  ARRAY    0261H  1000
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
lldiv_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
PlatformP__LedsInit__init. . . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
_StdOutM__StdOut__printHex . . . . . .  STATIC   CODE   PROC     0000H  -----
  c. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0005H  1
  str. . . . . . . . . . . . . . . . .  AUTO     XDATA  ARRAY    0000H  3
  v. . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
HalCC2430RadioP__HALCC2420__addressFil  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_CLR . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 124 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


nxle_int8_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
HalCC2430RadioP__preamble_length_t . .  TYPEDEF  -----  U_CHAR   -----  1
HalCC2430RadioP__CCA_HYST_0DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4290. .  * TAG *  -----  ENUM     -----  -----
HplCC2430Timer1AlarmCounterP__0__Alarm  STATIC   CODE   PROC     0000H  -----
_SchedulerBasicP__pushTask . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
SimpleMacM__SimpleMac__rxDisable . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFIM_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CCA_HYST_1DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4291. .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__CC_REG_RESERVED . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_TXCTRL . . . .  E_CONST  -----  U_CHAR   -----  1
TestAppP__sendPacketTask . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__NUM_TASKS . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_bool. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
__nesc_nxbase_nx_uint32_t. . . . . . .  TYPEDEF  -----  U_LONG   -----  4
HalCC2430RadioP____nesc_unnamed4292. .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__CCA_HYST_2DB. . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Boot__booted. . . . . . . .  STATIC   CODE   PROC     0000H  -----
HalCC2430RadioP__HALCC2420__rxDisable.  STATIC   CODE   PROC     0000H  -----
CC2430_IEN0_ADCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_HalCC2430SimpleUartP__uart0__get. . .  STATIC   CODE   PROC     0000H  -----
  _data. . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HalCC2430RadioP__transmitInProgress. .  PUBLIC   XDATA  U_CHAR   0649H  1
HalCC2430RadioP____nesc_unnamed4293. .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__CCA_HYST_3DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4284. .  * TAG *  -----  ENUM     -----  -----
TestAppP__echo . . . . . . . . . . . .  PUBLIC   XDATA  U_CHAR   064AH  1
TestAppP____nesc_sillytask_consoleTask  TYPEDEF  -----  ARRAY    -----  2
RealMainP__PlatformInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_OFCMPIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_OVFIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_uint16_t. . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__transmitPacketPtr . .  PUBLIC   XDATA  PTR      064BH  3
_HalCC2430RadioP__CC2430PALevelSet . .  STATIC   CODE   PROC     0000H  -----
  new_power. . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
  power. . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2
HalCC2430RadioP____nesc_unnamed4294. .  * TAG *  -----  STRUCT   -----  2
  preamble_length. . . . . . . . . . .  MEMBER   -----  FIELD    0000H  4.0
  autoack. . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.4
  autocrc. . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.5
  cca_mode . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  2.6
  cca_hyst . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  3.0
  adr_decode . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  1.3
  pan_coordinator. . . . . . . . . . .  MEMBER   -----  FIELD    0001H  1.4
  reserved_frame_mode. . . . . . . . .  MEMBER   -----  FIELD    0001H  1.5
  reserved . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0001H  2.6
HalCC2430RadioP__CCA_HYST_4DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CC_REG_STXONCCA . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4285. .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__Init__init. . . . . .  STATIC   CODE   PROC     0000H  -----
__nesc_disable_interrupt . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_31 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 125 

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


HalCC2430RadioP__flushBufferTaskPosted  PUBLIC   XDATA  U_CHAR   064EH  1
HalCC2430RadioP__CCA_HYST_5DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4286. .  * TAG *  -----  ENUM     -----  -----
HalCC2430RadioP__transmitTask. . . . .  E_CONST  -----  U_CHAR   -----  1
_SimpleMacM__SimpleMac__receivedPacket  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
CC2430_TICKF_DIV_1 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
intptr_t . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
uint_least32_t . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
HalCC2430RadioP__panid . . . . . . . .  PUBLIC   XDATA  U_INT    064FH  2
HalCC2430RadioP__CCA_HYST_6DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4287. .  * TAG *  -----  ENUM     -----  -----
SimpleMacM__initTask__postTask . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
FCF_FT_ACK . . . . . . . . . . . . . .  E_CONST  -----  INT      -----  2
CC2430_TICKF_DIV_2 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TIMIF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
SLEEP. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
ELAST. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP__CCA_HYST_7DB. . . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4288. .  * TAG *  -----  ENUM     -----  -----
_HalCC2430RadioP__HALCC2420__receivedP  STATIC   CODE   PROC     0000H  -----
  packet . . . . . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   PTR      0001H  3
_StdOutM__StdOut__dumpHex. . . . . . .  STATIC   CODE   PROC     0000H  -----
  ptr. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0000H  3
  countar. . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0003H  1
  sep. . . . . . . . . . . . . . . . .  AUTO     XDATA  PTR      0004H  3
  i. . . . . . . . . . . . . . . . . .  AUTO     XDATA  INT      0007H  2
TransformAlarmC__0__AlarmFrom__fired .  STATIC   CODE   PROC     0000H  -----
VirtualizeTimerC__0__TimerFrom__precis  TYPEDEF  -----  U_CHAR   -----  1
packet . . . . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  128
  length . . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  fcf. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0001H  2
  _data_seq_no . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0003H  1
  dest . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0004H  2
  src. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0006H  2
  _data. . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0008H  118
  fcs. . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   007EH  2
CC2430_SLEEP_HFRC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_least16_t . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
HalCC2430RadioP__CC_REG_FSMSTATE . . .  E_CONST  -----  U_CHAR   -----  1
HalCC2430RadioP____nesc_unnamed4289. .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERWDT_MODE_WDT . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timerMAC_T2CNF_t. . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TICKF_DIV_4 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
SchedulerBasicP__m_head. . . . . . . .  PUBLIC   XDATA  U_CHAR   0651H  1
RealMainP__SoftwareInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
TransformCounterC__0__upper_count_type  TYPEDEF  -----  U_LONG   -----  4
CC2430_WDCTL_INT . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_63 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8526    ----
C51 COMPILER V9.00   APP                                                                   04/30/2013 16:55:39 PAGE 126 

   CONSTANT SIZE    =    447    ----
   XDATA SIZE       =   1618     242
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  7 WARNING(S),  0 ERROR(S)
