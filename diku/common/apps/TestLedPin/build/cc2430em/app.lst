C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE APP
OBJECT MODULE PLACED IN .\app.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.exe app.c LARGE PRINT(.\app.lst) OBJECT(.\app.obj) SYMBOLS

line level    source

   1          
   2          #define MANGLED_NESC_APP_C
   3          #define nx_struct struct
   4          #define nx_union union
   5          #define dbg(mode, format) ((void)0)
   6          #define dbg_clear(mode, format) ((void)0)
   7          #define dbg_active(mode) 0
   8          //# 150 "/usr/lib/gcc/x86_64-linux-gnu/4.7/include/stddef.h" 3
   9          typedef long int ptrdiff_t;
  10          //#line 213
  11          typedef long unsigned int size_t;
  12          //#line 325
  13          typedef int wchar_t;
  14          //# 8 "/usr/lib/ncc/deputy_nodeputy.h"
  15          /*struct __nesc_attr_nonnull {
  16          //#line 8
  17            int dummy;
  18          }  ;*/
  19          //#line 9
  20          /*struct __nesc_attr_bnd {
  21          //#line 9
  22            void *lo, *hi;
  23          }  ;*/
  24          //#line 10
  25          /*struct __nesc_attr_bnd_nok {
  26          //#line 10
  27            void *lo, *hi;
  28          }  ;*/
  29          //#line 11
  30          /*struct __nesc_attr_count {
  31          //#line 11
  32            int n;
  33          }  ;*/
  34          //#line 12
  35          /*struct __nesc_attr_count_nok {
  36          //#line 12
  37            int n;
  38          }  ;*/
  39          //#line 13
  40          /*struct __nesc_attr_one {
  41          //#line 13
  42            int dummy;
  43          }  ;*/
  44          //#line 14
  45          /*struct __nesc_attr_one_nok {
  46          //#line 14
  47            int dummy;
  48          }  ;*/
  49          //#line 15
  50          /*struct __nesc_attr_dmemset {
  51          //#line 15
  52            int a1, a2, a3;
  53          }  ;*/
  54          //#line 16
  55          /*struct __nesc_attr_dmemcpy {
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 2   

  56          //#line 16
  57            int a1, a2, a3;
  58          }  ;*/
  59          //#line 17
  60          /*struct __nesc_attr_nts {
  61          //#line 17
  62            int dummy;
  63          }  ;*/
  64          //# 47 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/keil_stdint.h" 3
  65          typedef signed char int8_t;
  66          typedef short int16_t;
  67          
  68          
  69          
  70          typedef long int32_t;
  71          
  72          
  73          /*typedef long long int int64_t;*/
  74          
  75          
  76          
  77          
  78          typedef unsigned char uint8_t;
  79          typedef unsigned short uint16_t;
  80          
  81          
  82          
  83          typedef unsigned long uint32_t;
  84          
  85          
  86          /*typedef unsigned long long int uint64_t;*/
  87          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/stdint.h" 3
  88          typedef signed char int_least8_t;
  89          typedef short int int_least16_t;
  90          typedef long int_least32_t;
  91          
  92          
  93          
  94          
  95          
  96          
  97          
  98          
  99          
 100          typedef unsigned char uint_least8_t;
 101          typedef unsigned short uint_least16_t;
 102          typedef unsigned long uint_least32_t;
 103          //#line 70
 104          typedef signed char int_fast8_t;
 105          
 106          
 107          
 108          
 109          
 110          typedef int int_fast16_t;
 111          typedef int int_fast32_t;
 112          
 113          
 114          
 115          
 116          
 117          typedef unsigned char uint_fast8_t;
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 3   

 118          
 119          
 120          
 121          
 122          
 123          typedef unsigned int uint_fast16_t;
 124          typedef unsigned int uint_fast32_t;
 125          //#line 105
 126          typedef int intptr_t;
 127          
 128          
 129          typedef unsigned int uintptr_t;
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          /*__extension__*/ 
 139          typedef
 140                   float* intmax_t;
 141                
 142          /*__extension__*/ 
 143          typedef 
 144                   float* uintmax_t;
 145                
 146          //# 35 "/usr/include/inttypes.h" 3
 147          typedef int __gwchar_t;
 148          //#line 283
 149          //#line 279
 150          typedef struct __nesc_unnamed4242 {
 151          
 152            long int quot;
 153            long int rem;
 154          } imaxdiv_t;
 155          /*YYYYY } imaxdiv_t*///# 431 "/usr/lib/ncc/nesc_nx.h"
 156          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nx_int8_t;typedef int8_t __nesc_nx
             -base_nx_int8_t  ;
 157          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nx_int16_t;typedef int16_t __nesc_
             -nxbase_nx_int16_t  ;
 158          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_int32_t;typedef int32_t __nesc_
             -nxbase_nx_int32_t  ;
 159          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_int64_t;/*typedef int64_t __nes
             -c_nxbase_nx_int64_t  ;*/
 160          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nx_uint8_t;typedef uint8_t __nesc_
             -nxbase_nx_uint8_t  ;
 161          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nx_uint16_t;typedef uint16_t __nes
             -c_nxbase_nx_uint16_t  ;
 162          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_uint32_t;typedef uint32_t __nes
             -c_nxbase_nx_uint32_t  ;
 163          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nx_uint64_t;/*typedef uint64_t __n
             -esc_nxbase_nx_uint64_t  ;*/
 164          
 165          
 166          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nxle_int8_t;typedef int8_t __nesc_
             -nxbase_nxle_int8_t  ;
 167          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nxle_int16_t;typedef int16_t __nes
             -c_nxbase_nxle_int16_t  ;
 168          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_int32_t;typedef int32_t __nes
             -c_nxbase_nxle_int32_t  ;
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 4   

 169          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_int64_t;/*typedef int64_t __n
             -esc_nxbase_nxle_int64_t  ;*/
 170          typedef struct { unsigned char nxdata[1]; } /*__attribute__((packed))*/ nxle_uint8_t;typedef uint8_t __nes
             -c_nxbase_nxle_uint8_t  ;
 171          typedef struct { unsigned char nxdata[2]; } /*__attribute__((packed))*/ nxle_uint16_t;typedef uint16_t __n
             -esc_nxbase_nxle_uint16_t  ;
 172          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_uint32_t;typedef uint32_t __n
             -esc_nxbase_nxle_uint32_t  ;
 173          typedef struct { unsigned char nxdata[8]; } /*__attribute__((packed))*/ nxle_uint64_t;/*typedef uint64_t _
             -_nesc_nxbase_nxle_uint64_t  ;*/
 174          //# 13 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/string.h"
 175          extern void *memset(void *s, char val, int n);
 176          //# 67 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
 177          union wait {
 178          
 179            int w_status;
 180            struct __nesc_unnamed4243 {
 181          
 182          
 183              unsigned int __w_termsig : 7;
 184              unsigned int __w_coredump : 1;
 185              unsigned int __w_retcode : 8;
 186              unsigned int  : 16;
 187            } 
 188          
 189          
 190          
 191          
 192          
 193          
 194            __wait_terminated;
 195            struct __nesc_unnamed4244 {
 196          
 197          
 198              unsigned int __w_stopval : 8;
 199              unsigned int __w_stopsig : 8;
 200              unsigned int  : 16;
 201            } 
 202          
 203          
 204          
 205          
 206          
 207            __wait_stopped;
 208          };
 209          //# 72 "/usr/include/stdlib.h" 3
 210          //#line 68
 211          typedef union __nesc_unnamed4245 {
 212          
 213            union wait *__uptr;
 214            int *__iptr;
 215          } __WAIT_STATUS /*__attribute((__transparent_union__))*/ ;
 216          //#line 102
 217          //#line 98
 218          typedef struct __nesc_unnamed4246 {
 219          
 220            int quot;
 221            int rem;
 222          } div_t;
 223          /*YYYYY } div_t*/
 224          
 225          
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 5   

 226          
 227          
 228          
 229          
 230          //#line 106
 231          typedef struct __nesc_unnamed4247 {
 232          
 233            long int quot;
 234            long int rem;
 235          } ldiv_t;
 236          /*YYYYY } ldiv_t*/
 237          
 238          
 239          
 240          
 241          
 242          
 243          /*__extension__*/ 
 244          
 245          
 246          
 247          //#line 118
 248          typedef struct __nesc_unnamed4248 {
 249          
 250          
 251                   float* quot;
 252                
 253          
 254                   float* rem;
 255                
 256          } lldiv_t;
 257          /*YYYYY } lldiv_t*///#line 158
 258          /*__extension__*/ 
 259          //#line 195
 260          /*__extension__*/ 
 261          
 262          
 263          
 264          
 265          /*__extension__*/ 
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          
 274          /*__extension__*/ 
 275          
 276          
 277          
 278          
 279          /*__extension__*/ 
 280          //#line 349
 281          struct random__data {
 282          
 283            int32_t *fptr;
 284            int32_t *rptr;
 285            int32_t *state;
 286            int rand_type;
 287            int rand_deg;
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 6   

 288            int rand_sep;
 289            int32_t *end_ptr;
 290          };
 291          //#line 418
 292          struct drand48__data {
 293          
 294            unsigned short int __x[3];
 295            unsigned short int __old_x[3];
 296            unsigned short int __c;
 297            unsigned short int __init;
 298            
 299                   float* __a;
 300                
 301          };
 302          //#line 742
 303          typedef int (*__compar_fn_t)(const void *arg_0x2ab98becc1f0, const void *arg_0x2ab98becc4c8);
 304          //#line 776
 305          /*__extension__*/ 
 306          //#line 793
 307          /*__extension__*/ 
 308          //# 24 "/opt/tinyos-2.x-contrib/diku/common/tos/system/tos.h"
 309          typedef uint8_t bool  ;
 310          enum __nesc_unnamed4249 {
 311          //#line 25
 312            FALSE = 0, TRUE = 1
 313          };
 314          
 315          
 316          
 317          
 318          
 319          
 320          
 321          
 322          
 323          typedef nx_int8_t nx_bool;
 324          
 325          
 326          
 327          
 328          
 329          
 330          /*struct __nesc_attr_atmostonce {
 331          };*/
 332          //#line 44
 333          /*struct __nesc_attr_atleastonce {
 334          };*/
 335          //#line 45
 336          /*struct __nesc_attr_exactlyonce {
 337          };*/
 338          //# 51 "/opt/tinyos-2.1.2/tos/types/TinyError.h"
 339          enum __nesc_unnamed4250 {
 340            SUCCESS = 0, 
 341            FAIL = 1, 
 342            ESIZE = 2, 
 343            ECANCEL = 3, 
 344            EOFF = 4, 
 345            EBUSY = 5, 
 346            EINVAL = 6, 
 347            ERETRY = 7, 
 348            ERESERVE = 8, 
 349            EALREADY = 9, 
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 7   

 350            ENOMEM = 10, 
 351            ENOACK = 11, 
 352            ELAST = 11
 353          };
 354          
 355          typedef uint8_t error_t  ;
 356          //# 160 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/io8051.h"
 357          sbit EA = 0xAF;
 358          //#line 194
 359          sbit P1_0 = 0x90;
 360          sbit P1_1 = 0x91;
 361          //# 67 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/ioCC2430.h"
 362          enum __nesc_unnamed4251 {
 363            CC2430_IEN0_EA = 0x7, 
 364            CC2430_IEN0_STIE = 0x5, 
 365            CC2430_IEN0_ENCIE = 0x4, 
 366            CC2430_IEN0_URX1IE = 0x3, 
 367            CC2430_IEN0_URX0IE = 0x2, 
 368            CC2430_IEN0_ADCIE = 0x1, 
 369            CC2430_IEN0_RFERRIE = 0x0
 370          };
 371          
 372          
 373          
 374          
 375          
 376          enum __nesc_unnamed4252 {
 377            CC2430_IEN2_WDTIE = 0x5, 
 378            CC2430_IEN2_P1IE = 0x4, 
 379            CC2430_IEN2_UTX1IE = 0x3, 
 380            CC2430_IEN2_UTX0IE = 0x2, 
 381            CC2430_IEN2_P2IE = 0x1, 
 382            CC2430_IEN2_RFIE = 0x0
 383          };
 384          
 385          
 386          
 387          
 388          
 389          enum __nesc_unnamed4253 {
 390            CC2430_IRCON_STIF = 0x7, 
 391            CC2430_IRCON_P0IF = 0x5, 
 392            CC2430_IRCON_T4IF = 0x4, 
 393            CC2430_IRCON_T3IF = 0x3, 
 394            CC2430_IRCON_T2IF = 0x2, 
 395            CC2430_IRCON_T1IF = 0x1, 
 396            CC2430_IRCON_DMAIF = 0x0
 397          };
 398          
 399          
 400          
 401          
 402          
 403          enum __nesc_unnamed4254 {
 404            CC2430_IRCON2_WDTIF = 0x4, 
 405            CC2430_IRCON2_P1IF = 0x3, 
 406            CC2430_IRCON2_UTX1IF = 0x2, 
 407            CC2430_IRCON2_UTX0IF = 0x1, 
 408            CC2430_IRCON2_P2IF = 0x0
 409          };
 410          
 411          
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 8   

 412          
 413          
 414          
 415          enum __nesc_unnamed4255 {
 416            CC2430_RFIM_RREG_PD = 0x7, 
 417            CC2430_RFIM_TXDONE = 0x6, 
 418            CC2430_RFIM_FIFOP = 0x5, 
 419            CC2430_RFIM_SFD = 0x4, 
 420            CC2430_RFIM_CCA = 0x3, 
 421            CC2430_RFIM_CSP_WT = 0x2, 
 422            CC2430_RFIM_CSP_STOP = 0x1, 
 423            CC2430_RFIM_CSP_INT = 0x0
 424          };
 425          
 426          
 427          
 428          
 429          
 430          enum __nesc_unnamed4256 {
 431            CC2430_RFIF_RREG_ON = 0x7, 
 432            CC2430_RFIF_TXDONE = 0x6, 
 433            CC2430_RFIF_FIFOP = 0x5, 
 434            CC2430_RFIF_SFD = 0x4, 
 435            CC2430_RFIF_CCA = 0x3, 
 436            CC2430_RFIF_CSP_WT = 0x2, 
 437            CC2430_RFIF_CSP_STOP = 0x1, 
 438            CC2430_RFIF_CSP_INT = 0x0
 439          };
 440          //#line 256
 441          sfr SLEEP = 0xBE;
 442          
 443          
 444          
 445          
 446          
 447          
 448          
 449          sfr CLKCON = 0xC6;
 450          //#line 352
 451          sfr P1_DIR = 0xFE;
 452          //#line 393
 453          //typedef uint16_t uint16_t xdata;
 454          //typedef uint8_t uint8_t xdata;
 455          
 456          //typedef uint16_t uint16_t code;
 457          //typedef uint8_t uint8_t code;
 458          //#line 479
 459          enum __nesc_unnamed4257 {
 460            CC2430_RFPWR_ADI_RADIO_PD = 0x4, 
 461            CC2430_RFPWR_RREG_RADIO_PD = 0x3, 
 462            CC2430_RFPWR_RREG_DELAY = 0x0, 
 463            CC2430_RFPWR_RREG_DELAY_MASK = 0x7
 464          };
 465          
 466          enum __nesc_unnamed4258 {
 467            CC2430_RREG_DELAY_0 = 0x0, 
 468            CC2430_RREG_DELAY_31 = 0x1, 
 469            CC2430_RREG_DELAY_63 = 0x2, 
 470            CC2430_RREG_DELAY_125 = 0x3, 
 471            CC2430_RREG_DELAY_250 = 0x4, 
 472            CC2430_RREG_DELAY_500 = 0x5, 
 473            CC2430_RREG_DELAY_1000 = 0x6, 
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 9   

 474            CC2430_RREG_DELAY_2000 = 0x7
 475          };
 476          
 477          enum __nesc_unnamed4259 {
 478            CC2430_MDMCTRL0L_AUTOCRC = 0x5, 
 479            CC2430_MDMCTRL0L_AUTOACK = 0x4
 480          };
 481          
 482          enum __nesc_unnamed4260 {
 483            CC2430_MDMCTRL0H_FRAME_FILT = 0x6, 
 484            CC2430_MDMCTRL0H_RESERVED_FRAME_MODE = 0x5, 
 485            CC2430_MDMCTRL0H_PAN_COORDINATOR = 0x4, 
 486            CC2430_MDMCTRL0H_ADDR_DECODE = 0x3, 
 487            CC2430_MDMCTRL0H_CCA_HYST = 0x0
 488          };
 489          
 490          enum __nesc_unnamed4261 {
 491            CC2430_RFSTATUS_TX_ACTIVE = 0x4, 
 492            CC2430_RFSTATUS_FIFO = 0x3, 
 493            CC2430_RFSTATUS_FIFOP = 0x2, 
 494            CC2430_RFSTATUS_SFD = 0x1, 
 495            CC2430_RFSTATUS_CCA = 0x0
 496          };
 497          //# 102 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
 498          typedef uint8_t __nesc_atomic_t;
 499          
 500          static   /*inline*/   void __nesc_disable_interrupt();
 501          static   /*inline*/   void __nesc_enable_interrupt();
 502          
 503            /*inline*/   __nesc_atomic_t __nesc_atomic_start(void )  ;
 504          
 505          
 506          
 507          
 508          
 509            /*inline*/   void __nesc_atomic_end(__nesc_atomic_t oldSreg)  ;
 510          //# 71 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/timer/CC2430Timer.h"
 511          enum __nesc_unnamed4262 {
 512            CC2430_SLEEP_OSC32K_CALDIS = 7, 
 513            CC2430_SLEEP_XOSC_STB = 6, 
 514            CC2430_SLEEP_HFRC_STB = 5, 
 515            CC2430_SLEEP_DIV = 3, 
 516            CC2430_SLEEP_OSC_PD = 2, 
 517            CC2430_SLEEP_MODE = 0, 
 518            CC2430_SLEEP_MODE_MASK = 3
 519          };
 520          
 521          enum __nesc_unnamed4263 {
 522            CC2430_SLEEP_POWERMODE_0 = 0, 
 523            CC2430_SLEEP_POWERMODE_1 = 1, 
 524            CC2430_SLEEP_POWERMODE_2 = 2, 
 525            CC2430_SLEEP_POWERMODE_3 = 3
 526          };
 527          
 528          enum __nesc_unnamed4264 {
 529            CC2430_CLKCON_OSC32K = 7, 
 530            CC2430_CLKCON_OSC = 6, 
 531            CC2430_CLKCON_TICKSPD = 3, 
 532            CC2430_CLKCON_CLKSPD = 0, 
 533            CC2430_CLKCON_TICKSPD_MASK = 0x38
 534          };
 535          
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 10  

 536          
 537          
 538          
 539          enum cc2430_tick_spd_t {
 540            CC2430_TICKF_DIV_1 = 0x0 << CC2430_CLKCON_TICKSPD, 
 541            CC2430_TICKF_DIV_2 = 0x1 << CC2430_CLKCON_TICKSPD, 
 542            CC2430_TICKF_DIV_4 = 0x2 << CC2430_CLKCON_TICKSPD, 
 543            CC2430_TICKF_DIV_8 = 0x3 << CC2430_CLKCON_TICKSPD, 
 544            CC2430_TICKF_DIV_16 = 0x4 << CC2430_CLKCON_TICKSPD, 
 545            CC2430_TICKF_DIV_32 = 0x5 << CC2430_CLKCON_TICKSPD, 
 546            CC2430_TICKF_DIV_64 = 0x6 << CC2430_CLKCON_TICKSPD, 
 547            CC2430_TICKF_DIV_128 = 0x7 << CC2430_CLKCON_TICKSPD
 548          };
 549          
 550          
 551          
 552          
 553          
 554          
 555          
 556          
 557          
 558          
 559          enum __nesc_unnamed4265 {
 560            CC2430_T1CTL_CH2IF = 0x7, 
 561            CC2430_T1CTL_CH1IF = 0x6, 
 562            CC2430_T1CTL_CH0IF = 0x5, 
 563            CC2430_T1CTL_OVFIF = 0x4, 
 564            CC2430_T1CTL_DIV = 0x2, 
 565            CC2430_T1CTL_MODE = 0x0, 
 566            CC2430_T1CTL_MODE_MASK = 0x3, 
 567            CC2430_T1CTL_DIV_MASK = 0xc, 
 568            CC2430_T1CTL_IF_MASK = 0xf0
 569          };
 570          
 571          
 572          
 573          
 574          
 575          
 576          enum cc2430_timer1_mode_t {
 577            CC2430_TIMER1_MODE_OFF = 0x0 << CC2430_T1CTL_MODE, 
 578            CC2430_TIMER1_MODE_FREE = 0x1 << CC2430_T1CTL_MODE, 
 579            CC2430_TIMER1_MODE_MODULO = 0x2 << CC2430_T1CTL_MODE, 
 580            CC2430_TIMER1_MODE_UPDOWN = 0x3 << CC2430_T1CTL_MODE
 581          };
 582          
 583          
 584          
 585          
 586          
 587          
 588          enum cc2430_timer1_if_t {
 589            CC2430_T1_CH2IF = 1 << CC2430_T1CTL_CH2IF, 
 590            CC2430_T1_CH1IF = 1 << CC2430_T1CTL_CH1IF, 
 591            CC2430_T1_CH0IF = 1 << CC2430_T1CTL_CH0IF, 
 592            CC2430_T1_OVFIF = 1 << CC2430_T1CTL_OVFIF
 593          };
 594          
 595          
 596          
 597          
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 11  

 598          
 599          enum cc2430_timer1_prescaler_t {
 600            CC2430_TIMER1_DIV_1 = 0x0 << CC2430_T1CTL_DIV, 
 601            CC2430_TIMER1_DIV_8 = 0x1 << CC2430_T1CTL_DIV, 
 602            CC2430_TIMER1_DIV_32 = 0x2 << CC2430_T1CTL_DIV, 
 603            CC2430_TIMER1_DIV_128 = 0x3 << CC2430_T1CTL_DIV
 604          };
 605          
 606          
 607          
 608          
 609          
 610          enum __nesc_unnamed4266 {
 611            CC2430_T1CCTLx_CPSEL = 0x7, 
 612            CC2430_T1CCTLx_IM = 0x6, 
 613            CC2430_T1CCTLx_CMP = 0x3, 
 614            CC2430_T1CCTLx_MODE = 0x2, 
 615            CC2430_T1CCTLx_CAP = 0x0
 616          };
 617          
 618          
 619          
 620          
 621          
 622          
 623          
 624          
 625          
 626          
 627          enum cc2430_timerMAC_mode_t {
 628            CC2430_TIMERMAC_MODE_IDLE = 0x0, 
 629            CC2430_TIMERMAC_MODE_RUN = 0x1
 630          };
 631          
 632          
 633          
 634          
 635          
 636          enum cc2430_timerMAC_T2CNF_t {
 637            CC2430_T2CNF_CMPIF = 0x7, 
 638            CC2430_T2CNF_PERIF = 0x6, 
 639            CC2430_T2CNF_OFCMPIF = 0x5, 
 640            CC2430_T2CNF_CMSEL = 0x3, 
 641            CC2430_T2CNF_SYNC = 0x1, 
 642            CC2430_T2CNF_RUN = 0x0
 643          };
 644          
 645          
 646          
 647          
 648          
 649          
 650          enum cc2430_timerMAC_T2PEROF2_t {
 651            CC2430_T2PEROF2_CMPIM = 0x7, 
 652            CC2430_T2PEROF2_PERIM = 0x6, 
 653            CC2430_T2PEROF2_OFCMPIM = 0x5
 654          };
 655          
 656          enum cc2430_timerMAC_if_t {
 657            CC2430_TMAC_CMPIF = 1 << CC2430_T2CNF_CMPIF, 
 658            CC2430_TMAC_PERIF = 1 << CC2430_T2CNF_PERIF, 
 659            CC2430_TMAC_OFCMPIF = 1 << CC2430_T2CNF_OFCMPIF
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 12  

 660          };
 661          
 662          enum cc2430_timerMAC_interval_t {
 663            CC2430_TIMERWDT_32768 = 0, 
 664            CC2430_TIMERWDT_8192 = 1, 
 665            CC2430_TIMERWDT_512 = 2, 
 666            CC2430_TIMERWDT_64 = 3
 667          };
 668          //#line 240
 669          enum __nesc_unnamed4267 {
 670            CC2430_TIMIF_OVFIM = 0x6
 671          };
 672          
 673          enum cc2430_timer34_if_t {
 674            CC2430_TIMIF_T4CH1IF = 0x5, 
 675            CC2430_TIMIF_T4CH0IF = 0x4, 
 676            CC2430_TIMIF_T4OVFIF = 0x3, 
 677            CC2430_TIMIF_T3CH1IF = 0x2, 
 678            CC2430_TIMIF_T3CH0IF = 0x1, 
 679            CC2430_TIMIF_T3OVFIF = 0x0
 680          };
 681          
 682          
 683          
 684          
 685          
 686          
 687          enum cc2430_timer3_4_mode_t {
 688            CC2430_TIMER3_4_MODE_FREE = 0x0, 
 689            CC2430_TIMER3_4_MODE_DOWN = 0x1, 
 690            CC2430_TIMER3_4_MODE_MODULO = 0x2, 
 691            CC2430_TIMER3_4_MODE_UPDOWN = 0x3
 692          };
 693          
 694          
 695          
 696          
 697          
 698          enum __nesc_unnamed4268 {
 699            CC2430_T34CTL_DIV = 0x5, 
 700            CC2430_T34CTL_START = 0x4, 
 701            CC2430_T34CTL_OVFIM = 0x3, 
 702            CC2430_T34CTL_WDTIF = 0x3, 
 703            CC2430_T34CTL_CLR = 0x2, 
 704            CC2430_T34CTL_MODE = 0x0, 
 705            CC2430_T34CTL_MODE_MASK = 0x3, 
 706            CC2430_T34CTL_DIV_MASK = 0xe0
 707          };
 708          
 709          
 710          
 711          
 712          
 713          enum cc2430_timer3_4_prescaler_t {
 714            CC2430_TIMER3_4_DIV_1 = 0x0 << CC2430_T34CTL_DIV, 
 715            CC2430_TIMER3_4_DIV_2 = 0x1 << CC2430_T34CTL_DIV, 
 716            CC2430_TIMER3_4_DIV_4 = 0x2 << CC2430_T34CTL_DIV, 
 717            CC2430_TIMER3_4_DIV_8 = 0x3 << CC2430_T34CTL_DIV, 
 718            CC2430_TIMER3_4_DIV_16 = 0x4 << CC2430_T34CTL_DIV, 
 719            CC2430_TIMER3_4_DIV_32 = 0x5 << CC2430_T34CTL_DIV, 
 720            CC2430_TIMER3_4_DIV_64 = 0x6 << CC2430_T34CTL_DIV, 
 721            CC2430_TIMER3_4_DIV_128 = 0x7 << CC2430_T34CTL_DIV
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 13  

 722          };
 723          
 724          
 725          
 726          
 727          
 728          
 729          
 730          
 731          
 732          
 733          enum __nesc_unnamed4269 {
 734            CC2430_WDCTL_CLR = 0x4, 
 735            CC2430_WDCTL_EN = 0x3, 
 736            CC2430_WDCTL_MODE = 0x2, 
 737            CC2430_WDCTL_INT = 0x0, 
 738            CC2430_WDCTL_INT_MASK = 0x3
 739          };
 740          
 741          enum cc2430_timerWDT_mode_t {
 742            CC2430_TIMERWDT_MODE_WDT = 0x0 << CC2430_WDCTL_MODE, 
 743            CC2430_TIMERWDT_MODE_TIMER = 0x1 << CC2430_WDCTL_MODE
 744          };
 745          //# 42 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/Timer.h"
 746          typedef uint8_t TMilli;
 747          typedef uint8_t T32khz;
 748          typedef uint8_t TMicro;
 749          //# 43 "/opt/tinyos-2.1.2/tos/types/Leds.h"
 750          enum __nesc_unnamed4270 {
 751            LEDS_LED0 = 1 << 0, 
 752            LEDS_LED1 = 1 << 1, 
 753            LEDS_LED2 = 1 << 2, 
 754            LEDS_LED3 = 1 << 3, 
 755            LEDS_LED4 = 1 << 4, 
 756            LEDS_LED5 = 1 << 5, 
 757            LEDS_LED6 = 1 << 6, 
 758            LEDS_LED7 = 1 << 7
 759          };
 760          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 761          static error_t PlatformP__Init__init(void );
 762          //#line 62
 763          static error_t RealMainP__SoftwareInit__default__init(void );
 764          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 765          static error_t SchedulerBasicP__TaskBasic__postTask(
 766          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 767          uint8_t arg_0x2ab98bf953c8);
 768          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 769          static void SchedulerBasicP__TaskBasic__default__runTask(
 770          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 771          uint8_t arg_0x2ab98bf953c8);
 772          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
 773          static void SchedulerBasicP__Scheduler__init(void );
 774          //#line 72
 775          static void SchedulerBasicP__Scheduler__taskLoop(void );
 776          //#line 65
 777          static bool SchedulerBasicP__Scheduler__runNextTask(void );
 778          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
 779          static void McuSleepC__McuSleep__sleep(void );
 780          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
 781          static void TestLedPinC__Boot__booted(void );
 782          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 783          static void TestLedPinC__lighton__runTask(void );
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 14  

 784          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 785          static error_t LedsP__Init__init(void );
 786          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
 787          static void LedsP__Leds__led1On(void );
 788          //#line 56
 789          static void LedsP__Leds__led0On(void );
 790          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
 791          static void HplMcs51GeneralIOC__P11__makeOutput(void );
 792          //#line 40
 793          static void HplMcs51GeneralIOC__P11__set(void );
 794          static void HplMcs51GeneralIOC__P11__clr(void );
 795          
 796          
 797          
 798          
 799          static void HplMcs51GeneralIOC__P10__makeOutput(void );
 800          //#line 40
 801          static void HplMcs51GeneralIOC__P10__set(void );
 802          static void HplMcs51GeneralIOC__P10__clr(void );
 803          
 804          
 805          
 806          
 807          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
 808          //#line 40
 809          static void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
 810          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 811          static error_t PlatformP__LedsInit__init(void );
 812          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
 813          static  /*inline*/  error_t PlatformP__Init__init(void );
 814          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 815          static error_t RealMainP__SoftwareInit__init(void );
 816          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
 817          static void RealMainP__Boot__booted(void );
 818          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
 819          static error_t RealMainP__PlatformInit__init(void );
 820          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
 821          static void RealMainP__Scheduler__init(void );
 822          //#line 72
 823          static void RealMainP__Scheduler__taskLoop(void );
 824          //#line 65
 825          static bool RealMainP__Scheduler__runNextTask(void );
 826          //# 63 "/opt/tinyos-2.1.2/tos/system/RealMainP.nc"
 827          int main(void )   ;
 828          //#line 105
 829          static  /*inline*/  error_t RealMainP__SoftwareInit__default__init(void );
 830          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 831          static void SchedulerBasicP__TaskBasic__runTask(
 832          //# 56 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 833          uint8_t arg_0x2ab98bf953c8);
 834          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
 835          static void SchedulerBasicP__McuSleep__sleep(void );
 836          //# 61 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 837          enum SchedulerBasicP____nesc_unnamed4271 {
 838          
 839            SchedulerBasicP__NUM_TASKS = 1U, 
 840            SchedulerBasicP__NO_TASK = 255
 841          };
 842          
 843          uint8_t SchedulerBasicP__m_head;
 844          uint8_t SchedulerBasicP__m_tail;
 845          uint8_t SchedulerBasicP__m_next[SchedulerBasicP__NUM_TASKS];
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 15  

 846          
 847          
 848          
 849          
 850          
 851          
 852          
 853          
 854          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void );
 855          //#line 97
 856          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id);
 857          
 858          
 859          
 860          
 861          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id);
 862          //#line 124
 863          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void );
 864          
 865          
 866          
 867          
 868          
 869          
 870          
 871          
 872          
 873          static bool SchedulerBasicP__Scheduler__runNextTask(void );
 874          //#line 149
 875          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void );
 876          //#line 170
 877          static  /*inline*/  error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id);
 878          
 879          
 880          
 881          
 882          static  /*inline*/  void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id);
 883          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
 884          static  /*inline*/  void McuSleepC__McuSleep__sleep(void );
 885          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
 886          static error_t TestLedPinC__lighton__postTask(void );
 887          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
 888          static void TestLedPinC__Leds__led1On(void );
 889          //#line 56
 890          static void TestLedPinC__Leds__led0On(void );
 891          //# 14 "TestLedPinC.nc"
 892          enum TestLedPinC____nesc_unnamed4272 {
 893          //#line 14
 894            TestLedPinC__lighton = 0U
 895          };
 896          //#line 14
 897          typedef int TestLedPinC____nesc_sillytask_lighton[];
 898          static  /*inline*/  void TestLedPinC__Boot__booted(void );
 899          
 900          
 901          
 902          
 903          
 904          
 905          
 906          
 907          static  /*inline*/  void TestLedPinC__lighton__runTask(void );
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 16  

 908          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
 909          static void LedsP__Led0__makeOutput(void );
 910          //#line 40
 911          static void LedsP__Led0__set(void );
 912          static void LedsP__Led0__clr(void );
 913          
 914          
 915          
 916          
 917          static void LedsP__Led1__makeOutput(void );
 918          //#line 40
 919          static void LedsP__Led1__set(void );
 920          static void LedsP__Led1__clr(void );
 921          
 922          
 923          
 924          
 925          static void LedsP__Led2__makeOutput(void );
 926          //#line 40
 927          static void LedsP__Led2__set(void );
 928          //# 56 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
 929          static  /*inline*/  error_t LedsP__Init__init(void );
 930          //#line 74
 931          static  /*inline*/  void LedsP__Leds__led0On(void );
 932          //#line 89
 933          static  /*inline*/  void LedsP__Leds__led1On(void );
 934          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
 935          static   /*inline*/   void HplMcs51GeneralIOC__P10__set(void );
 936          //#line 92
 937          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void );
 938          //#line 92
 939          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void );
 940          static   /*inline*/   void HplMcs51GeneralIOC__P11__set(void );
 941          //#line 93
 942          static   /*inline*/   void HplMcs51GeneralIOC__P11__clr(void );
 943          //#line 93
 944          static   /*inline*/   void HplMcs51GeneralIOC__P11__makeOutput(void );
 945          //# 23 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
 946          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void );
 947          
 948          
 949          
 950          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void );
 951          //# 107 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
 952            /*inline*/    __nesc_atomic_t __nesc_atomic_start(void )
 953          //#line 107
 954          {
 955   1        __nesc_atomic_t tmp = EA;
 956   1      
 957   1      //#line 109
 958   1        EA = 0;
 959   1        return tmp;
 960   1      }
 961          
 962            /*inline*/    void __nesc_atomic_end(__nesc_atomic_t oldSreg)
 963          //#line 113
 964          {
 965   1        EA = oldSreg;
 966   1      }
 967          
 968          //# 124 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
 969          static  /*inline*/  void SchedulerBasicP__Scheduler__init(void )
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 17  

 970          {
 971   1        /* atomic removed: atomic calls only */
 972   1        {
 973   2          memset((void *)SchedulerBasicP__m_next, SchedulerBasicP__NO_TASK, sizeof SchedulerBasicP__m_next);
 974   2          SchedulerBasicP__m_head = SchedulerBasicP__NO_TASK;
 975   2          SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
 976   2        }
 977   1      }
 978          
 979          //# 57 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
 980           /*inline*/  static void RealMainP__Scheduler__init(void ){
 981   1      //#line 57
 982   1        SchedulerBasicP__Scheduler__init();
 983   1      //#line 57
 984   1      }
 985          //#line 57
 986          //# 23 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
 987          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set(void )
 988          //#line 23
 989          {
 990   1      }
 991          
 992          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
 993           /*inline*/  static void LedsP__Led2__set(void ){
 994   1      //#line 40
 995   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__set();
 996   1      //#line 40
 997   1      }
 998          //#line 40
 999          //# 93 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1000          static   /*inline*/   void HplMcs51GeneralIOC__P11__set(void )
1001          //#line 93
1002          {
1003   1      //#line 93
1004   1        P1_1 = 1;
1005   1      }
1006          
1007          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1008           /*inline*/  static void LedsP__Led1__set(void ){
1009   1      //#line 40
1010   1        HplMcs51GeneralIOC__P11__set();
1011   1      //#line 40
1012   1      }
1013          //#line 40
1014          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1015          static   /*inline*/   void HplMcs51GeneralIOC__P10__set(void )
1016          //#line 92
1017          {
1018   1      //#line 92
1019   1        P1_0 = 1;
1020   1      }
1021          
1022          //# 40 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1023           /*inline*/  static void LedsP__Led0__set(void ){
1024   1      //#line 40
1025   1        HplMcs51GeneralIOC__P10__set();
1026   1      //#line 40
1027   1      }
1028          //#line 40
1029          //# 27 "/opt/tinyos-2.1.2/tos/system/NoPinC.nc"
1030          static  /*inline*/  void /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput(void )
1031          //#line 27
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 18  

1032          {
1033   1      }
1034          
1035          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1036           /*inline*/  static void LedsP__Led2__makeOutput(void ){
1037   1      //#line 46
1038   1        /*PlatformLedsC.NoPinC*/NoPinC__0__GeneralIO__makeOutput();
1039   1      //#line 46
1040   1      }
1041          //#line 46
1042          //# 93 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1043          static   /*inline*/   void HplMcs51GeneralIOC__P11__makeOutput(void )
1044          //#line 93
1045          {
1046   1      //#line 93
1047   1        P1_DIR |= 1 << 1;
1048   1      }
1049          
1050          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1051           /*inline*/  static void LedsP__Led1__makeOutput(void ){
1052   1      //#line 46
1053   1        HplMcs51GeneralIOC__P11__makeOutput();
1054   1      //#line 46
1055   1      }
1056          //#line 46
1057          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1058          static   /*inline*/   void HplMcs51GeneralIOC__P10__makeOutput(void )
1059          //#line 92
1060          {
1061   1      //#line 92
1062   1        P1_DIR |= 1 << 0;
1063   1      }
1064          
1065          //# 46 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1066           /*inline*/  static void LedsP__Led0__makeOutput(void ){
1067   1      //#line 46
1068   1        HplMcs51GeneralIOC__P10__makeOutput();
1069   1      //#line 46
1070   1      }
1071          //#line 46
1072          //# 56 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
1073          static  /*inline*/  error_t LedsP__Init__init(void )
1074          //#line 56
1075          {
1076   1        /* atomic removed: atomic calls only */
1077   1      //#line 57
1078   1        {
1079   2          ;
1080   2          LedsP__Led0__makeOutput();
1081   2          LedsP__Led1__makeOutput();
1082   2          LedsP__Led2__makeOutput();
1083   2          LedsP__Led0__set();
1084   2          LedsP__Led1__set();
1085   2          LedsP__Led2__set();
1086   2        }
1087   1        return SUCCESS;
1088   1      }
1089          
1090          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1091           /*inline*/  static error_t PlatformP__LedsInit__init(void ){
1092   1      //#line 62
1093   1        unsigned char __nesc_result;
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 19  

1094   1      //#line 62
1095   1      
1096   1      //#line 62
1097   1        __nesc_result = LedsP__Init__init();
1098   1      //#line 62
1099   1      
1100   1      //#line 62
1101   1        return __nesc_result;
1102   1      //#line 62
1103   1      }
1104          //#line 62
1105          //# 48 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/platforms/cc2430em/PlatformP.nc"
1106          static  /*inline*/  error_t PlatformP__Init__init(void )
1107          //#line 48
1108          {
1109   1        uint8_t new_clkcon;
1110   1      
1111   1      //#line 88
1112   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
1113   1      
1114   1      
1115   1      
1116   1        SLEEP &= ~(1 << CC2430_SLEEP_OSC_PD);
1117   1        while (!(SLEEP & (1 << CC2430_SLEEP_XOSC_STB))) ;
1118   1      
1119   1        new_clkcon = 0x0;
1120   1      
1121   1        new_clkcon = (new_clkcon & ~CC2430_CLKCON_TICKSPD_MASK) | CC2430_TICKF_DIV_1;
1122   1      
1123   1      
1124   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC32K);
1125   1      
1126   1      
1127   1      
1128   1      
1129   1      
1130   1      
1131   1        new_clkcon &= ~(1 << CC2430_CLKCON_OSC);
1132   1      
1133   1        new_clkcon |= 1 << CC2430_CLKCON_TICKSPD;
1134   1      
1135   1        CLKCON = new_clkcon;
1136   1      //#line 137
1137   1        PlatformP__LedsInit__init();
1138   1        return SUCCESS;
1139   1      }
1140          
1141          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1142           /*inline*/  static error_t RealMainP__PlatformInit__init(void ){
1143   1      //#line 62
1144   1        unsigned char __nesc_result;
1145   1      //#line 62
1146   1      
1147   1      //#line 62
1148   1        __nesc_result = PlatformP__Init__init();
1149   1      //#line 62
1150   1      
1151   1      //#line 62
1152   1        return __nesc_result;
1153   1      //#line 62
1154   1      }
1155          //#line 62
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 20  

1156          //# 65 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
1157           /*inline*/  static bool RealMainP__Scheduler__runNextTask(void ){
1158   1      //#line 65
1159   1        unsigned char __nesc_result;
1160   1      //#line 65
1161   1      
1162   1      //#line 65
1163   1        __nesc_result = SchedulerBasicP__Scheduler__runNextTask();
1164   1      //#line 65
1165   1      
1166   1      //#line 65
1167   1        return __nesc_result;
1168   1      //#line 65
1169   1      }
1170          //#line 65
1171          //# 105 "/opt/tinyos-2.1.2/tos/system/RealMainP.nc"
1172          static  /*inline*/  error_t RealMainP__SoftwareInit__default__init(void )
1173          //#line 105
1174          {
1175   1      //#line 105
1176   1        return SUCCESS;
1177   1      }
1178          
1179          //# 62 "/opt/tinyos-2.1.2/tos/interfaces/Init.nc"
1180           /*inline*/  static error_t RealMainP__SoftwareInit__init(void ){
1181   1      //#line 62
1182   1        unsigned char __nesc_result;
1183   1      //#line 62
1184   1      
1185   1      //#line 62
1186   1        __nesc_result = RealMainP__SoftwareInit__default__init();
1187   1      //#line 62
1188   1      
1189   1      //#line 62
1190   1        return __nesc_result;
1191   1      //#line 62
1192   1      }
1193          //#line 62
1194          //# 97 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1195          static  /*inline*/  bool SchedulerBasicP__isWaiting(uint8_t id)
1196          {
1197   1        return SchedulerBasicP__m_next[id] != SchedulerBasicP__NO_TASK || SchedulerBasicP__m_tail == id;
1198   1      }
1199          
1200          static  /*inline*/  bool SchedulerBasicP__pushTask(uint8_t id)
1201          {
1202   1        if (!SchedulerBasicP__isWaiting(id)) 
1203   1          {
1204   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
1205   2              {
1206   3                SchedulerBasicP__m_head = id;
1207   3                SchedulerBasicP__m_tail = id;
1208   3              }
1209   2            else 
1210   2              {
1211   3                SchedulerBasicP__m_next[SchedulerBasicP__m_tail] = id;
1212   3                SchedulerBasicP__m_tail = id;
1213   3              }
1214   2            return TRUE;
1215   2          }
1216   1        else 
1217   1          {
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 21  

1218   2            return FALSE;
1219   2          }
1220   1      }
1221          
1222          //#line 170
1223          static  /*inline*/  error_t SchedulerBasicP__TaskBasic__postTask(uint8_t id)
1224          {
1225   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1226   2      //#line 172
1227   2          {
1228   3      //#line 172
1229   3            {
1230   4              unsigned char __nesc_temp = 
1231   4      //#line 172
1232   4              SchedulerBasicP__pushTask(id) ? SUCCESS : EBUSY;
1233   4      
1234   4              {
1235   5      //#line 172
1236   5                __nesc_atomic_end(__nesc_atomic); 
1237   5      //#line 172
1238   5                return __nesc_temp;
1239   5              }
1240   4            }
1241   3          }
1242   2      //#line 175
1243   2          __nesc_atomic_end(__nesc_atomic); }
1244   1      }
1245          
1246          //# 67 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1247           /*inline*/  static error_t TestLedPinC__lighton__postTask(void ){
1248   1      //#line 67
1249   1        unsigned char __nesc_result;
1250   1      //#line 67
1251   1      
1252   1      //#line 67
1253   1        __nesc_result = SchedulerBasicP__TaskBasic__postTask(TestLedPinC__lighton);
1254   1      //#line 67
1255   1      
1256   1      //#line 67
1257   1        return __nesc_result;
1258   1      //#line 67
1259   1      }
1260          //#line 67
1261          //# 15 "TestLedPinC.nc"
1262          static  /*inline*/  void TestLedPinC__Boot__booted(void )
1263          //#line 15
1264          {
1265   1      
1266   1      
1267   1      
1268   1      
1269   1        TestLedPinC__lighton__postTask();
1270   1      }
1271          
1272          //# 60 "/opt/tinyos-2.1.2/tos/interfaces/Boot.nc"
1273           /*inline*/  static void RealMainP__Boot__booted(void ){
1274   1      //#line 60
1275   1        TestLedPinC__Boot__booted();
1276   1      //#line 60
1277   1      }
1278          //#line 60
1279          //# 93 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 22  

1280          static   /*inline*/   void HplMcs51GeneralIOC__P11__clr(void )
1281          //#line 93
1282          {
1283   1      //#line 93
1284   1        P1_1 = 0;
1285   1      }
1286          
1287          //# 41 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1288           /*inline*/  static void LedsP__Led1__clr(void ){
1289   1      //#line 41
1290   1        HplMcs51GeneralIOC__P11__clr();
1291   1      //#line 41
1292   1      }
1293          //#line 41
1294          //# 89 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
1295          static  /*inline*/  void LedsP__Leds__led1On(void )
1296          //#line 89
1297          {
1298   1        LedsP__Led1__clr();
1299   1        ;
1300   1      //#line 91
1301   1        ;
1302   1      }
1303          
1304          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
1305           /*inline*/  static void TestLedPinC__Leds__led1On(void ){
1306   1      //#line 72
1307   1        LedsP__Leds__led1On();
1308   1      //#line 72
1309   1      }
1310          //#line 72
1311          //# 92 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/pins/HplMcs51GeneralIOC.nc"
1312          static   /*inline*/   void HplMcs51GeneralIOC__P10__clr(void )
1313          //#line 92
1314          {
1315   1      //#line 92
1316   1        P1_0 = 0;
1317   1      }
1318          
1319          //# 41 "/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc"
1320           /*inline*/  static void LedsP__Led0__clr(void ){
1321   1      //#line 41
1322   1        HplMcs51GeneralIOC__P10__clr();
1323   1      //#line 41
1324   1      }
1325          //#line 41
1326          //# 74 "/opt/tinyos-2.1.2/tos/system/LedsP.nc"
1327          static  /*inline*/  void LedsP__Leds__led0On(void )
1328          //#line 74
1329          {
1330   1        LedsP__Led0__clr();
1331   1        ;
1332   1      //#line 76
1333   1        ;
1334   1      }
1335          
1336          //# 56 "/opt/tinyos-2.1.2/tos/interfaces/Leds.nc"
1337           /*inline*/  static void TestLedPinC__Leds__led0On(void ){
1338   1      //#line 56
1339   1        LedsP__Leds__led0On();
1340   1      //#line 56
1341   1      }
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 23  

1342          //#line 56
1343          //# 24 "TestLedPinC.nc"
1344          static  /*inline*/  void TestLedPinC__lighton__runTask(void )
1345          //#line 24
1346          {
1347   1        TestLedPinC__Leds__led0On();
1348   1        TestLedPinC__Leds__led1On();
1349   1      }
1350          
1351          //# 175 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1352          static  /*inline*/  void SchedulerBasicP__TaskBasic__default__runTask(uint8_t id)
1353          {
1354   1      }
*** WARNING C280 IN LINE 1352 OF APP.C: 'id': unreferenced local variable
1355          
1356          //# 75 "/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc"
1357           /*inline*/  static void SchedulerBasicP__TaskBasic__runTask(uint8_t arg_0x2ab98bf953c8){
1358   1      //#line 75
1359   1        switch (arg_0x2ab98bf953c8) {
1360   2      //#line 75
1361   2          case TestLedPinC__lighton:
1362   2      //#line 75
1363   2            TestLedPinC__lighton__runTask();
1364   2      //#line 75
1365   2            break;
1366   2      //#line 75
1367   2          default:
1368   2      //#line 75
1369   2            SchedulerBasicP__TaskBasic__default__runTask(arg_0x2ab98bf953c8);
1370   2      //#line 75
1371   2            break;
1372   2      //#line 75
1373   2          }
1374   1      //#line 75
1375   1      }
1376          //#line 75
1377          //# 104 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/mcs51/mcs51hardware.h"
1378          static   /*inline*/   void __nesc_disable_interrupt()
1379          //#line 104
1380          {
1381   1      //#line 104
1382   1        EA = 0;
1383   1      }
1384          
1385          //#line 105
1386          static   /*inline*/   void __nesc_enable_interrupt()
1387          //#line 105
1388          {
1389   1      //#line 105
1390   1        EA = 1;
1391   1      }
1392          
1393          //# 51 "/opt/tinyos-2.x-contrib/diku/mcs51/tos/chips/cc2430/McuSleepC.nc"
1394          static  /*inline*/  void McuSleepC__McuSleep__sleep(void )
1395          //#line 51
1396          {
1397   1      
1398   1        __nesc_enable_interrupt();
1399   1      
1400   1      
1401   1      
1402   1      
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 24  

1403   1      
1404   1      
1405   1        SLEEP = (SLEEP & ~CC2430_SLEEP_MODE_MASK) | CC2430_SLEEP_POWERMODE_0;
1406   1      
1407   1        __nesc_disable_interrupt();
1408   1      }
1409          
1410          //# 76 "/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc"
1411           /*inline*/  static void SchedulerBasicP__McuSleep__sleep(void ){
1412   1      //#line 76
1413   1        McuSleepC__McuSleep__sleep();
1414   1      //#line 76
1415   1      }
1416          //#line 76
1417          //# 78 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1418          static   /*inline*/   uint8_t SchedulerBasicP__popTask(void )
1419          {
1420   1        if (SchedulerBasicP__m_head != SchedulerBasicP__NO_TASK) 
1421   1          {
1422   2            uint8_t id = SchedulerBasicP__m_head;
1423   2      
1424   2      //#line 83
1425   2            SchedulerBasicP__m_head = SchedulerBasicP__m_next[SchedulerBasicP__m_head];
1426   2            if (SchedulerBasicP__m_head == SchedulerBasicP__NO_TASK) 
1427   2              {
1428   3                SchedulerBasicP__m_tail = SchedulerBasicP__NO_TASK;
1429   3              }
1430   2            SchedulerBasicP__m_next[id] = SchedulerBasicP__NO_TASK;
1431   2            return id;
1432   2          }
1433   1        else 
1434   1          {
1435   2            return SchedulerBasicP__NO_TASK;
1436   2          }
1437   1      }
1438          
1439          //#line 149
1440          static  /*inline*/  void SchedulerBasicP__Scheduler__taskLoop(void )
1441          {
1442   1        for (; ; ) 
1443   1          {
1444   2            uint8_t nextTask;
1445   2      
1446   2            { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1447   3              {
1448   4                while ((nextTask = SchedulerBasicP__popTask()) == SchedulerBasicP__NO_TASK) 
1449   4                  {
1450   5                    SchedulerBasicP__McuSleep__sleep();
1451   5                  }
1452   4              }
1453   3      //#line 161
1454   3              __nesc_atomic_end(__nesc_atomic); }
1455   2            SchedulerBasicP__TaskBasic__runTask(nextTask);
1456   2          }
1457   1      }
1458          
1459          //# 72 "/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc"
1460           /*inline*/  static void RealMainP__Scheduler__taskLoop(void ){
1461   1      //#line 72
1462   1        SchedulerBasicP__Scheduler__taskLoop();
1463   1      //#line 72
1464   1      }
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 25  

1465          //#line 72
1466          //# 63 "/opt/tinyos-2.1.2/tos/system/RealMainP.nc"
1467            int main(void )
1468          //#line 63
1469          {
1470   1        { __nesc_atomic_t __nesc_atomic = __nesc_atomic_start();
1471   2          {
1472   3      
1473   3      
1474   3      
1475   3      
1476   3      
1477   3            {
1478   4            }
1479   3      //#line 71
1480   3            ;
1481   3      
1482   3            RealMainP__Scheduler__init();
1483   3      
1484   3      
1485   3      
1486   3      
1487   3      
1488   3            RealMainP__PlatformInit__init();
1489   3            while (RealMainP__Scheduler__runNextTask()) ;
1490   3      
1491   3      
1492   3      
1493   3      
1494   3      
1495   3            RealMainP__SoftwareInit__init();
1496   3            while (RealMainP__Scheduler__runNextTask()) ;
1497   3          }
1498   2      //#line 88
1499   2          __nesc_atomic_end(__nesc_atomic); }
1500   1      
1501   1      
1502   1        __nesc_enable_interrupt();
1503   1      
1504   1        RealMainP__Boot__booted();
1505   1      
1506   1      
1507   1        RealMainP__Scheduler__taskLoop();
1508   1      
1509   1      
1510   1      
1511   1      
1512   1        return -1;
1513   1      }
1514          
1515          //# 134 "/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc"
1516          static bool SchedulerBasicP__Scheduler__runNextTask(void )
1517          {
1518   1        uint8_t nextTask;
1519   1      
1520   1        /* atomic removed: atomic calls only */
1521   1      //#line 138
1522   1        {
1523   2          nextTask = SchedulerBasicP__popTask();
1524   2          if (nextTask == SchedulerBasicP__NO_TASK) 
1525   2            {
1526   3              {
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 26  

1527   4                unsigned char __nesc_temp = 
1528   4      //#line 142
1529   4                FALSE;
1530   4      
1531   4      //#line 142
1532   4                return __nesc_temp;
1533   4              }
1534   3            }
1535   2        }
1536   1      //#line 145
1537   1        SchedulerBasicP__TaskBasic__runTask(nextTask);
1538   1        return TRUE;
1539   1      }
1540          
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 27  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
TestLedPinC__lighton__postTask . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
__nesc_nxbase_nx_int32_t . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_TICKF_DIV_8 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
error_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ESIZE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_int16_t . . . . . . .  TYPEDEF  -----  INT      -----  2
SchedulerBasicP__popTask . . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
cc2430_timer34_if_t. . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_IRCON2_UTX0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_least32_t. . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_IRCON2_UTX1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_ENCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4250 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_DIV_32 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4260 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4251 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
EA . . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
ldiv_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
__nesc_unnamed4242 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
int_least16_t. . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__nesc_unnamed4270 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMER3_4_MODE_FREE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4261 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4252 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4243 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  __w_termsig. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  7.0
  __w_coredump . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  1.7
  __w_retcode. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.8
  *gap*. . . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0002H  16.0
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_TIMER3_4_DIV_16 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4262 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFSTATUS_FIFOP. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4253 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4244 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  __w_stopval. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.0
  __w_stopsig. . . . . . . . . . . . .  MEMBER   -----  FIELD    0000H  8.8
  *gap*. . . . . . . . . . . . . . . .  MEMBER   -----  FIELD    0002H  16.0
T32khz . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
cc2430_timerMAC_interval_t . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4263 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFIM_CCA. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4254 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4245 . . . . . . . . . .  * TAG *  -----  UNION    -----  3
  __uptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  __iptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__nesc_unnamed4264 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4255 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 28  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


EBUSY. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4246 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
LedsP__Leds__led0On. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_64 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4265 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_enable_interrupt. . . . . . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4256 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4247 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
LedsP__Leds__led1On. . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_INT_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4266 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4257 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4248 . . . . . . . . . .  * TAG *  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
__nesc_unnamed4267 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1CCTLx_CAP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4258 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
__nesc_unnamed4249 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
TestLedPinC__lighton__runTask. . . . .  STATIC   CODE   PROC     0000H  -----
__nesc_unnamed4268 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERMAC_MODE_IDLE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_unnamed4259 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_fast32_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
__nesc_unnamed4269 . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFIF_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LEDS_LED0. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_MODE_TIMER . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_OVFIM . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_fast16_t. . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
SchedulerBasicP__Scheduler__runNextTask STATIC   CODE   PROC     0000H  -----
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
  nextTask . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LEDS_LED1. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T3OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_32768. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
LEDS_LED2. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4OVFIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_CLKSPD . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
LEDS_LED3. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_OVFIF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_CCA_HYST. . . . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__runNextTask. . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
LEDS_LED4. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_CLR. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__gwchar_t . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
LEDS_LED5. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__m_tail. . . . . . . .  PUBLIC   XDATA  U_CHAR   0000H  1
LEDS_LED6. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 29  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_T34CTL_DIV. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_XOSC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_TXDONE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LEDS_LED7. . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint32_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
nx_uint8_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
CC2430_RFIF_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_fast32_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
CC2430_T1CCTLx_CMP . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_IF_MASK . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
div_t. . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  4
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0002H  2
nxle_uint16_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
int_fast16_t . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
__nesc_nxbase_nxle_uint8_t . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
SchedulerBasicP__McuSleep__sleep . . .  STATIC   CODE   PROC     0000H  -----
SUCCESS. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint64_t. . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
CC2430_TIMER3_4_MODE_DOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_tick_spd_t. . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_RREG_RADIO_PD . . . . . .  E_CONST  -----  U_CHAR   -----  1
FAIL . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMERWDT_512. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_FRAME_FILT. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_SFD. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_P0IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_MODULO. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_WDTIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_atomic_t. . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
EOFF . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int32_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
nx_int8_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
CC2430_T1CTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int16_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
SchedulerBasicP____nesc_unnamed4271. .  * TAG *  -----  ENUM     -----  -----
CC2430_T34CTL_DIV_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timer1_mode_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_IRCON_T1IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_WDCTL_EN. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T2IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_EA . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int8_t. . . . . . .  TYPEDEF  -----  CHAR     -----  1
CC2430_TIMER1_DIV_128. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_T3IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int64_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
McuSleepC__McuSleep__sleep . . . . . .  STATIC   CODE   PROC     0000H  -----
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 30  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_IRCON_T4IF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Init__init. . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
RealMainP__SoftwareInit__default__init  STATIC   CODE   PROC     0000H  -----
CC2430_RFPWR_RREG_DELAY. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TMAC_CMPIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_MODE_OFF . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_500. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__m_next. . . . . . . .  PUBLIC   XDATA  ARRAY    0001H  1
CC2430_MDMCTRL0H_PAN_COORDINATOR . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_250. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
NoPinC__0__GeneralIO__makeOutput . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_MODE_UPDOWN. . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_125. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_32. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
bool . . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T2CNF_SYNC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TMAC_PERIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_16. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0L_AUTOACK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CCTLx_CPSEL . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P1IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_RFERRIE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_P2IE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_64. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOACK . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_OSC. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_CSP_WT . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_OVFIM. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__postTask.  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
  __nesc_temp. . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_MODE_MODULO. . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFPWR_RREG_DELAY_MASK . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_OSC32K_CALDIS . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_FIFO . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_FIFOP. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wait . . . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  4
  w_status . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  __wait_terminated. . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
  __wait_stopped . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  4
SchedulerBasicP__Scheduler__init . . .  STATIC   CODE   PROC     0000H  -----
CC2430_WDCTL_MODE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0L_AUTOCRC . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HplMcs51GeneralIOC__P10__makeOutput. .  STATIC   CODE   PROC     0000H  -----
cc2430_timer3_4_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_RFPWR_ADI_RADIO_PD. . . . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__Scheduler__init . . . . . .  STATIC   CODE   PROC     0000H  -----
HplMcs51GeneralIOC__P11__makeOutput. .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER1_DIV_1. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_128. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CLKCON . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 31  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


__WAIT_STATUS. . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  3
  __uptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  __iptr . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
TestLedPinC__Boot__booted. . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TMAC_OFCMPIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2PEROF2_CMPIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_MODE_MASK . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
P1_DIR . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FEH  1
CC2430_IRCON2_WDTIF. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
EINVAL . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TRUE . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_START. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_8. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER3_4_MODE_UPDOWN. . . . . .  E_CONST  -----  U_CHAR   -----  1
ENOMEM . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__runTask .  STATIC   CODE   PROC     0000H  -----
  arg_0x2ab98bf953c8 . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
NoPinC__0__GeneralIO__set. . . . . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer1_prescaler_t. . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_MDMCTRL0H_ADDR_DECODE . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_0. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint32_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
cc2430_timerMAC_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
HplMcs51GeneralIOC__P10__clr . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_IRCON_STIF. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint16_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
HplMcs51GeneralIOC__P11__clr . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T1CTL_CH0IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2PEROF2_PERIM. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_CH1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_RFIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint32_t. . . . . .  TYPEDEF  -----  U_LONG   -----  4
__nesc_nxbase_nx_uint8_t . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
ptrdiff_t. . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
CC2430_T1CTL_CH2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_uint64_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
EALREADY . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_uint16_t. . . . . .  TYPEDEF  -----  U_INT    -----  2
imaxdiv_t. . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0004H  4
cc2430_timer1_if_t . . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
uint_least8_t. . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
SchedulerBasicP__NO_TASK . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TMilli . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_T1CCTLx_IM. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int32_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
__compar_fn_t. . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_RFIM_CSP_STOP . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int16_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  2
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 32  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


_SchedulerBasicP__isWaiting. . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
HplMcs51GeneralIOC__P10__set . . . . .  STATIC   CODE   PROC     0000H  -----
TMicro . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMER3_4_DIV_1. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
HplMcs51GeneralIOC__P11__set . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_2. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P1IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int32_t . . . . . .  TYPEDEF  -----  LONG     -----  4
__nesc_nxbase_nx_int8_t. . . . . . . .  TYPEDEF  -----  CHAR     -----  1
CC2430_SLEEP_POWERMODE_0 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON2_P2IF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_int64_t . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  8
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  8
SchedulerBasicP__Scheduler__taskLoop .  STATIC   CODE   PROC     0000H  -----
  __nesc_atomic. . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0001H  1
  nextTask . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
CC2430_TIMER3_4_DIV_4. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_POWERMODE_1 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nxle_int16_t . . . . . .  TYPEDEF  -----  INT      -----  2
cc2430_timerMAC_T2PEROF2_t . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_SLEEP_POWERMODE_2 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_STIE . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
drand48__data. . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  19
  __x. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  6
  __old_x. . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0006H  6
  __c. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000CH  2
  __init . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    000EH  2
  __a. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0010H  3
TestLedPinC__Leds__led0On. . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_SLEEP_POWERMODE_3 . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_1000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
int_least8_t . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
TestLedPinC__Leds__led1On. . . . . . .  STATIC   CODE   PROC     0000H  -----
RealMainP__Scheduler__taskLoop . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_T2PEROF2_OFCMPIM. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_2000 . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led0__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMER3_4_DIV_8. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T34CTL_MODE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led1__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RFSTATUS_CCA. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_MDMCTRL0H_RESERVED_FRAME_MODE .  E_CONST  -----  U_CHAR   -----  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
LedsP__Led2__makeOutput. . . . . . . .  STATIC   CODE   PROC     0000H  -----
cc2430_timer3_4_prescaler_t. . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERWDT_8192 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_TX_ACTIVE. . . . . . .  E_CONST  -----  U_CHAR   -----  1
ERETRY . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CCTLx_MODE. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_atomic_start. . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  tmp. . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_IEN0_URX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN0_URX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintmax_t. . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
TestLedPinC__lighton . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 33  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_TIMIF_T3CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_fast8_t . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
CC2430_TIMIF_T3CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMIF_T4CH0IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMPIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
random__data . . . . . . . . . . . . .  * TAG *  -----  STRUCT   -----  18
  fptr . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rptr . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
  state. . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0006H  3
  rand_type. . . . . . . . . . . . . .  MEMBER   -----  INT      0009H  2
  rand_deg . . . . . . . . . . . . . .  MEMBER   -----  INT      000BH  2
  rand_sep . . . . . . . . . . . . . .  MEMBER   -----  INT      000DH  2
  end_ptr. . . . . . . . . . . . . . .  MEMBER   -----  PTR      000FH  3
CC2430_TIMIF_T4CH1IF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH0IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_UTX0IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timerWDT_mode_t . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1_CH1IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_CLKCON_TICKSPD. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IEN2_UTX1IE . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led0__clr . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_TIMERMAC_MODE_RUN . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1_CH2IF. . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_128 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ERESERVE . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led1__clr . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_OSC32K . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
___nesc_atomic_end . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  oldSreg. . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T34CTL_MODE_MASK. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_RUN . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T2CNF_CMSEL . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_OSC_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIM_RREG_PD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
PlatformP__Init__init. . . . . . . . .  STATIC   CODE   PROC     0000H  -----
  new_clkcon . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_PERIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_RREG_ON. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_uint8_t . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
intmax_t . . . . . . . . . . . . . . .  TYPEDEF  -----  PTR      -----  3
int_fast8_t. . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
FALSE. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
wchar_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
cc2430_timerMAC_if_t . . . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_T1CTL_DIV_MASK. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFIF_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
ECANCEL. . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
_SchedulerBasicP__TaskBasic__default__  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  AUTO     XDATA  U_CHAR   0000H  1
LedsP__Led0__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
TestLedPinC____nesc_unnamed4272. . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TIMERWDT_64 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TIMER1_DIV_32 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RFSTATUS_SFD. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uintptr_t. . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
LedsP__Led1__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 34  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


CC2430_TIMER1_MODE_FREE. . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_DIV . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
LedsP__Led2__set . . . . . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_CLKCON_TICKSPD_MASK . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_IRCON_DMAIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
lldiv_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  6
  quot . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0000H  3
  rem. . . . . . . . . . . . . . . . .  MEMBER   -----  PTR      0003H  3
TestLedPinC____nesc_sillytask_lighton.  TYPEDEF  -----  ARRAY    -----  -----
PlatformP__LedsInit__init. . . . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_WDCTL_CLR . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
nxle_int8_t. . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
_SchedulerBasicP__pushTask . . . . . .  STATIC   CODE   PROC     0000H  -----
  id . . . . . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0006H  1
CC2430_RFIM_CSP_INT. . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SchedulerBasicP__NUM_TASKS . . . . . .  E_CONST  -----  U_CHAR   -----  1
nx_bool. . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  1
  nxdata . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  1
__nesc_nxbase_nx_uint32_t. . . . . . .  TYPEDEF  -----  U_LONG   -----  4
RealMainP__Boot__booted. . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_IEN0_ADCIE. . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
RealMainP__PlatformInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_T2CNF_OFCMPIF . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_T1CTL_OVFIF . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
__nesc_nxbase_nx_uint16_t. . . . . . .  TYPEDEF  -----  U_INT    -----  2
__nesc_disable_interrupt . . . . . . .  STATIC   CODE   PROC     0000H  -----
CC2430_RREG_DELAY_31 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_TICKF_DIV_1 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
intptr_t . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
uint_least32_t . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
CC2430_TICKF_DIV_2 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
SLEEP. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
ELAST. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_SLEEP_HFRC_STB. . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint_least16_t . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
CC2430_TIMERWDT_MODE_WDT . . . . . . .  E_CONST  -----  U_CHAR   -----  1
cc2430_timerMAC_T2CNF_t. . . . . . . .  * TAG *  -----  ENUM     -----  -----
CC2430_TICKF_DIV_4 . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
SchedulerBasicP__m_head. . . . . . . .  PUBLIC   XDATA  U_CHAR   0002H  1
RealMainP__SoftwareInit__init. . . . .  STATIC   CODE   PROC     0000H  -----
  __nesc_result. . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
CC2430_WDCTL_INT . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CC2430_RREG_DELAY_63 . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.00   APP                                                                   05/02/2013 16:53:46 PAGE 35  


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
